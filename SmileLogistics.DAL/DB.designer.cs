#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SmileLogistics.DAL
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Smile_Logistics")]
	public partial class DBDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertAgent_PrepaidDetail(Agent_PrepaidDetail instance);
    partial void UpdateAgent_PrepaidDetail(Agent_PrepaidDetail instance);
    partial void DeleteAgent_PrepaidDetail(Agent_PrepaidDetail instance);
    partial void InsertVehicleType(VehicleType instance);
    partial void UpdateVehicleType(VehicleType instance);
    partial void DeleteVehicleType(VehicleType instance);
    partial void InsertAgent_Prepaid(Agent_Prepaid instance);
    partial void UpdateAgent_Prepaid(Agent_Prepaid instance);
    partial void DeleteAgent_Prepaid(Agent_Prepaid instance);
    partial void InsertCustomer_Prepaid(Customer_Prepaid instance);
    partial void UpdateCustomer_Prepaid(Customer_Prepaid instance);
    partial void DeleteCustomer_Prepaid(Customer_Prepaid instance);
    partial void InsertCustomerQuotation_Custom(CustomerQuotation_Custom instance);
    partial void UpdateCustomerQuotation_Custom(CustomerQuotation_Custom instance);
    partial void DeleteCustomerQuotation_Custom(CustomerQuotation_Custom instance);
    partial void InsertCustomerQuotation_CustomsDetail(CustomerQuotation_CustomsDetail instance);
    partial void UpdateCustomerQuotation_CustomsDetail(CustomerQuotation_CustomsDetail instance);
    partial void DeleteCustomerQuotation_CustomsDetail(CustomerQuotation_CustomsDetail instance);
    partial void InsertCustomerQuotation_Route(CustomerQuotation_Route instance);
    partial void UpdateCustomerQuotation_Route(CustomerQuotation_Route instance);
    partial void DeleteCustomerQuotation_Route(CustomerQuotation_Route instance);
    partial void InsertCustomer(Customer instance);
    partial void UpdateCustomer(Customer instance);
    partial void DeleteCustomer(Customer instance);
    partial void InsertCustomsProcess_FeeType(CustomsProcess_FeeType instance);
    partial void UpdateCustomsProcess_FeeType(CustomsProcess_FeeType instance);
    partial void DeleteCustomsProcess_FeeType(CustomsProcess_FeeType instance);
    partial void InsertCustomsProcess_QuotationDetail(CustomsProcess_QuotationDetail instance);
    partial void UpdateCustomsProcess_QuotationDetail(CustomsProcess_QuotationDetail instance);
    partial void DeleteCustomsProcess_QuotationDetail(CustomsProcess_QuotationDetail instance);
    partial void InsertCustomsProcess_Quotation(CustomsProcess_Quotation instance);
    partial void UpdateCustomsProcess_Quotation(CustomsProcess_Quotation instance);
    partial void DeleteCustomsProcess_Quotation(CustomsProcess_Quotation instance);
    partial void InsertGoodsType(GoodsType instance);
    partial void UpdateGoodsType(GoodsType instance);
    partial void DeleteGoodsType(GoodsType instance);
    partial void InsertJob_InOutFee(Job_InOutFee instance);
    partial void UpdateJob_InOutFee(Job_InOutFee instance);
    partial void DeleteJob_InOutFee(Job_InOutFee instance);
    partial void InsertJob_Prepaid(Job_Prepaid instance);
    partial void UpdateJob_Prepaid(Job_Prepaid instance);
    partial void DeleteJob_Prepaid(Job_Prepaid instance);
    partial void InsertJob_QuotationRoute(Job_QuotationRoute instance);
    partial void UpdateJob_QuotationRoute(Job_QuotationRoute instance);
    partial void DeleteJob_QuotationRoute(Job_QuotationRoute instance);
    partial void InsertJob_Working(Job_Working instance);
    partial void UpdateJob_Working(Job_Working instance);
    partial void DeleteJob_Working(Job_Working instance);
    partial void InsertJob(Job instance);
    partial void UpdateJob(Job instance);
    partial void DeleteJob(Job instance);
    partial void InsertQuotation_Route(Quotation_Route instance);
    partial void UpdateQuotation_Route(Quotation_Route instance);
    partial void DeleteQuotation_Route(Quotation_Route instance);
    partial void InsertSys_Module(Sys_Module instance);
    partial void UpdateSys_Module(Sys_Module instance);
    partial void DeleteSys_Module(Sys_Module instance);
    partial void InsertSys_Permission(Sys_Permission instance);
    partial void UpdateSys_Permission(Sys_Permission instance);
    partial void DeleteSys_Permission(Sys_Permission instance);
    partial void InsertSys_Role(Sys_Role instance);
    partial void UpdateSys_Role(Sys_Role instance);
    partial void DeleteSys_Role(Sys_Role instance);
    partial void InsertSys_User(Sys_User instance);
    partial void UpdateSys_User(Sys_User instance);
    partial void DeleteSys_User(Sys_User instance);
    partial void InsertTransportCompany(TransportCompany instance);
    partial void UpdateTransportCompany(TransportCompany instance);
    partial void DeleteTransportCompany(TransportCompany instance);
    partial void InsertTransportCompany_Route(TransportCompany_Route instance);
    partial void UpdateTransportCompany_Route(TransportCompany_Route instance);
    partial void DeleteTransportCompany_Route(TransportCompany_Route instance);
    partial void InsertTransportCompany_VehicleType_Load(TransportCompany_VehicleType_Load instance);
    partial void UpdateTransportCompany_VehicleType_Load(TransportCompany_VehicleType_Load instance);
    partial void DeleteTransportCompany_VehicleType_Load(TransportCompany_VehicleType_Load instance);
    partial void InsertTransportCompany_VehicleType(TransportCompany_VehicleType instance);
    partial void UpdateTransportCompany_VehicleType(TransportCompany_VehicleType instance);
    partial void DeleteTransportCompany_VehicleType(TransportCompany_VehicleType instance);
    partial void InsertTransportPlace(TransportPlace instance);
    partial void UpdateTransportPlace(TransportPlace instance);
    partial void DeleteTransportPlace(TransportPlace instance);
    partial void InsertVehicleLoad(VehicleLoad instance);
    partial void UpdateVehicleLoad(VehicleLoad instance);
    partial void DeleteVehicleLoad(VehicleLoad instance);
    #endregion
		
		public DBDataContext() : 
				base(global::SmileLogistics.DAL.Properties.Settings.Default.Smile_LogisticsConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DBDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DBDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DBDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DBDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Agent_PrepaidDetail> Agent_PrepaidDetails
		{
			get
			{
				return this.GetTable<Agent_PrepaidDetail>();
			}
		}
		
		public System.Data.Linq.Table<VehicleType> VehicleTypes
		{
			get
			{
				return this.GetTable<VehicleType>();
			}
		}
		
		public System.Data.Linq.Table<Agent_Prepaid> Agent_Prepaids
		{
			get
			{
				return this.GetTable<Agent_Prepaid>();
			}
		}
		
		public System.Data.Linq.Table<Customer_Prepaid> Customer_Prepaids
		{
			get
			{
				return this.GetTable<Customer_Prepaid>();
			}
		}
		
		public System.Data.Linq.Table<CustomerQuotation_Custom> CustomerQuotation_Customs
		{
			get
			{
				return this.GetTable<CustomerQuotation_Custom>();
			}
		}
		
		public System.Data.Linq.Table<CustomerQuotation_CustomsDetail> CustomerQuotation_CustomsDetails
		{
			get
			{
				return this.GetTable<CustomerQuotation_CustomsDetail>();
			}
		}
		
		public System.Data.Linq.Table<CustomerQuotation_Route> CustomerQuotation_Routes
		{
			get
			{
				return this.GetTable<CustomerQuotation_Route>();
			}
		}
		
		public System.Data.Linq.Table<Customer> Customers
		{
			get
			{
				return this.GetTable<Customer>();
			}
		}
		
		public System.Data.Linq.Table<CustomsProcess_FeeType> CustomsProcess_FeeTypes
		{
			get
			{
				return this.GetTable<CustomsProcess_FeeType>();
			}
		}
		
		public System.Data.Linq.Table<CustomsProcess_QuotationDetail> CustomsProcess_QuotationDetails
		{
			get
			{
				return this.GetTable<CustomsProcess_QuotationDetail>();
			}
		}
		
		public System.Data.Linq.Table<CustomsProcess_Quotation> CustomsProcess_Quotations
		{
			get
			{
				return this.GetTable<CustomsProcess_Quotation>();
			}
		}
		
		public System.Data.Linq.Table<GoodsType> GoodsTypes
		{
			get
			{
				return this.GetTable<GoodsType>();
			}
		}
		
		public System.Data.Linq.Table<Job_InOutFee> Job_InOutFees
		{
			get
			{
				return this.GetTable<Job_InOutFee>();
			}
		}
		
		public System.Data.Linq.Table<Job_Prepaid> Job_Prepaids
		{
			get
			{
				return this.GetTable<Job_Prepaid>();
			}
		}
		
		public System.Data.Linq.Table<Job_QuotationRoute> Job_QuotationRoutes
		{
			get
			{
				return this.GetTable<Job_QuotationRoute>();
			}
		}
		
		public System.Data.Linq.Table<Job_Working> Job_Workings
		{
			get
			{
				return this.GetTable<Job_Working>();
			}
		}
		
		public System.Data.Linq.Table<Job> Jobs
		{
			get
			{
				return this.GetTable<Job>();
			}
		}
		
		public System.Data.Linq.Table<Quotation_Route> Quotation_Routes
		{
			get
			{
				return this.GetTable<Quotation_Route>();
			}
		}
		
		public System.Data.Linq.Table<Sys_Module> Sys_Modules
		{
			get
			{
				return this.GetTable<Sys_Module>();
			}
		}
		
		public System.Data.Linq.Table<Sys_Permission> Sys_Permissions
		{
			get
			{
				return this.GetTable<Sys_Permission>();
			}
		}
		
		public System.Data.Linq.Table<Sys_Role> Sys_Roles
		{
			get
			{
				return this.GetTable<Sys_Role>();
			}
		}
		
		public System.Data.Linq.Table<Sys_User> Sys_Users
		{
			get
			{
				return this.GetTable<Sys_User>();
			}
		}
		
		public System.Data.Linq.Table<TransportCompany> TransportCompanies
		{
			get
			{
				return this.GetTable<TransportCompany>();
			}
		}
		
		public System.Data.Linq.Table<TransportCompany_Route> TransportCompany_Routes
		{
			get
			{
				return this.GetTable<TransportCompany_Route>();
			}
		}
		
		public System.Data.Linq.Table<TransportCompany_VehicleType_Load> TransportCompany_VehicleType_Loads
		{
			get
			{
				return this.GetTable<TransportCompany_VehicleType_Load>();
			}
		}
		
		public System.Data.Linq.Table<TransportCompany_VehicleType> TransportCompany_VehicleTypes
		{
			get
			{
				return this.GetTable<TransportCompany_VehicleType>();
			}
		}
		
		public System.Data.Linq.Table<TransportPlace> TransportPlaces
		{
			get
			{
				return this.GetTable<TransportPlace>();
			}
		}
		
		public System.Data.Linq.Table<VehicleLoad> VehicleLoads
		{
			get
			{
				return this.GetTable<VehicleLoad>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Agent_PrepaidDetails")]
	public partial class Agent_PrepaidDetail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _PrepaidID;
		
		private int _WorkingID;
		
		private System.DateTime _PaidDate;
		
		private string _Description;
		
		private double _Money;
		
		private string _AttachedFile;
		
		private bool _IsDeleted;
		
		private System.DateTime _LastestUpdated;
		
		private int _UpdatedBy;
		
		private EntityRef<Agent_Prepaid> _Agent_Prepaid;
		
		private EntityRef<Job_Working> _Job_Working;
		
		private EntityRef<Sys_User> _Sys_User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnPrepaidIDChanging(int value);
    partial void OnPrepaidIDChanged();
    partial void OnWorkingIDChanging(int value);
    partial void OnWorkingIDChanged();
    partial void OnPaidDateChanging(System.DateTime value);
    partial void OnPaidDateChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnMoneyChanging(double value);
    partial void OnMoneyChanged();
    partial void OnAttachedFileChanging(string value);
    partial void OnAttachedFileChanged();
    partial void OnIsDeletedChanging(bool value);
    partial void OnIsDeletedChanged();
    partial void OnLastestUpdatedChanging(System.DateTime value);
    partial void OnLastestUpdatedChanged();
    partial void OnUpdatedByChanging(int value);
    partial void OnUpdatedByChanged();
    #endregion
		
		public Agent_PrepaidDetail()
		{
			this._Agent_Prepaid = default(EntityRef<Agent_Prepaid>);
			this._Job_Working = default(EntityRef<Job_Working>);
			this._Sys_User = default(EntityRef<Sys_User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PrepaidID", DbType="Int NOT NULL")]
		public int PrepaidID
		{
			get
			{
				return this._PrepaidID;
			}
			set
			{
				if ((this._PrepaidID != value))
				{
					if (this._Agent_Prepaid.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPrepaidIDChanging(value);
					this.SendPropertyChanging();
					this._PrepaidID = value;
					this.SendPropertyChanged("PrepaidID");
					this.OnPrepaidIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkingID", DbType="Int NOT NULL")]
		public int WorkingID
		{
			get
			{
				return this._WorkingID;
			}
			set
			{
				if ((this._WorkingID != value))
				{
					if (this._Job_Working.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnWorkingIDChanging(value);
					this.SendPropertyChanging();
					this._WorkingID = value;
					this.SendPropertyChanged("WorkingID");
					this.OnWorkingIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaidDate", DbType="DateTime NOT NULL")]
		public System.DateTime PaidDate
		{
			get
			{
				return this._PaidDate;
			}
			set
			{
				if ((this._PaidDate != value))
				{
					this.OnPaidDateChanging(value);
					this.SendPropertyChanging();
					this._PaidDate = value;
					this.SendPropertyChanged("PaidDate");
					this.OnPaidDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NText NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Money", DbType="Float NOT NULL")]
		public double Money
		{
			get
			{
				return this._Money;
			}
			set
			{
				if ((this._Money != value))
				{
					this.OnMoneyChanging(value);
					this.SendPropertyChanging();
					this._Money = value;
					this.SendPropertyChanged("Money");
					this.OnMoneyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AttachedFile", DbType="NText NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string AttachedFile
		{
			get
			{
				return this._AttachedFile;
			}
			set
			{
				if ((this._AttachedFile != value))
				{
					this.OnAttachedFileChanging(value);
					this.SendPropertyChanging();
					this._AttachedFile = value;
					this.SendPropertyChanged("AttachedFile");
					this.OnAttachedFileChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDeleted", DbType="Bit NOT NULL")]
		public bool IsDeleted
		{
			get
			{
				return this._IsDeleted;
			}
			set
			{
				if ((this._IsDeleted != value))
				{
					this.OnIsDeletedChanging(value);
					this.SendPropertyChanging();
					this._IsDeleted = value;
					this.SendPropertyChanged("IsDeleted");
					this.OnIsDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastestUpdated", DbType="DateTime NOT NULL")]
		public System.DateTime LastestUpdated
		{
			get
			{
				return this._LastestUpdated;
			}
			set
			{
				if ((this._LastestUpdated != value))
				{
					this.OnLastestUpdatedChanging(value);
					this.SendPropertyChanging();
					this._LastestUpdated = value;
					this.SendPropertyChanged("LastestUpdated");
					this.OnLastestUpdatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedBy", DbType="Int NOT NULL")]
		public int UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					if (this._Sys_User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._UpdatedBy = value;
					this.SendPropertyChanged("UpdatedBy");
					this.OnUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Agent_Prepaid_Agent_PrepaidDetail", Storage="_Agent_Prepaid", ThisKey="PrepaidID", OtherKey="ID", IsForeignKey=true)]
		public Agent_Prepaid Agent_Prepaid
		{
			get
			{
				return this._Agent_Prepaid.Entity;
			}
			set
			{
				Agent_Prepaid previousValue = this._Agent_Prepaid.Entity;
				if (((previousValue != value) 
							|| (this._Agent_Prepaid.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Agent_Prepaid.Entity = null;
						previousValue.Agent_PrepaidDetails.Remove(this);
					}
					this._Agent_Prepaid.Entity = value;
					if ((value != null))
					{
						value.Agent_PrepaidDetails.Add(this);
						this._PrepaidID = value.ID;
					}
					else
					{
						this._PrepaidID = default(int);
					}
					this.SendPropertyChanged("Agent_Prepaid");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Job_Working_Agent_PrepaidDetail", Storage="_Job_Working", ThisKey="WorkingID", OtherKey="ID", IsForeignKey=true)]
		public Job_Working Job_Working
		{
			get
			{
				return this._Job_Working.Entity;
			}
			set
			{
				Job_Working previousValue = this._Job_Working.Entity;
				if (((previousValue != value) 
							|| (this._Job_Working.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Job_Working.Entity = null;
						previousValue.Agent_PrepaidDetails.Remove(this);
					}
					this._Job_Working.Entity = value;
					if ((value != null))
					{
						value.Agent_PrepaidDetails.Add(this);
						this._WorkingID = value.ID;
					}
					else
					{
						this._WorkingID = default(int);
					}
					this.SendPropertyChanged("Job_Working");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Sys_User_Agent_PrepaidDetail", Storage="_Sys_User", ThisKey="UpdatedBy", OtherKey="ID", IsForeignKey=true)]
		public Sys_User Sys_User
		{
			get
			{
				return this._Sys_User.Entity;
			}
			set
			{
				Sys_User previousValue = this._Sys_User.Entity;
				if (((previousValue != value) 
							|| (this._Sys_User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Sys_User.Entity = null;
						previousValue.Agent_PrepaidDetails.Remove(this);
					}
					this._Sys_User.Entity = value;
					if ((value != null))
					{
						value.Agent_PrepaidDetails.Add(this);
						this._UpdatedBy = value.ID;
					}
					else
					{
						this._UpdatedBy = default(int);
					}
					this.SendPropertyChanged("Sys_User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.VehicleTypes")]
	public partial class VehicleType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Name;
		
		private string _Code;
		
		private string _Description;
		
		private int _GoodsTypeID;
		
		private bool _IsDeleted;
		
		private int _UpdatedBy;
		
		private System.DateTime _LastestUpdated;
		
		private EntitySet<TransportCompany_VehicleType> _TransportCompany_VehicleTypes;
		
		private EntitySet<VehicleLoad> _VehicleLoads;
		
		private EntityRef<GoodsType> _GoodsType;
		
		private EntityRef<Sys_User> _Sys_User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnGoodsTypeIDChanging(int value);
    partial void OnGoodsTypeIDChanged();
    partial void OnIsDeletedChanging(bool value);
    partial void OnIsDeletedChanged();
    partial void OnUpdatedByChanging(int value);
    partial void OnUpdatedByChanged();
    partial void OnLastestUpdatedChanging(System.DateTime value);
    partial void OnLastestUpdatedChanged();
    #endregion
		
		public VehicleType()
		{
			this._TransportCompany_VehicleTypes = new EntitySet<TransportCompany_VehicleType>(new Action<TransportCompany_VehicleType>(this.attach_TransportCompany_VehicleTypes), new Action<TransportCompany_VehicleType>(this.detach_TransportCompany_VehicleTypes));
			this._VehicleLoads = new EntitySet<VehicleLoad>(new Action<VehicleLoad>(this.attach_VehicleLoads), new Action<VehicleLoad>(this.detach_VehicleLoads));
			this._GoodsType = default(EntityRef<GoodsType>);
			this._Sys_User = default(EntityRef<Sys_User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NText NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GoodsTypeID", DbType="Int NOT NULL")]
		public int GoodsTypeID
		{
			get
			{
				return this._GoodsTypeID;
			}
			set
			{
				if ((this._GoodsTypeID != value))
				{
					if (this._GoodsType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnGoodsTypeIDChanging(value);
					this.SendPropertyChanging();
					this._GoodsTypeID = value;
					this.SendPropertyChanged("GoodsTypeID");
					this.OnGoodsTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDeleted", DbType="Bit NOT NULL")]
		public bool IsDeleted
		{
			get
			{
				return this._IsDeleted;
			}
			set
			{
				if ((this._IsDeleted != value))
				{
					this.OnIsDeletedChanging(value);
					this.SendPropertyChanging();
					this._IsDeleted = value;
					this.SendPropertyChanged("IsDeleted");
					this.OnIsDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedBy", DbType="Int NOT NULL")]
		public int UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					if (this._Sys_User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._UpdatedBy = value;
					this.SendPropertyChanged("UpdatedBy");
					this.OnUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastestUpdated", DbType="DateTime NOT NULL")]
		public System.DateTime LastestUpdated
		{
			get
			{
				return this._LastestUpdated;
			}
			set
			{
				if ((this._LastestUpdated != value))
				{
					this.OnLastestUpdatedChanging(value);
					this.SendPropertyChanging();
					this._LastestUpdated = value;
					this.SendPropertyChanged("LastestUpdated");
					this.OnLastestUpdatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="VehicleType_TransportCompany_VehicleType", Storage="_TransportCompany_VehicleTypes", ThisKey="ID", OtherKey="VehicleTypeID")]
		public EntitySet<TransportCompany_VehicleType> TransportCompany_VehicleTypes
		{
			get
			{
				return this._TransportCompany_VehicleTypes;
			}
			set
			{
				this._TransportCompany_VehicleTypes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="VehicleType_VehicleLoad", Storage="_VehicleLoads", ThisKey="ID", OtherKey="VehicleTypeID")]
		public EntitySet<VehicleLoad> VehicleLoads
		{
			get
			{
				return this._VehicleLoads;
			}
			set
			{
				this._VehicleLoads.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GoodsType_VehicleType", Storage="_GoodsType", ThisKey="GoodsTypeID", OtherKey="ID", IsForeignKey=true)]
		public GoodsType GoodsType
		{
			get
			{
				return this._GoodsType.Entity;
			}
			set
			{
				GoodsType previousValue = this._GoodsType.Entity;
				if (((previousValue != value) 
							|| (this._GoodsType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._GoodsType.Entity = null;
						previousValue.VehicleTypes.Remove(this);
					}
					this._GoodsType.Entity = value;
					if ((value != null))
					{
						value.VehicleTypes.Add(this);
						this._GoodsTypeID = value.ID;
					}
					else
					{
						this._GoodsTypeID = default(int);
					}
					this.SendPropertyChanged("GoodsType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Sys_User_VehicleType", Storage="_Sys_User", ThisKey="UpdatedBy", OtherKey="ID", IsForeignKey=true)]
		public Sys_User Sys_User
		{
			get
			{
				return this._Sys_User.Entity;
			}
			set
			{
				Sys_User previousValue = this._Sys_User.Entity;
				if (((previousValue != value) 
							|| (this._Sys_User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Sys_User.Entity = null;
						previousValue.VehicleTypes.Remove(this);
					}
					this._Sys_User.Entity = value;
					if ((value != null))
					{
						value.VehicleTypes.Add(this);
						this._UpdatedBy = value.ID;
					}
					else
					{
						this._UpdatedBy = default(int);
					}
					this.SendPropertyChanged("Sys_User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TransportCompany_VehicleTypes(TransportCompany_VehicleType entity)
		{
			this.SendPropertyChanging();
			entity.VehicleType = this;
		}
		
		private void detach_TransportCompany_VehicleTypes(TransportCompany_VehicleType entity)
		{
			this.SendPropertyChanging();
			entity.VehicleType = null;
		}
		
		private void attach_VehicleLoads(VehicleLoad entity)
		{
			this.SendPropertyChanging();
			entity.VehicleType = this;
		}
		
		private void detach_VehicleLoads(VehicleLoad entity)
		{
			this.SendPropertyChanging();
			entity.VehicleType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Agent_Prepaids")]
	public partial class Agent_Prepaid : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _JobID;
		
		private int _AgentID;
		
		private System.DateTime _RequestedDate;
		
		private System.DateTime _ConfirmedDate;
		
		private string _Description;
		
		private int _Status;
		
		private double _TotalRequest;
		
		private double _TotalPaid;
		
		private bool _IsDeleted;
		
		private System.DateTime _LastestUpdate;
		
		private int _UpdatedBy;
		
		private EntitySet<Agent_PrepaidDetail> _Agent_PrepaidDetails;
		
		private EntityRef<Job> _Job;
		
		private EntityRef<Sys_User> _Sys_User;
		
		private EntityRef<Sys_User> _Sys_User1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnJobIDChanging(int value);
    partial void OnJobIDChanged();
    partial void OnAgentIDChanging(int value);
    partial void OnAgentIDChanged();
    partial void OnRequestedDateChanging(System.DateTime value);
    partial void OnRequestedDateChanged();
    partial void OnConfirmedDateChanging(System.DateTime value);
    partial void OnConfirmedDateChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    partial void OnTotalRequestChanging(double value);
    partial void OnTotalRequestChanged();
    partial void OnTotalPaidChanging(double value);
    partial void OnTotalPaidChanged();
    partial void OnIsDeletedChanging(bool value);
    partial void OnIsDeletedChanged();
    partial void OnLastestUpdateChanging(System.DateTime value);
    partial void OnLastestUpdateChanged();
    partial void OnUpdatedByChanging(int value);
    partial void OnUpdatedByChanged();
    #endregion
		
		public Agent_Prepaid()
		{
			this._Agent_PrepaidDetails = new EntitySet<Agent_PrepaidDetail>(new Action<Agent_PrepaidDetail>(this.attach_Agent_PrepaidDetails), new Action<Agent_PrepaidDetail>(this.detach_Agent_PrepaidDetails));
			this._Job = default(EntityRef<Job>);
			this._Sys_User = default(EntityRef<Sys_User>);
			this._Sys_User1 = default(EntityRef<Sys_User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JobID", DbType="Int NOT NULL")]
		public int JobID
		{
			get
			{
				return this._JobID;
			}
			set
			{
				if ((this._JobID != value))
				{
					if (this._Job.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnJobIDChanging(value);
					this.SendPropertyChanging();
					this._JobID = value;
					this.SendPropertyChanged("JobID");
					this.OnJobIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AgentID", DbType="Int NOT NULL")]
		public int AgentID
		{
			get
			{
				return this._AgentID;
			}
			set
			{
				if ((this._AgentID != value))
				{
					if (this._Sys_User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAgentIDChanging(value);
					this.SendPropertyChanging();
					this._AgentID = value;
					this.SendPropertyChanged("AgentID");
					this.OnAgentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestedDate", DbType="DateTime NOT NULL")]
		public System.DateTime RequestedDate
		{
			get
			{
				return this._RequestedDate;
			}
			set
			{
				if ((this._RequestedDate != value))
				{
					this.OnRequestedDateChanging(value);
					this.SendPropertyChanging();
					this._RequestedDate = value;
					this.SendPropertyChanged("RequestedDate");
					this.OnRequestedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConfirmedDate", DbType="DateTime NOT NULL")]
		public System.DateTime ConfirmedDate
		{
			get
			{
				return this._ConfirmedDate;
			}
			set
			{
				if ((this._ConfirmedDate != value))
				{
					this.OnConfirmedDateChanging(value);
					this.SendPropertyChanging();
					this._ConfirmedDate = value;
					this.SendPropertyChanged("ConfirmedDate");
					this.OnConfirmedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NText NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalRequest", DbType="Float NOT NULL")]
		public double TotalRequest
		{
			get
			{
				return this._TotalRequest;
			}
			set
			{
				if ((this._TotalRequest != value))
				{
					this.OnTotalRequestChanging(value);
					this.SendPropertyChanging();
					this._TotalRequest = value;
					this.SendPropertyChanged("TotalRequest");
					this.OnTotalRequestChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalPaid", DbType="Float NOT NULL")]
		public double TotalPaid
		{
			get
			{
				return this._TotalPaid;
			}
			set
			{
				if ((this._TotalPaid != value))
				{
					this.OnTotalPaidChanging(value);
					this.SendPropertyChanging();
					this._TotalPaid = value;
					this.SendPropertyChanged("TotalPaid");
					this.OnTotalPaidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDeleted", DbType="Bit NOT NULL")]
		public bool IsDeleted
		{
			get
			{
				return this._IsDeleted;
			}
			set
			{
				if ((this._IsDeleted != value))
				{
					this.OnIsDeletedChanging(value);
					this.SendPropertyChanging();
					this._IsDeleted = value;
					this.SendPropertyChanged("IsDeleted");
					this.OnIsDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastestUpdate", DbType="DateTime NOT NULL")]
		public System.DateTime LastestUpdate
		{
			get
			{
				return this._LastestUpdate;
			}
			set
			{
				if ((this._LastestUpdate != value))
				{
					this.OnLastestUpdateChanging(value);
					this.SendPropertyChanging();
					this._LastestUpdate = value;
					this.SendPropertyChanged("LastestUpdate");
					this.OnLastestUpdateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedBy", DbType="Int NOT NULL")]
		public int UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					if (this._Sys_User1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._UpdatedBy = value;
					this.SendPropertyChanged("UpdatedBy");
					this.OnUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Agent_Prepaid_Agent_PrepaidDetail", Storage="_Agent_PrepaidDetails", ThisKey="ID", OtherKey="PrepaidID")]
		public EntitySet<Agent_PrepaidDetail> Agent_PrepaidDetails
		{
			get
			{
				return this._Agent_PrepaidDetails;
			}
			set
			{
				this._Agent_PrepaidDetails.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Job_Agent_Prepaid", Storage="_Job", ThisKey="JobID", OtherKey="ID", IsForeignKey=true)]
		public Job Job
		{
			get
			{
				return this._Job.Entity;
			}
			set
			{
				Job previousValue = this._Job.Entity;
				if (((previousValue != value) 
							|| (this._Job.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Job.Entity = null;
						previousValue.Agent_Prepaids.Remove(this);
					}
					this._Job.Entity = value;
					if ((value != null))
					{
						value.Agent_Prepaids.Add(this);
						this._JobID = value.ID;
					}
					else
					{
						this._JobID = default(int);
					}
					this.SendPropertyChanged("Job");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Sys_User_Agent_Prepaid", Storage="_Sys_User", ThisKey="AgentID", OtherKey="ID", IsForeignKey=true)]
		public Sys_User Sys_User
		{
			get
			{
				return this._Sys_User.Entity;
			}
			set
			{
				Sys_User previousValue = this._Sys_User.Entity;
				if (((previousValue != value) 
							|| (this._Sys_User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Sys_User.Entity = null;
						previousValue.Agent_Prepaids.Remove(this);
					}
					this._Sys_User.Entity = value;
					if ((value != null))
					{
						value.Agent_Prepaids.Add(this);
						this._AgentID = value.ID;
					}
					else
					{
						this._AgentID = default(int);
					}
					this.SendPropertyChanged("Sys_User");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Sys_User_Agent_Prepaid1", Storage="_Sys_User1", ThisKey="UpdatedBy", OtherKey="ID", IsForeignKey=true)]
		public Sys_User Sys_User1
		{
			get
			{
				return this._Sys_User1.Entity;
			}
			set
			{
				Sys_User previousValue = this._Sys_User1.Entity;
				if (((previousValue != value) 
							|| (this._Sys_User1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Sys_User1.Entity = null;
						previousValue.Agent_Prepaids1.Remove(this);
					}
					this._Sys_User1.Entity = value;
					if ((value != null))
					{
						value.Agent_Prepaids1.Add(this);
						this._UpdatedBy = value.ID;
					}
					else
					{
						this._UpdatedBy = default(int);
					}
					this.SendPropertyChanged("Sys_User1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Agent_PrepaidDetails(Agent_PrepaidDetail entity)
		{
			this.SendPropertyChanging();
			entity.Agent_Prepaid = this;
		}
		
		private void detach_Agent_PrepaidDetails(Agent_PrepaidDetail entity)
		{
			this.SendPropertyChanging();
			entity.Agent_Prepaid = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Customer_Prepaids")]
	public partial class Customer_Prepaid : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _CustomerID;
		
		private double _Money;
		
		private string _Description;
		
		private System.DateTime _PrepaidDate;
		
		private bool _IsDeleted;
		
		private System.DateTime _LastestUpdated;
		
		private int _UpdatedBy;
		
		private EntityRef<Customer> _Customer;
		
		private EntityRef<Sys_User> _Sys_User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnCustomerIDChanging(int value);
    partial void OnCustomerIDChanged();
    partial void OnMoneyChanging(double value);
    partial void OnMoneyChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnPrepaidDateChanging(System.DateTime value);
    partial void OnPrepaidDateChanged();
    partial void OnIsDeletedChanging(bool value);
    partial void OnIsDeletedChanged();
    partial void OnLastestUpdatedChanging(System.DateTime value);
    partial void OnLastestUpdatedChanged();
    partial void OnUpdatedByChanging(int value);
    partial void OnUpdatedByChanged();
    #endregion
		
		public Customer_Prepaid()
		{
			this._Customer = default(EntityRef<Customer>);
			this._Sys_User = default(EntityRef<Sys_User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerID", DbType="Int NOT NULL")]
		public int CustomerID
		{
			get
			{
				return this._CustomerID;
			}
			set
			{
				if ((this._CustomerID != value))
				{
					if (this._Customer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCustomerIDChanging(value);
					this.SendPropertyChanging();
					this._CustomerID = value;
					this.SendPropertyChanged("CustomerID");
					this.OnCustomerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Money", DbType="Float NOT NULL")]
		public double Money
		{
			get
			{
				return this._Money;
			}
			set
			{
				if ((this._Money != value))
				{
					this.OnMoneyChanging(value);
					this.SendPropertyChanging();
					this._Money = value;
					this.SendPropertyChanged("Money");
					this.OnMoneyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NText NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PrepaidDate", DbType="DateTime NOT NULL")]
		public System.DateTime PrepaidDate
		{
			get
			{
				return this._PrepaidDate;
			}
			set
			{
				if ((this._PrepaidDate != value))
				{
					this.OnPrepaidDateChanging(value);
					this.SendPropertyChanging();
					this._PrepaidDate = value;
					this.SendPropertyChanged("PrepaidDate");
					this.OnPrepaidDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDeleted", DbType="Bit NOT NULL")]
		public bool IsDeleted
		{
			get
			{
				return this._IsDeleted;
			}
			set
			{
				if ((this._IsDeleted != value))
				{
					this.OnIsDeletedChanging(value);
					this.SendPropertyChanging();
					this._IsDeleted = value;
					this.SendPropertyChanged("IsDeleted");
					this.OnIsDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastestUpdated", DbType="DateTime NOT NULL")]
		public System.DateTime LastestUpdated
		{
			get
			{
				return this._LastestUpdated;
			}
			set
			{
				if ((this._LastestUpdated != value))
				{
					this.OnLastestUpdatedChanging(value);
					this.SendPropertyChanging();
					this._LastestUpdated = value;
					this.SendPropertyChanged("LastestUpdated");
					this.OnLastestUpdatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedBy", DbType="Int NOT NULL")]
		public int UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					if (this._Sys_User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._UpdatedBy = value;
					this.SendPropertyChanged("UpdatedBy");
					this.OnUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_Customer_Prepaid", Storage="_Customer", ThisKey="CustomerID", OtherKey="ID", IsForeignKey=true)]
		public Customer Customer
		{
			get
			{
				return this._Customer.Entity;
			}
			set
			{
				Customer previousValue = this._Customer.Entity;
				if (((previousValue != value) 
							|| (this._Customer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Customer.Entity = null;
						previousValue.Customer_Prepaids.Remove(this);
					}
					this._Customer.Entity = value;
					if ((value != null))
					{
						value.Customer_Prepaids.Add(this);
						this._CustomerID = value.ID;
					}
					else
					{
						this._CustomerID = default(int);
					}
					this.SendPropertyChanged("Customer");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Sys_User_Customer_Prepaid", Storage="_Sys_User", ThisKey="UpdatedBy", OtherKey="ID", IsForeignKey=true)]
		public Sys_User Sys_User
		{
			get
			{
				return this._Sys_User.Entity;
			}
			set
			{
				Sys_User previousValue = this._Sys_User.Entity;
				if (((previousValue != value) 
							|| (this._Sys_User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Sys_User.Entity = null;
						previousValue.Customer_Prepaids.Remove(this);
					}
					this._Sys_User.Entity = value;
					if ((value != null))
					{
						value.Customer_Prepaids.Add(this);
						this._UpdatedBy = value.ID;
					}
					else
					{
						this._UpdatedBy = default(int);
					}
					this.SendPropertyChanged("Sys_User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CustomerQuotation_Customs")]
	public partial class CustomerQuotation_Custom : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _CustomerID;
		
		private System.DateTime _Expire_Start;
		
		private System.DateTime _Expire_End;
		
		private bool _IsUSD;
		
		private double _USDRate;
		
		private bool _IsDeleted;
		
		private int _UpdatedBy;
		
		private double _Total_In;
		
		private double _Total_Out;
		
		private System.DateTime _LastestUpdated;
		
		private string _Description;
		
		private double _DecreasePercentForSecondCont;
		
		private int _JobID;
		
		private EntitySet<CustomerQuotation_CustomsDetail> _CustomerQuotation_CustomsDetails;
		
		private EntityRef<Job> _Job;
		
		private EntityRef<Sys_User> _Sys_User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnCustomerIDChanging(int value);
    partial void OnCustomerIDChanged();
    partial void OnExpire_StartChanging(System.DateTime value);
    partial void OnExpire_StartChanged();
    partial void OnExpire_EndChanging(System.DateTime value);
    partial void OnExpire_EndChanged();
    partial void OnIsUSDChanging(bool value);
    partial void OnIsUSDChanged();
    partial void OnUSDRateChanging(double value);
    partial void OnUSDRateChanged();
    partial void OnIsDeletedChanging(bool value);
    partial void OnIsDeletedChanged();
    partial void OnUpdatedByChanging(int value);
    partial void OnUpdatedByChanged();
    partial void OnTotal_InChanging(double value);
    partial void OnTotal_InChanged();
    partial void OnTotal_OutChanging(double value);
    partial void OnTotal_OutChanged();
    partial void OnLastestUpdatedChanging(System.DateTime value);
    partial void OnLastestUpdatedChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnDecreasePercentForSecondContChanging(double value);
    partial void OnDecreasePercentForSecondContChanged();
    partial void OnJobIDChanging(int value);
    partial void OnJobIDChanged();
    #endregion
		
		public CustomerQuotation_Custom()
		{
			this._CustomerQuotation_CustomsDetails = new EntitySet<CustomerQuotation_CustomsDetail>(new Action<CustomerQuotation_CustomsDetail>(this.attach_CustomerQuotation_CustomsDetails), new Action<CustomerQuotation_CustomsDetail>(this.detach_CustomerQuotation_CustomsDetails));
			this._Job = default(EntityRef<Job>);
			this._Sys_User = default(EntityRef<Sys_User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerID", DbType="Int NOT NULL")]
		public int CustomerID
		{
			get
			{
				return this._CustomerID;
			}
			set
			{
				if ((this._CustomerID != value))
				{
					this.OnCustomerIDChanging(value);
					this.SendPropertyChanging();
					this._CustomerID = value;
					this.SendPropertyChanged("CustomerID");
					this.OnCustomerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Expire_Start", DbType="DateTime NOT NULL")]
		public System.DateTime Expire_Start
		{
			get
			{
				return this._Expire_Start;
			}
			set
			{
				if ((this._Expire_Start != value))
				{
					this.OnExpire_StartChanging(value);
					this.SendPropertyChanging();
					this._Expire_Start = value;
					this.SendPropertyChanged("Expire_Start");
					this.OnExpire_StartChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Expire_End", DbType="DateTime NOT NULL")]
		public System.DateTime Expire_End
		{
			get
			{
				return this._Expire_End;
			}
			set
			{
				if ((this._Expire_End != value))
				{
					this.OnExpire_EndChanging(value);
					this.SendPropertyChanging();
					this._Expire_End = value;
					this.SendPropertyChanged("Expire_End");
					this.OnExpire_EndChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsUSD", DbType="Bit NOT NULL")]
		public bool IsUSD
		{
			get
			{
				return this._IsUSD;
			}
			set
			{
				if ((this._IsUSD != value))
				{
					this.OnIsUSDChanging(value);
					this.SendPropertyChanging();
					this._IsUSD = value;
					this.SendPropertyChanged("IsUSD");
					this.OnIsUSDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_USDRate", DbType="Float NOT NULL")]
		public double USDRate
		{
			get
			{
				return this._USDRate;
			}
			set
			{
				if ((this._USDRate != value))
				{
					this.OnUSDRateChanging(value);
					this.SendPropertyChanging();
					this._USDRate = value;
					this.SendPropertyChanged("USDRate");
					this.OnUSDRateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDeleted", DbType="Bit NOT NULL")]
		public bool IsDeleted
		{
			get
			{
				return this._IsDeleted;
			}
			set
			{
				if ((this._IsDeleted != value))
				{
					this.OnIsDeletedChanging(value);
					this.SendPropertyChanging();
					this._IsDeleted = value;
					this.SendPropertyChanged("IsDeleted");
					this.OnIsDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedBy", DbType="Int NOT NULL")]
		public int UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					if (this._Sys_User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._UpdatedBy = value;
					this.SendPropertyChanged("UpdatedBy");
					this.OnUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Total_In", DbType="Float NOT NULL")]
		public double Total_In
		{
			get
			{
				return this._Total_In;
			}
			set
			{
				if ((this._Total_In != value))
				{
					this.OnTotal_InChanging(value);
					this.SendPropertyChanging();
					this._Total_In = value;
					this.SendPropertyChanged("Total_In");
					this.OnTotal_InChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Total_Out", DbType="Float NOT NULL")]
		public double Total_Out
		{
			get
			{
				return this._Total_Out;
			}
			set
			{
				if ((this._Total_Out != value))
				{
					this.OnTotal_OutChanging(value);
					this.SendPropertyChanging();
					this._Total_Out = value;
					this.SendPropertyChanged("Total_Out");
					this.OnTotal_OutChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastestUpdated", DbType="DateTime NOT NULL")]
		public System.DateTime LastestUpdated
		{
			get
			{
				return this._LastestUpdated;
			}
			set
			{
				if ((this._LastestUpdated != value))
				{
					this.OnLastestUpdatedChanging(value);
					this.SendPropertyChanging();
					this._LastestUpdated = value;
					this.SendPropertyChanged("LastestUpdated");
					this.OnLastestUpdatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NText NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DecreasePercentForSecondCont", DbType="Float NOT NULL")]
		public double DecreasePercentForSecondCont
		{
			get
			{
				return this._DecreasePercentForSecondCont;
			}
			set
			{
				if ((this._DecreasePercentForSecondCont != value))
				{
					this.OnDecreasePercentForSecondContChanging(value);
					this.SendPropertyChanging();
					this._DecreasePercentForSecondCont = value;
					this.SendPropertyChanged("DecreasePercentForSecondCont");
					this.OnDecreasePercentForSecondContChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JobID", DbType="Int NOT NULL")]
		public int JobID
		{
			get
			{
				return this._JobID;
			}
			set
			{
				if ((this._JobID != value))
				{
					if (this._Job.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnJobIDChanging(value);
					this.SendPropertyChanging();
					this._JobID = value;
					this.SendPropertyChanged("JobID");
					this.OnJobIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CustomerQuotation_Custom_CustomerQuotation_CustomsDetail", Storage="_CustomerQuotation_CustomsDetails", ThisKey="ID", OtherKey="QuotationID")]
		public EntitySet<CustomerQuotation_CustomsDetail> CustomerQuotation_CustomsDetails
		{
			get
			{
				return this._CustomerQuotation_CustomsDetails;
			}
			set
			{
				this._CustomerQuotation_CustomsDetails.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Job_CustomerQuotation_Custom", Storage="_Job", ThisKey="JobID", OtherKey="ID", IsForeignKey=true)]
		public Job Job
		{
			get
			{
				return this._Job.Entity;
			}
			set
			{
				Job previousValue = this._Job.Entity;
				if (((previousValue != value) 
							|| (this._Job.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Job.Entity = null;
						previousValue.CustomerQuotation_Customs.Remove(this);
					}
					this._Job.Entity = value;
					if ((value != null))
					{
						value.CustomerQuotation_Customs.Add(this);
						this._JobID = value.ID;
					}
					else
					{
						this._JobID = default(int);
					}
					this.SendPropertyChanged("Job");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Sys_User_CustomerQuotation_Custom", Storage="_Sys_User", ThisKey="UpdatedBy", OtherKey="ID", IsForeignKey=true)]
		public Sys_User Sys_User
		{
			get
			{
				return this._Sys_User.Entity;
			}
			set
			{
				Sys_User previousValue = this._Sys_User.Entity;
				if (((previousValue != value) 
							|| (this._Sys_User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Sys_User.Entity = null;
						previousValue.CustomerQuotation_Customs.Remove(this);
					}
					this._Sys_User.Entity = value;
					if ((value != null))
					{
						value.CustomerQuotation_Customs.Add(this);
						this._UpdatedBy = value.ID;
					}
					else
					{
						this._UpdatedBy = default(int);
					}
					this.SendPropertyChanged("Sys_User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CustomerQuotation_CustomsDetails(CustomerQuotation_CustomsDetail entity)
		{
			this.SendPropertyChanging();
			entity.CustomerQuotation_Custom = this;
		}
		
		private void detach_CustomerQuotation_CustomsDetails(CustomerQuotation_CustomsDetail entity)
		{
			this.SendPropertyChanging();
			entity.CustomerQuotation_Custom = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CustomerQuotation_CustomsDetails")]
	public partial class CustomerQuotation_CustomsDetail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _QuotationID;
		
		private int _FeeDetailID;
		
		private bool _IsDeleted;
		
		private System.DateTime _LastestUpdated;
		
		private int _UpdatedBy;
		
		private string _Description;
		
		private int _Quantity;
		
		private double _Total;
		
		private int _Order;
		
		private EntityRef<CustomerQuotation_Custom> _CustomerQuotation_Custom;
		
		private EntityRef<CustomsProcess_QuotationDetail> _CustomsProcess_QuotationDetail;
		
		private EntityRef<Sys_User> _Sys_User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnQuotationIDChanging(int value);
    partial void OnQuotationIDChanged();
    partial void OnFeeDetailIDChanging(int value);
    partial void OnFeeDetailIDChanged();
    partial void OnIsDeletedChanging(bool value);
    partial void OnIsDeletedChanged();
    partial void OnLastestUpdatedChanging(System.DateTime value);
    partial void OnLastestUpdatedChanged();
    partial void OnUpdatedByChanging(int value);
    partial void OnUpdatedByChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnQuantityChanging(int value);
    partial void OnQuantityChanged();
    partial void OnTotalChanging(double value);
    partial void OnTotalChanged();
    partial void OnOrderChanging(int value);
    partial void OnOrderChanged();
    #endregion
		
		public CustomerQuotation_CustomsDetail()
		{
			this._CustomerQuotation_Custom = default(EntityRef<CustomerQuotation_Custom>);
			this._CustomsProcess_QuotationDetail = default(EntityRef<CustomsProcess_QuotationDetail>);
			this._Sys_User = default(EntityRef<Sys_User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QuotationID", DbType="Int NOT NULL")]
		public int QuotationID
		{
			get
			{
				return this._QuotationID;
			}
			set
			{
				if ((this._QuotationID != value))
				{
					if (this._CustomerQuotation_Custom.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnQuotationIDChanging(value);
					this.SendPropertyChanging();
					this._QuotationID = value;
					this.SendPropertyChanged("QuotationID");
					this.OnQuotationIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FeeDetailID", DbType="Int NOT NULL")]
		public int FeeDetailID
		{
			get
			{
				return this._FeeDetailID;
			}
			set
			{
				if ((this._FeeDetailID != value))
				{
					if (this._CustomsProcess_QuotationDetail.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFeeDetailIDChanging(value);
					this.SendPropertyChanging();
					this._FeeDetailID = value;
					this.SendPropertyChanged("FeeDetailID");
					this.OnFeeDetailIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDeleted", DbType="Bit NOT NULL")]
		public bool IsDeleted
		{
			get
			{
				return this._IsDeleted;
			}
			set
			{
				if ((this._IsDeleted != value))
				{
					this.OnIsDeletedChanging(value);
					this.SendPropertyChanging();
					this._IsDeleted = value;
					this.SendPropertyChanged("IsDeleted");
					this.OnIsDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastestUpdated", DbType="DateTime NOT NULL")]
		public System.DateTime LastestUpdated
		{
			get
			{
				return this._LastestUpdated;
			}
			set
			{
				if ((this._LastestUpdated != value))
				{
					this.OnLastestUpdatedChanging(value);
					this.SendPropertyChanging();
					this._LastestUpdated = value;
					this.SendPropertyChanged("LastestUpdated");
					this.OnLastestUpdatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedBy", DbType="Int NOT NULL")]
		public int UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					if (this._Sys_User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._UpdatedBy = value;
					this.SendPropertyChanged("UpdatedBy");
					this.OnUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NText NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantity", DbType="Int NOT NULL")]
		public int Quantity
		{
			get
			{
				return this._Quantity;
			}
			set
			{
				if ((this._Quantity != value))
				{
					this.OnQuantityChanging(value);
					this.SendPropertyChanging();
					this._Quantity = value;
					this.SendPropertyChanged("Quantity");
					this.OnQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Total", DbType="Float NOT NULL")]
		public double Total
		{
			get
			{
				return this._Total;
			}
			set
			{
				if ((this._Total != value))
				{
					this.OnTotalChanging(value);
					this.SendPropertyChanging();
					this._Total = value;
					this.SendPropertyChanged("Total");
					this.OnTotalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Order]", Storage="_Order", DbType="Int NOT NULL")]
		public int Order
		{
			get
			{
				return this._Order;
			}
			set
			{
				if ((this._Order != value))
				{
					this.OnOrderChanging(value);
					this.SendPropertyChanging();
					this._Order = value;
					this.SendPropertyChanged("Order");
					this.OnOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CustomerQuotation_Custom_CustomerQuotation_CustomsDetail", Storage="_CustomerQuotation_Custom", ThisKey="QuotationID", OtherKey="ID", IsForeignKey=true)]
		public CustomerQuotation_Custom CustomerQuotation_Custom
		{
			get
			{
				return this._CustomerQuotation_Custom.Entity;
			}
			set
			{
				CustomerQuotation_Custom previousValue = this._CustomerQuotation_Custom.Entity;
				if (((previousValue != value) 
							|| (this._CustomerQuotation_Custom.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CustomerQuotation_Custom.Entity = null;
						previousValue.CustomerQuotation_CustomsDetails.Remove(this);
					}
					this._CustomerQuotation_Custom.Entity = value;
					if ((value != null))
					{
						value.CustomerQuotation_CustomsDetails.Add(this);
						this._QuotationID = value.ID;
					}
					else
					{
						this._QuotationID = default(int);
					}
					this.SendPropertyChanged("CustomerQuotation_Custom");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CustomsProcess_QuotationDetail_CustomerQuotation_CustomsDetail", Storage="_CustomsProcess_QuotationDetail", ThisKey="FeeDetailID", OtherKey="ID", IsForeignKey=true)]
		public CustomsProcess_QuotationDetail CustomsProcess_QuotationDetail
		{
			get
			{
				return this._CustomsProcess_QuotationDetail.Entity;
			}
			set
			{
				CustomsProcess_QuotationDetail previousValue = this._CustomsProcess_QuotationDetail.Entity;
				if (((previousValue != value) 
							|| (this._CustomsProcess_QuotationDetail.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CustomsProcess_QuotationDetail.Entity = null;
						previousValue.CustomerQuotation_CustomsDetails.Remove(this);
					}
					this._CustomsProcess_QuotationDetail.Entity = value;
					if ((value != null))
					{
						value.CustomerQuotation_CustomsDetails.Add(this);
						this._FeeDetailID = value.ID;
					}
					else
					{
						this._FeeDetailID = default(int);
					}
					this.SendPropertyChanged("CustomsProcess_QuotationDetail");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Sys_User_CustomerQuotation_CustomsDetail", Storage="_Sys_User", ThisKey="UpdatedBy", OtherKey="ID", IsForeignKey=true)]
		public Sys_User Sys_User
		{
			get
			{
				return this._Sys_User.Entity;
			}
			set
			{
				Sys_User previousValue = this._Sys_User.Entity;
				if (((previousValue != value) 
							|| (this._Sys_User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Sys_User.Entity = null;
						previousValue.CustomerQuotation_CustomsDetails.Remove(this);
					}
					this._Sys_User.Entity = value;
					if ((value != null))
					{
						value.CustomerQuotation_CustomsDetails.Add(this);
						this._UpdatedBy = value.ID;
					}
					else
					{
						this._UpdatedBy = default(int);
					}
					this.SendPropertyChanged("Sys_User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CustomerQuotation_Routes")]
	public partial class CustomerQuotation_Route : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _CustomerID;
		
		private int _QuotationID;
		
		private double _Price;
		
		private System.DateTime _Expire_Start;
		
		private System.DateTime _Expire_End;
		
		private bool _IsDeleted;
		
		private int _UpdatedBy;
		
		private System.DateTime _LastestUpdated;
		
		private bool _IsUSD;
		
		private System.Nullable<int> _PlaceStart;
		
		private System.Nullable<int> _PlaceEnd;
		
		private EntitySet<Job_QuotationRoute> _Job_QuotationRoutes;
		
		private EntityRef<Customer> _Customer;
		
		private EntityRef<Quotation_Route> _Quotation_Route;
		
		private EntityRef<Sys_User> _Sys_User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnCustomerIDChanging(int value);
    partial void OnCustomerIDChanged();
    partial void OnQuotationIDChanging(int value);
    partial void OnQuotationIDChanged();
    partial void OnPriceChanging(double value);
    partial void OnPriceChanged();
    partial void OnExpire_StartChanging(System.DateTime value);
    partial void OnExpire_StartChanged();
    partial void OnExpire_EndChanging(System.DateTime value);
    partial void OnExpire_EndChanged();
    partial void OnIsDeletedChanging(bool value);
    partial void OnIsDeletedChanged();
    partial void OnUpdatedByChanging(int value);
    partial void OnUpdatedByChanged();
    partial void OnLastestUpdatedChanging(System.DateTime value);
    partial void OnLastestUpdatedChanged();
    partial void OnIsUSDChanging(bool value);
    partial void OnIsUSDChanged();
    partial void OnPlaceStartChanging(System.Nullable<int> value);
    partial void OnPlaceStartChanged();
    partial void OnPlaceEndChanging(System.Nullable<int> value);
    partial void OnPlaceEndChanged();
    #endregion
		
		public CustomerQuotation_Route()
		{
			this._Job_QuotationRoutes = new EntitySet<Job_QuotationRoute>(new Action<Job_QuotationRoute>(this.attach_Job_QuotationRoutes), new Action<Job_QuotationRoute>(this.detach_Job_QuotationRoutes));
			this._Customer = default(EntityRef<Customer>);
			this._Quotation_Route = default(EntityRef<Quotation_Route>);
			this._Sys_User = default(EntityRef<Sys_User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerID", DbType="Int NOT NULL")]
		public int CustomerID
		{
			get
			{
				return this._CustomerID;
			}
			set
			{
				if ((this._CustomerID != value))
				{
					if (this._Customer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCustomerIDChanging(value);
					this.SendPropertyChanging();
					this._CustomerID = value;
					this.SendPropertyChanged("CustomerID");
					this.OnCustomerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QuotationID", DbType="Int NOT NULL")]
		public int QuotationID
		{
			get
			{
				return this._QuotationID;
			}
			set
			{
				if ((this._QuotationID != value))
				{
					if (this._Quotation_Route.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnQuotationIDChanging(value);
					this.SendPropertyChanging();
					this._QuotationID = value;
					this.SendPropertyChanged("QuotationID");
					this.OnQuotationIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Float NOT NULL")]
		public double Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this.OnPriceChanging(value);
					this.SendPropertyChanging();
					this._Price = value;
					this.SendPropertyChanged("Price");
					this.OnPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Expire_Start", DbType="DateTime NOT NULL")]
		public System.DateTime Expire_Start
		{
			get
			{
				return this._Expire_Start;
			}
			set
			{
				if ((this._Expire_Start != value))
				{
					this.OnExpire_StartChanging(value);
					this.SendPropertyChanging();
					this._Expire_Start = value;
					this.SendPropertyChanged("Expire_Start");
					this.OnExpire_StartChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Expire_End", DbType="DateTime NOT NULL")]
		public System.DateTime Expire_End
		{
			get
			{
				return this._Expire_End;
			}
			set
			{
				if ((this._Expire_End != value))
				{
					this.OnExpire_EndChanging(value);
					this.SendPropertyChanging();
					this._Expire_End = value;
					this.SendPropertyChanged("Expire_End");
					this.OnExpire_EndChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDeleted", DbType="Bit NOT NULL")]
		public bool IsDeleted
		{
			get
			{
				return this._IsDeleted;
			}
			set
			{
				if ((this._IsDeleted != value))
				{
					this.OnIsDeletedChanging(value);
					this.SendPropertyChanging();
					this._IsDeleted = value;
					this.SendPropertyChanged("IsDeleted");
					this.OnIsDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedBy", DbType="Int NOT NULL")]
		public int UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					if (this._Sys_User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._UpdatedBy = value;
					this.SendPropertyChanged("UpdatedBy");
					this.OnUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastestUpdated", DbType="DateTime NOT NULL")]
		public System.DateTime LastestUpdated
		{
			get
			{
				return this._LastestUpdated;
			}
			set
			{
				if ((this._LastestUpdated != value))
				{
					this.OnLastestUpdatedChanging(value);
					this.SendPropertyChanging();
					this._LastestUpdated = value;
					this.SendPropertyChanged("LastestUpdated");
					this.OnLastestUpdatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsUSD", DbType="Bit NOT NULL")]
		public bool IsUSD
		{
			get
			{
				return this._IsUSD;
			}
			set
			{
				if ((this._IsUSD != value))
				{
					this.OnIsUSDChanging(value);
					this.SendPropertyChanging();
					this._IsUSD = value;
					this.SendPropertyChanged("IsUSD");
					this.OnIsUSDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlaceStart", DbType="Int")]
		public System.Nullable<int> PlaceStart
		{
			get
			{
				return this._PlaceStart;
			}
			set
			{
				if ((this._PlaceStart != value))
				{
					this.OnPlaceStartChanging(value);
					this.SendPropertyChanging();
					this._PlaceStart = value;
					this.SendPropertyChanged("PlaceStart");
					this.OnPlaceStartChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlaceEnd", DbType="Int")]
		public System.Nullable<int> PlaceEnd
		{
			get
			{
				return this._PlaceEnd;
			}
			set
			{
				if ((this._PlaceEnd != value))
				{
					this.OnPlaceEndChanging(value);
					this.SendPropertyChanging();
					this._PlaceEnd = value;
					this.SendPropertyChanged("PlaceEnd");
					this.OnPlaceEndChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CustomerQuotation_Route_Job_QuotationRoute", Storage="_Job_QuotationRoutes", ThisKey="ID", OtherKey="RouteID")]
		public EntitySet<Job_QuotationRoute> Job_QuotationRoutes
		{
			get
			{
				return this._Job_QuotationRoutes;
			}
			set
			{
				this._Job_QuotationRoutes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_CustomerQuotation_Route", Storage="_Customer", ThisKey="CustomerID", OtherKey="ID", IsForeignKey=true)]
		public Customer Customer
		{
			get
			{
				return this._Customer.Entity;
			}
			set
			{
				Customer previousValue = this._Customer.Entity;
				if (((previousValue != value) 
							|| (this._Customer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Customer.Entity = null;
						previousValue.CustomerQuotation_Routes.Remove(this);
					}
					this._Customer.Entity = value;
					if ((value != null))
					{
						value.CustomerQuotation_Routes.Add(this);
						this._CustomerID = value.ID;
					}
					else
					{
						this._CustomerID = default(int);
					}
					this.SendPropertyChanged("Customer");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Quotation_Route_CustomerQuotation_Route", Storage="_Quotation_Route", ThisKey="QuotationID", OtherKey="ID", IsForeignKey=true)]
		public Quotation_Route Quotation_Route
		{
			get
			{
				return this._Quotation_Route.Entity;
			}
			set
			{
				Quotation_Route previousValue = this._Quotation_Route.Entity;
				if (((previousValue != value) 
							|| (this._Quotation_Route.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Quotation_Route.Entity = null;
						previousValue.CustomerQuotation_Routes.Remove(this);
					}
					this._Quotation_Route.Entity = value;
					if ((value != null))
					{
						value.CustomerQuotation_Routes.Add(this);
						this._QuotationID = value.ID;
					}
					else
					{
						this._QuotationID = default(int);
					}
					this.SendPropertyChanged("Quotation_Route");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Sys_User_CustomerQuotation_Route", Storage="_Sys_User", ThisKey="UpdatedBy", OtherKey="ID", IsForeignKey=true)]
		public Sys_User Sys_User
		{
			get
			{
				return this._Sys_User.Entity;
			}
			set
			{
				Sys_User previousValue = this._Sys_User.Entity;
				if (((previousValue != value) 
							|| (this._Sys_User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Sys_User.Entity = null;
						previousValue.CustomerQuotation_Routes.Remove(this);
					}
					this._Sys_User.Entity = value;
					if ((value != null))
					{
						value.CustomerQuotation_Routes.Add(this);
						this._UpdatedBy = value.ID;
					}
					else
					{
						this._UpdatedBy = default(int);
					}
					this.SendPropertyChanged("Sys_User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Job_QuotationRoutes(Job_QuotationRoute entity)
		{
			this.SendPropertyChanging();
			entity.CustomerQuotation_Route = this;
		}
		
		private void detach_Job_QuotationRoutes(Job_QuotationRoute entity)
		{
			this.SendPropertyChanging();
			entity.CustomerQuotation_Route = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Customers")]
	public partial class Customer : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Name;
		
		private string _Address;
		
		private string _Email;
		
		private string _PhoneNumber;
		
		private bool _IsDeleted;
		
		private System.DateTime _LastestUpdated;
		
		private int _UpdatedBy;
		
		private double _Prepaids;
		
		private EntitySet<Customer_Prepaid> _Customer_Prepaids;
		
		private EntitySet<CustomerQuotation_Route> _CustomerQuotation_Routes;
		
		private EntitySet<Job> _Jobs;
		
		private EntityRef<Sys_User> _Sys_User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnPhoneNumberChanging(string value);
    partial void OnPhoneNumberChanged();
    partial void OnIsDeletedChanging(bool value);
    partial void OnIsDeletedChanged();
    partial void OnLastestUpdatedChanging(System.DateTime value);
    partial void OnLastestUpdatedChanged();
    partial void OnUpdatedByChanging(int value);
    partial void OnUpdatedByChanged();
    partial void OnPrepaidsChanging(double value);
    partial void OnPrepaidsChanged();
    #endregion
		
		public Customer()
		{
			this._Customer_Prepaids = new EntitySet<Customer_Prepaid>(new Action<Customer_Prepaid>(this.attach_Customer_Prepaids), new Action<Customer_Prepaid>(this.detach_Customer_Prepaids));
			this._CustomerQuotation_Routes = new EntitySet<CustomerQuotation_Route>(new Action<CustomerQuotation_Route>(this.attach_CustomerQuotation_Routes), new Action<CustomerQuotation_Route>(this.detach_CustomerQuotation_Routes));
			this._Jobs = new EntitySet<Job>(new Action<Job>(this.attach_Jobs), new Action<Job>(this.detach_Jobs));
			this._Sys_User = default(EntityRef<Sys_User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhoneNumber", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string PhoneNumber
		{
			get
			{
				return this._PhoneNumber;
			}
			set
			{
				if ((this._PhoneNumber != value))
				{
					this.OnPhoneNumberChanging(value);
					this.SendPropertyChanging();
					this._PhoneNumber = value;
					this.SendPropertyChanged("PhoneNumber");
					this.OnPhoneNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDeleted", DbType="Bit NOT NULL")]
		public bool IsDeleted
		{
			get
			{
				return this._IsDeleted;
			}
			set
			{
				if ((this._IsDeleted != value))
				{
					this.OnIsDeletedChanging(value);
					this.SendPropertyChanging();
					this._IsDeleted = value;
					this.SendPropertyChanged("IsDeleted");
					this.OnIsDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastestUpdated", DbType="DateTime NOT NULL")]
		public System.DateTime LastestUpdated
		{
			get
			{
				return this._LastestUpdated;
			}
			set
			{
				if ((this._LastestUpdated != value))
				{
					this.OnLastestUpdatedChanging(value);
					this.SendPropertyChanging();
					this._LastestUpdated = value;
					this.SendPropertyChanged("LastestUpdated");
					this.OnLastestUpdatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedBy", DbType="Int NOT NULL")]
		public int UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					if (this._Sys_User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._UpdatedBy = value;
					this.SendPropertyChanged("UpdatedBy");
					this.OnUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Prepaids", DbType="Float NOT NULL")]
		public double Prepaids
		{
			get
			{
				return this._Prepaids;
			}
			set
			{
				if ((this._Prepaids != value))
				{
					this.OnPrepaidsChanging(value);
					this.SendPropertyChanging();
					this._Prepaids = value;
					this.SendPropertyChanged("Prepaids");
					this.OnPrepaidsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_Customer_Prepaid", Storage="_Customer_Prepaids", ThisKey="ID", OtherKey="CustomerID")]
		public EntitySet<Customer_Prepaid> Customer_Prepaids
		{
			get
			{
				return this._Customer_Prepaids;
			}
			set
			{
				this._Customer_Prepaids.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_CustomerQuotation_Route", Storage="_CustomerQuotation_Routes", ThisKey="ID", OtherKey="CustomerID")]
		public EntitySet<CustomerQuotation_Route> CustomerQuotation_Routes
		{
			get
			{
				return this._CustomerQuotation_Routes;
			}
			set
			{
				this._CustomerQuotation_Routes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_Job", Storage="_Jobs", ThisKey="ID", OtherKey="CustomerID")]
		public EntitySet<Job> Jobs
		{
			get
			{
				return this._Jobs;
			}
			set
			{
				this._Jobs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Sys_User_Customer", Storage="_Sys_User", ThisKey="UpdatedBy", OtherKey="ID", IsForeignKey=true)]
		public Sys_User Sys_User
		{
			get
			{
				return this._Sys_User.Entity;
			}
			set
			{
				Sys_User previousValue = this._Sys_User.Entity;
				if (((previousValue != value) 
							|| (this._Sys_User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Sys_User.Entity = null;
						previousValue.Customers.Remove(this);
					}
					this._Sys_User.Entity = value;
					if ((value != null))
					{
						value.Customers.Add(this);
						this._UpdatedBy = value.ID;
					}
					else
					{
						this._UpdatedBy = default(int);
					}
					this.SendPropertyChanged("Sys_User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Customer_Prepaids(Customer_Prepaid entity)
		{
			this.SendPropertyChanging();
			entity.Customer = this;
		}
		
		private void detach_Customer_Prepaids(Customer_Prepaid entity)
		{
			this.SendPropertyChanging();
			entity.Customer = null;
		}
		
		private void attach_CustomerQuotation_Routes(CustomerQuotation_Route entity)
		{
			this.SendPropertyChanging();
			entity.Customer = this;
		}
		
		private void detach_CustomerQuotation_Routes(CustomerQuotation_Route entity)
		{
			this.SendPropertyChanging();
			entity.Customer = null;
		}
		
		private void attach_Jobs(Job entity)
		{
			this.SendPropertyChanging();
			entity.Customer = this;
		}
		
		private void detach_Jobs(Job entity)
		{
			this.SendPropertyChanging();
			entity.Customer = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CustomsProcess_FeeTypes")]
	public partial class CustomsProcess_FeeType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Name;
		
		private string _Description;
		
		private bool _IsDeleted;
		
		private System.DateTime _LastestUpdated;
		
		private int _UpdatedBy;
		
		private EntitySet<CustomsProcess_QuotationDetail> _CustomsProcess_QuotationDetails;
		
		private EntityRef<Sys_User> _Sys_User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnIsDeletedChanging(bool value);
    partial void OnIsDeletedChanged();
    partial void OnLastestUpdatedChanging(System.DateTime value);
    partial void OnLastestUpdatedChanged();
    partial void OnUpdatedByChanging(int value);
    partial void OnUpdatedByChanged();
    #endregion
		
		public CustomsProcess_FeeType()
		{
			this._CustomsProcess_QuotationDetails = new EntitySet<CustomsProcess_QuotationDetail>(new Action<CustomsProcess_QuotationDetail>(this.attach_CustomsProcess_QuotationDetails), new Action<CustomsProcess_QuotationDetail>(this.detach_CustomsProcess_QuotationDetails));
			this._Sys_User = default(EntityRef<Sys_User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NText NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDeleted", DbType="Bit NOT NULL")]
		public bool IsDeleted
		{
			get
			{
				return this._IsDeleted;
			}
			set
			{
				if ((this._IsDeleted != value))
				{
					this.OnIsDeletedChanging(value);
					this.SendPropertyChanging();
					this._IsDeleted = value;
					this.SendPropertyChanged("IsDeleted");
					this.OnIsDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastestUpdated", DbType="DateTime NOT NULL")]
		public System.DateTime LastestUpdated
		{
			get
			{
				return this._LastestUpdated;
			}
			set
			{
				if ((this._LastestUpdated != value))
				{
					this.OnLastestUpdatedChanging(value);
					this.SendPropertyChanging();
					this._LastestUpdated = value;
					this.SendPropertyChanged("LastestUpdated");
					this.OnLastestUpdatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedBy", DbType="Int NOT NULL")]
		public int UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					if (this._Sys_User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._UpdatedBy = value;
					this.SendPropertyChanged("UpdatedBy");
					this.OnUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CustomsProcess_FeeType_CustomsProcess_QuotationDetail", Storage="_CustomsProcess_QuotationDetails", ThisKey="ID", OtherKey="CustomsFeeID")]
		public EntitySet<CustomsProcess_QuotationDetail> CustomsProcess_QuotationDetails
		{
			get
			{
				return this._CustomsProcess_QuotationDetails;
			}
			set
			{
				this._CustomsProcess_QuotationDetails.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Sys_User_CustomsProcess_FeeType", Storage="_Sys_User", ThisKey="UpdatedBy", OtherKey="ID", IsForeignKey=true)]
		public Sys_User Sys_User
		{
			get
			{
				return this._Sys_User.Entity;
			}
			set
			{
				Sys_User previousValue = this._Sys_User.Entity;
				if (((previousValue != value) 
							|| (this._Sys_User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Sys_User.Entity = null;
						previousValue.CustomsProcess_FeeTypes.Remove(this);
					}
					this._Sys_User.Entity = value;
					if ((value != null))
					{
						value.CustomsProcess_FeeTypes.Add(this);
						this._UpdatedBy = value.ID;
					}
					else
					{
						this._UpdatedBy = default(int);
					}
					this.SendPropertyChanged("Sys_User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CustomsProcess_QuotationDetails(CustomsProcess_QuotationDetail entity)
		{
			this.SendPropertyChanging();
			entity.CustomsProcess_FeeType = this;
		}
		
		private void detach_CustomsProcess_QuotationDetails(CustomsProcess_QuotationDetail entity)
		{
			this.SendPropertyChanging();
			entity.CustomsProcess_FeeType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CustomsProcess_QuotationDetails")]
	public partial class CustomsProcess_QuotationDetail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _QuotationID;
		
		private int _CustomsFeeID;
		
		private double _Price;
		
		private bool _IsDeleted;
		
		private System.DateTime _LastestUpdated;
		
		private int _UpdatedBy;
		
		private EntitySet<CustomerQuotation_CustomsDetail> _CustomerQuotation_CustomsDetails;
		
		private EntityRef<CustomsProcess_FeeType> _CustomsProcess_FeeType;
		
		private EntityRef<CustomsProcess_Quotation> _CustomsProcess_Quotation;
		
		private EntityRef<Sys_User> _Sys_User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnQuotationIDChanging(int value);
    partial void OnQuotationIDChanged();
    partial void OnCustomsFeeIDChanging(int value);
    partial void OnCustomsFeeIDChanged();
    partial void OnPriceChanging(double value);
    partial void OnPriceChanged();
    partial void OnIsDeletedChanging(bool value);
    partial void OnIsDeletedChanged();
    partial void OnLastestUpdatedChanging(System.DateTime value);
    partial void OnLastestUpdatedChanged();
    partial void OnUpdatedByChanging(int value);
    partial void OnUpdatedByChanged();
    #endregion
		
		public CustomsProcess_QuotationDetail()
		{
			this._CustomerQuotation_CustomsDetails = new EntitySet<CustomerQuotation_CustomsDetail>(new Action<CustomerQuotation_CustomsDetail>(this.attach_CustomerQuotation_CustomsDetails), new Action<CustomerQuotation_CustomsDetail>(this.detach_CustomerQuotation_CustomsDetails));
			this._CustomsProcess_FeeType = default(EntityRef<CustomsProcess_FeeType>);
			this._CustomsProcess_Quotation = default(EntityRef<CustomsProcess_Quotation>);
			this._Sys_User = default(EntityRef<Sys_User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QuotationID", DbType="Int NOT NULL")]
		public int QuotationID
		{
			get
			{
				return this._QuotationID;
			}
			set
			{
				if ((this._QuotationID != value))
				{
					if (this._CustomsProcess_Quotation.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnQuotationIDChanging(value);
					this.SendPropertyChanging();
					this._QuotationID = value;
					this.SendPropertyChanged("QuotationID");
					this.OnQuotationIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomsFeeID", DbType="Int NOT NULL")]
		public int CustomsFeeID
		{
			get
			{
				return this._CustomsFeeID;
			}
			set
			{
				if ((this._CustomsFeeID != value))
				{
					if (this._CustomsProcess_FeeType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCustomsFeeIDChanging(value);
					this.SendPropertyChanging();
					this._CustomsFeeID = value;
					this.SendPropertyChanged("CustomsFeeID");
					this.OnCustomsFeeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Float NOT NULL")]
		public double Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this.OnPriceChanging(value);
					this.SendPropertyChanging();
					this._Price = value;
					this.SendPropertyChanged("Price");
					this.OnPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDeleted", DbType="Bit NOT NULL")]
		public bool IsDeleted
		{
			get
			{
				return this._IsDeleted;
			}
			set
			{
				if ((this._IsDeleted != value))
				{
					this.OnIsDeletedChanging(value);
					this.SendPropertyChanging();
					this._IsDeleted = value;
					this.SendPropertyChanged("IsDeleted");
					this.OnIsDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastestUpdated", DbType="DateTime NOT NULL")]
		public System.DateTime LastestUpdated
		{
			get
			{
				return this._LastestUpdated;
			}
			set
			{
				if ((this._LastestUpdated != value))
				{
					this.OnLastestUpdatedChanging(value);
					this.SendPropertyChanging();
					this._LastestUpdated = value;
					this.SendPropertyChanged("LastestUpdated");
					this.OnLastestUpdatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedBy", DbType="Int NOT NULL")]
		public int UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					if (this._Sys_User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._UpdatedBy = value;
					this.SendPropertyChanged("UpdatedBy");
					this.OnUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CustomsProcess_QuotationDetail_CustomerQuotation_CustomsDetail", Storage="_CustomerQuotation_CustomsDetails", ThisKey="ID", OtherKey="FeeDetailID")]
		public EntitySet<CustomerQuotation_CustomsDetail> CustomerQuotation_CustomsDetails
		{
			get
			{
				return this._CustomerQuotation_CustomsDetails;
			}
			set
			{
				this._CustomerQuotation_CustomsDetails.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CustomsProcess_FeeType_CustomsProcess_QuotationDetail", Storage="_CustomsProcess_FeeType", ThisKey="CustomsFeeID", OtherKey="ID", IsForeignKey=true)]
		public CustomsProcess_FeeType CustomsProcess_FeeType
		{
			get
			{
				return this._CustomsProcess_FeeType.Entity;
			}
			set
			{
				CustomsProcess_FeeType previousValue = this._CustomsProcess_FeeType.Entity;
				if (((previousValue != value) 
							|| (this._CustomsProcess_FeeType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CustomsProcess_FeeType.Entity = null;
						previousValue.CustomsProcess_QuotationDetails.Remove(this);
					}
					this._CustomsProcess_FeeType.Entity = value;
					if ((value != null))
					{
						value.CustomsProcess_QuotationDetails.Add(this);
						this._CustomsFeeID = value.ID;
					}
					else
					{
						this._CustomsFeeID = default(int);
					}
					this.SendPropertyChanged("CustomsProcess_FeeType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CustomsProcess_Quotation_CustomsProcess_QuotationDetail", Storage="_CustomsProcess_Quotation", ThisKey="QuotationID", OtherKey="ID", IsForeignKey=true)]
		public CustomsProcess_Quotation CustomsProcess_Quotation
		{
			get
			{
				return this._CustomsProcess_Quotation.Entity;
			}
			set
			{
				CustomsProcess_Quotation previousValue = this._CustomsProcess_Quotation.Entity;
				if (((previousValue != value) 
							|| (this._CustomsProcess_Quotation.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CustomsProcess_Quotation.Entity = null;
						previousValue.CustomsProcess_QuotationDetails.Remove(this);
					}
					this._CustomsProcess_Quotation.Entity = value;
					if ((value != null))
					{
						value.CustomsProcess_QuotationDetails.Add(this);
						this._QuotationID = value.ID;
					}
					else
					{
						this._QuotationID = default(int);
					}
					this.SendPropertyChanged("CustomsProcess_Quotation");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Sys_User_CustomsProcess_QuotationDetail", Storage="_Sys_User", ThisKey="UpdatedBy", OtherKey="ID", IsForeignKey=true)]
		public Sys_User Sys_User
		{
			get
			{
				return this._Sys_User.Entity;
			}
			set
			{
				Sys_User previousValue = this._Sys_User.Entity;
				if (((previousValue != value) 
							|| (this._Sys_User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Sys_User.Entity = null;
						previousValue.CustomsProcess_QuotationDetails.Remove(this);
					}
					this._Sys_User.Entity = value;
					if ((value != null))
					{
						value.CustomsProcess_QuotationDetails.Add(this);
						this._UpdatedBy = value.ID;
					}
					else
					{
						this._UpdatedBy = default(int);
					}
					this.SendPropertyChanged("Sys_User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CustomerQuotation_CustomsDetails(CustomerQuotation_CustomsDetail entity)
		{
			this.SendPropertyChanging();
			entity.CustomsProcess_QuotationDetail = this;
		}
		
		private void detach_CustomerQuotation_CustomsDetails(CustomerQuotation_CustomsDetail entity)
		{
			this.SendPropertyChanging();
			entity.CustomsProcess_QuotationDetail = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CustomsProcess_Quotations")]
	public partial class CustomsProcess_Quotation : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.DateTime _ExpireFrom;
		
		private bool _IsDeleted;
		
		private System.DateTime _LastestUpdated;
		
		private int _UpdatedBy;
		
		private bool _IsUSD;
		
		private EntitySet<CustomsProcess_QuotationDetail> _CustomsProcess_QuotationDetails;
		
		private EntityRef<Sys_User> _Sys_User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnExpireFromChanging(System.DateTime value);
    partial void OnExpireFromChanged();
    partial void OnIsDeletedChanging(bool value);
    partial void OnIsDeletedChanged();
    partial void OnLastestUpdatedChanging(System.DateTime value);
    partial void OnLastestUpdatedChanged();
    partial void OnUpdatedByChanging(int value);
    partial void OnUpdatedByChanged();
    partial void OnIsUSDChanging(bool value);
    partial void OnIsUSDChanged();
    #endregion
		
		public CustomsProcess_Quotation()
		{
			this._CustomsProcess_QuotationDetails = new EntitySet<CustomsProcess_QuotationDetail>(new Action<CustomsProcess_QuotationDetail>(this.attach_CustomsProcess_QuotationDetails), new Action<CustomsProcess_QuotationDetail>(this.detach_CustomsProcess_QuotationDetails));
			this._Sys_User = default(EntityRef<Sys_User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExpireFrom", DbType="DateTime NOT NULL")]
		public System.DateTime ExpireFrom
		{
			get
			{
				return this._ExpireFrom;
			}
			set
			{
				if ((this._ExpireFrom != value))
				{
					this.OnExpireFromChanging(value);
					this.SendPropertyChanging();
					this._ExpireFrom = value;
					this.SendPropertyChanged("ExpireFrom");
					this.OnExpireFromChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDeleted", DbType="Bit NOT NULL")]
		public bool IsDeleted
		{
			get
			{
				return this._IsDeleted;
			}
			set
			{
				if ((this._IsDeleted != value))
				{
					this.OnIsDeletedChanging(value);
					this.SendPropertyChanging();
					this._IsDeleted = value;
					this.SendPropertyChanged("IsDeleted");
					this.OnIsDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastestUpdated", DbType="DateTime NOT NULL")]
		public System.DateTime LastestUpdated
		{
			get
			{
				return this._LastestUpdated;
			}
			set
			{
				if ((this._LastestUpdated != value))
				{
					this.OnLastestUpdatedChanging(value);
					this.SendPropertyChanging();
					this._LastestUpdated = value;
					this.SendPropertyChanged("LastestUpdated");
					this.OnLastestUpdatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedBy", DbType="Int NOT NULL")]
		public int UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					if (this._Sys_User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._UpdatedBy = value;
					this.SendPropertyChanged("UpdatedBy");
					this.OnUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsUSD", DbType="Bit NOT NULL")]
		public bool IsUSD
		{
			get
			{
				return this._IsUSD;
			}
			set
			{
				if ((this._IsUSD != value))
				{
					this.OnIsUSDChanging(value);
					this.SendPropertyChanging();
					this._IsUSD = value;
					this.SendPropertyChanged("IsUSD");
					this.OnIsUSDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CustomsProcess_Quotation_CustomsProcess_QuotationDetail", Storage="_CustomsProcess_QuotationDetails", ThisKey="ID", OtherKey="QuotationID")]
		public EntitySet<CustomsProcess_QuotationDetail> CustomsProcess_QuotationDetails
		{
			get
			{
				return this._CustomsProcess_QuotationDetails;
			}
			set
			{
				this._CustomsProcess_QuotationDetails.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Sys_User_CustomsProcess_Quotation", Storage="_Sys_User", ThisKey="UpdatedBy", OtherKey="ID", IsForeignKey=true)]
		public Sys_User Sys_User
		{
			get
			{
				return this._Sys_User.Entity;
			}
			set
			{
				Sys_User previousValue = this._Sys_User.Entity;
				if (((previousValue != value) 
							|| (this._Sys_User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Sys_User.Entity = null;
						previousValue.CustomsProcess_Quotations.Remove(this);
					}
					this._Sys_User.Entity = value;
					if ((value != null))
					{
						value.CustomsProcess_Quotations.Add(this);
						this._UpdatedBy = value.ID;
					}
					else
					{
						this._UpdatedBy = default(int);
					}
					this.SendPropertyChanged("Sys_User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CustomsProcess_QuotationDetails(CustomsProcess_QuotationDetail entity)
		{
			this.SendPropertyChanging();
			entity.CustomsProcess_Quotation = this;
		}
		
		private void detach_CustomsProcess_QuotationDetails(CustomsProcess_QuotationDetail entity)
		{
			this.SendPropertyChanging();
			entity.CustomsProcess_Quotation = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.GoodsTypes")]
	public partial class GoodsType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Name;
		
		private string _Code;
		
		private string _Description;
		
		private bool _IsDeleted;
		
		private int _UpdatedBy;
		
		private System.DateTime _LastestUpdated;
		
		private EntitySet<VehicleType> _VehicleTypes;
		
		private EntityRef<Sys_User> _Sys_User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnIsDeletedChanging(bool value);
    partial void OnIsDeletedChanged();
    partial void OnUpdatedByChanging(int value);
    partial void OnUpdatedByChanged();
    partial void OnLastestUpdatedChanging(System.DateTime value);
    partial void OnLastestUpdatedChanged();
    #endregion
		
		public GoodsType()
		{
			this._VehicleTypes = new EntitySet<VehicleType>(new Action<VehicleType>(this.attach_VehicleTypes), new Action<VehicleType>(this.detach_VehicleTypes));
			this._Sys_User = default(EntityRef<Sys_User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NText NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDeleted", DbType="Bit NOT NULL")]
		public bool IsDeleted
		{
			get
			{
				return this._IsDeleted;
			}
			set
			{
				if ((this._IsDeleted != value))
				{
					this.OnIsDeletedChanging(value);
					this.SendPropertyChanging();
					this._IsDeleted = value;
					this.SendPropertyChanged("IsDeleted");
					this.OnIsDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedBy", DbType="Int NOT NULL")]
		public int UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					if (this._Sys_User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._UpdatedBy = value;
					this.SendPropertyChanged("UpdatedBy");
					this.OnUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastestUpdated", DbType="DateTime NOT NULL")]
		public System.DateTime LastestUpdated
		{
			get
			{
				return this._LastestUpdated;
			}
			set
			{
				if ((this._LastestUpdated != value))
				{
					this.OnLastestUpdatedChanging(value);
					this.SendPropertyChanging();
					this._LastestUpdated = value;
					this.SendPropertyChanged("LastestUpdated");
					this.OnLastestUpdatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GoodsType_VehicleType", Storage="_VehicleTypes", ThisKey="ID", OtherKey="GoodsTypeID")]
		public EntitySet<VehicleType> VehicleTypes
		{
			get
			{
				return this._VehicleTypes;
			}
			set
			{
				this._VehicleTypes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Sys_User_GoodsType", Storage="_Sys_User", ThisKey="UpdatedBy", OtherKey="ID", IsForeignKey=true)]
		public Sys_User Sys_User
		{
			get
			{
				return this._Sys_User.Entity;
			}
			set
			{
				Sys_User previousValue = this._Sys_User.Entity;
				if (((previousValue != value) 
							|| (this._Sys_User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Sys_User.Entity = null;
						previousValue.GoodsTypes.Remove(this);
					}
					this._Sys_User.Entity = value;
					if ((value != null))
					{
						value.GoodsTypes.Add(this);
						this._UpdatedBy = value.ID;
					}
					else
					{
						this._UpdatedBy = default(int);
					}
					this.SendPropertyChanged("Sys_User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_VehicleTypes(VehicleType entity)
		{
			this.SendPropertyChanging();
			entity.GoodsType = this;
		}
		
		private void detach_VehicleTypes(VehicleType entity)
		{
			this.SendPropertyChanging();
			entity.GoodsType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Job_InOutFees")]
	public partial class Job_InOutFee : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _JobID;
		
		private string _Name;
		
		private string _Company;
		
		private string _InvoiceNO;
		
		private System.DateTime _InvoiceDate;
		
		private double _Money;
		
		private string _AttachedFiles;
		
		private bool _IsDeleted;
		
		private System.DateTime _LastestUpdated;
		
		private int _UpdatedBy;
		
		private bool _IsUSD;
		
		private EntityRef<Job> _Job;
		
		private EntityRef<Sys_User> _Sys_User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnJobIDChanging(int value);
    partial void OnJobIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnCompanyChanging(string value);
    partial void OnCompanyChanged();
    partial void OnInvoiceNOChanging(string value);
    partial void OnInvoiceNOChanged();
    partial void OnInvoiceDateChanging(System.DateTime value);
    partial void OnInvoiceDateChanged();
    partial void OnMoneyChanging(double value);
    partial void OnMoneyChanged();
    partial void OnAttachedFilesChanging(string value);
    partial void OnAttachedFilesChanged();
    partial void OnIsDeletedChanging(bool value);
    partial void OnIsDeletedChanged();
    partial void OnLastestUpdatedChanging(System.DateTime value);
    partial void OnLastestUpdatedChanged();
    partial void OnUpdatedByChanging(int value);
    partial void OnUpdatedByChanged();
    partial void OnIsUSDChanging(bool value);
    partial void OnIsUSDChanged();
    #endregion
		
		public Job_InOutFee()
		{
			this._Job = default(EntityRef<Job>);
			this._Sys_User = default(EntityRef<Sys_User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JobID", DbType="Int NOT NULL")]
		public int JobID
		{
			get
			{
				return this._JobID;
			}
			set
			{
				if ((this._JobID != value))
				{
					if (this._Job.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnJobIDChanging(value);
					this.SendPropertyChanging();
					this._JobID = value;
					this.SendPropertyChanged("JobID");
					this.OnJobIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Company", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Company
		{
			get
			{
				return this._Company;
			}
			set
			{
				if ((this._Company != value))
				{
					this.OnCompanyChanging(value);
					this.SendPropertyChanging();
					this._Company = value;
					this.SendPropertyChanged("Company");
					this.OnCompanyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceNO", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string InvoiceNO
		{
			get
			{
				return this._InvoiceNO;
			}
			set
			{
				if ((this._InvoiceNO != value))
				{
					this.OnInvoiceNOChanging(value);
					this.SendPropertyChanging();
					this._InvoiceNO = value;
					this.SendPropertyChanged("InvoiceNO");
					this.OnInvoiceNOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceDate", DbType="DateTime NOT NULL")]
		public System.DateTime InvoiceDate
		{
			get
			{
				return this._InvoiceDate;
			}
			set
			{
				if ((this._InvoiceDate != value))
				{
					this.OnInvoiceDateChanging(value);
					this.SendPropertyChanging();
					this._InvoiceDate = value;
					this.SendPropertyChanged("InvoiceDate");
					this.OnInvoiceDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Money", DbType="Float NOT NULL")]
		public double Money
		{
			get
			{
				return this._Money;
			}
			set
			{
				if ((this._Money != value))
				{
					this.OnMoneyChanging(value);
					this.SendPropertyChanging();
					this._Money = value;
					this.SendPropertyChanged("Money");
					this.OnMoneyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AttachedFiles", DbType="NText NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string AttachedFiles
		{
			get
			{
				return this._AttachedFiles;
			}
			set
			{
				if ((this._AttachedFiles != value))
				{
					this.OnAttachedFilesChanging(value);
					this.SendPropertyChanging();
					this._AttachedFiles = value;
					this.SendPropertyChanged("AttachedFiles");
					this.OnAttachedFilesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDeleted", DbType="Bit NOT NULL")]
		public bool IsDeleted
		{
			get
			{
				return this._IsDeleted;
			}
			set
			{
				if ((this._IsDeleted != value))
				{
					this.OnIsDeletedChanging(value);
					this.SendPropertyChanging();
					this._IsDeleted = value;
					this.SendPropertyChanged("IsDeleted");
					this.OnIsDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastestUpdated", DbType="DateTime NOT NULL")]
		public System.DateTime LastestUpdated
		{
			get
			{
				return this._LastestUpdated;
			}
			set
			{
				if ((this._LastestUpdated != value))
				{
					this.OnLastestUpdatedChanging(value);
					this.SendPropertyChanging();
					this._LastestUpdated = value;
					this.SendPropertyChanged("LastestUpdated");
					this.OnLastestUpdatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedBy", DbType="Int NOT NULL")]
		public int UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					if (this._Sys_User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._UpdatedBy = value;
					this.SendPropertyChanged("UpdatedBy");
					this.OnUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsUSD", DbType="Bit NOT NULL")]
		public bool IsUSD
		{
			get
			{
				return this._IsUSD;
			}
			set
			{
				if ((this._IsUSD != value))
				{
					this.OnIsUSDChanging(value);
					this.SendPropertyChanging();
					this._IsUSD = value;
					this.SendPropertyChanged("IsUSD");
					this.OnIsUSDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Job_Job_InOutFee", Storage="_Job", ThisKey="JobID", OtherKey="ID", IsForeignKey=true)]
		public Job Job
		{
			get
			{
				return this._Job.Entity;
			}
			set
			{
				Job previousValue = this._Job.Entity;
				if (((previousValue != value) 
							|| (this._Job.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Job.Entity = null;
						previousValue.Job_InOutFees.Remove(this);
					}
					this._Job.Entity = value;
					if ((value != null))
					{
						value.Job_InOutFees.Add(this);
						this._JobID = value.ID;
					}
					else
					{
						this._JobID = default(int);
					}
					this.SendPropertyChanged("Job");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Sys_User_Job_InOutFee", Storage="_Sys_User", ThisKey="UpdatedBy", OtherKey="ID", IsForeignKey=true)]
		public Sys_User Sys_User
		{
			get
			{
				return this._Sys_User.Entity;
			}
			set
			{
				Sys_User previousValue = this._Sys_User.Entity;
				if (((previousValue != value) 
							|| (this._Sys_User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Sys_User.Entity = null;
						previousValue.Job_InOutFees.Remove(this);
					}
					this._Sys_User.Entity = value;
					if ((value != null))
					{
						value.Job_InOutFees.Add(this);
						this._UpdatedBy = value.ID;
					}
					else
					{
						this._UpdatedBy = default(int);
					}
					this.SendPropertyChanged("Sys_User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Job_Prepaids")]
	public partial class Job_Prepaid : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _JobID;
		
		private double _Money;
		
		private string _Description;
		
		private System.DateTime _PrepaidDate;
		
		private bool _IsDeleted;
		
		private System.DateTime _LastestUpdated;
		
		private int _UpdatedBy;
		
		private EntityRef<Job> _Job;
		
		private EntityRef<Sys_User> _Sys_User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnJobIDChanging(int value);
    partial void OnJobIDChanged();
    partial void OnMoneyChanging(double value);
    partial void OnMoneyChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnPrepaidDateChanging(System.DateTime value);
    partial void OnPrepaidDateChanged();
    partial void OnIsDeletedChanging(bool value);
    partial void OnIsDeletedChanged();
    partial void OnLastestUpdatedChanging(System.DateTime value);
    partial void OnLastestUpdatedChanged();
    partial void OnUpdatedByChanging(int value);
    partial void OnUpdatedByChanged();
    #endregion
		
		public Job_Prepaid()
		{
			this._Job = default(EntityRef<Job>);
			this._Sys_User = default(EntityRef<Sys_User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JobID", DbType="Int NOT NULL")]
		public int JobID
		{
			get
			{
				return this._JobID;
			}
			set
			{
				if ((this._JobID != value))
				{
					if (this._Job.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnJobIDChanging(value);
					this.SendPropertyChanging();
					this._JobID = value;
					this.SendPropertyChanged("JobID");
					this.OnJobIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Money", DbType="Float NOT NULL")]
		public double Money
		{
			get
			{
				return this._Money;
			}
			set
			{
				if ((this._Money != value))
				{
					this.OnMoneyChanging(value);
					this.SendPropertyChanging();
					this._Money = value;
					this.SendPropertyChanged("Money");
					this.OnMoneyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NText NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PrepaidDate", DbType="DateTime NOT NULL")]
		public System.DateTime PrepaidDate
		{
			get
			{
				return this._PrepaidDate;
			}
			set
			{
				if ((this._PrepaidDate != value))
				{
					this.OnPrepaidDateChanging(value);
					this.SendPropertyChanging();
					this._PrepaidDate = value;
					this.SendPropertyChanged("PrepaidDate");
					this.OnPrepaidDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDeleted", DbType="Bit NOT NULL")]
		public bool IsDeleted
		{
			get
			{
				return this._IsDeleted;
			}
			set
			{
				if ((this._IsDeleted != value))
				{
					this.OnIsDeletedChanging(value);
					this.SendPropertyChanging();
					this._IsDeleted = value;
					this.SendPropertyChanged("IsDeleted");
					this.OnIsDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastestUpdated", DbType="DateTime NOT NULL")]
		public System.DateTime LastestUpdated
		{
			get
			{
				return this._LastestUpdated;
			}
			set
			{
				if ((this._LastestUpdated != value))
				{
					this.OnLastestUpdatedChanging(value);
					this.SendPropertyChanging();
					this._LastestUpdated = value;
					this.SendPropertyChanged("LastestUpdated");
					this.OnLastestUpdatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedBy", DbType="Int NOT NULL")]
		public int UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					if (this._Sys_User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._UpdatedBy = value;
					this.SendPropertyChanged("UpdatedBy");
					this.OnUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Job_Job_Prepaid", Storage="_Job", ThisKey="JobID", OtherKey="ID", IsForeignKey=true)]
		public Job Job
		{
			get
			{
				return this._Job.Entity;
			}
			set
			{
				Job previousValue = this._Job.Entity;
				if (((previousValue != value) 
							|| (this._Job.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Job.Entity = null;
						previousValue.Job_Prepaids.Remove(this);
					}
					this._Job.Entity = value;
					if ((value != null))
					{
						value.Job_Prepaids.Add(this);
						this._JobID = value.ID;
					}
					else
					{
						this._JobID = default(int);
					}
					this.SendPropertyChanged("Job");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Sys_User_Job_Prepaid", Storage="_Sys_User", ThisKey="UpdatedBy", OtherKey="ID", IsForeignKey=true)]
		public Sys_User Sys_User
		{
			get
			{
				return this._Sys_User.Entity;
			}
			set
			{
				Sys_User previousValue = this._Sys_User.Entity;
				if (((previousValue != value) 
							|| (this._Sys_User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Sys_User.Entity = null;
						previousValue.Job_Prepaids.Remove(this);
					}
					this._Sys_User.Entity = value;
					if ((value != null))
					{
						value.Job_Prepaids.Add(this);
						this._UpdatedBy = value.ID;
					}
					else
					{
						this._UpdatedBy = default(int);
					}
					this.SendPropertyChanged("Sys_User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Job_QuotationRoutes")]
	public partial class Job_QuotationRoute : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _JobID;
		
		private int _RouteID;
		
		private string _Description;
		
		private double _ExtraFee;
		
		private string _DriverPhoneNumber;
		
		private string _VehicleNO;
		
		private int _Status;
		
		private bool _IsDeleted;
		
		private System.DateTime _LastestUpdate;
		
		private int _UpdatedBy;
		
		private double _USDRate;
		
		private double _Loads;
		
		private double _PromotionByTransComp;
		
		private double _Total_Out;
		
		private double _Total_In;
		
		private System.Nullable<int> _PlaceStart;
		
		private System.Nullable<int> _PlaceEnd;
		
		private int _Quantity;
		
		private EntityRef<CustomerQuotation_Route> _CustomerQuotation_Route;
		
		private EntityRef<Job> _Job;
		
		private EntityRef<Sys_User> _Sys_User;
		
		private EntityRef<TransportPlace> _TransportPlace;
		
		private EntityRef<TransportPlace> _TransportPlace1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnJobIDChanging(int value);
    partial void OnJobIDChanged();
    partial void OnRouteIDChanging(int value);
    partial void OnRouteIDChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnExtraFeeChanging(double value);
    partial void OnExtraFeeChanged();
    partial void OnDriverPhoneNumberChanging(string value);
    partial void OnDriverPhoneNumberChanged();
    partial void OnVehicleNOChanging(string value);
    partial void OnVehicleNOChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    partial void OnIsDeletedChanging(bool value);
    partial void OnIsDeletedChanged();
    partial void OnLastestUpdateChanging(System.DateTime value);
    partial void OnLastestUpdateChanged();
    partial void OnUpdatedByChanging(int value);
    partial void OnUpdatedByChanged();
    partial void OnUSDRateChanging(double value);
    partial void OnUSDRateChanged();
    partial void OnLoadsChanging(double value);
    partial void OnLoadsChanged();
    partial void OnPromotionByTransCompChanging(double value);
    partial void OnPromotionByTransCompChanged();
    partial void OnTotal_OutChanging(double value);
    partial void OnTotal_OutChanged();
    partial void OnTotal_InChanging(double value);
    partial void OnTotal_InChanged();
    partial void OnPlaceStartChanging(System.Nullable<int> value);
    partial void OnPlaceStartChanged();
    partial void OnPlaceEndChanging(System.Nullable<int> value);
    partial void OnPlaceEndChanged();
    partial void OnQuantityChanging(int value);
    partial void OnQuantityChanged();
    #endregion
		
		public Job_QuotationRoute()
		{
			this._CustomerQuotation_Route = default(EntityRef<CustomerQuotation_Route>);
			this._Job = default(EntityRef<Job>);
			this._Sys_User = default(EntityRef<Sys_User>);
			this._TransportPlace = default(EntityRef<TransportPlace>);
			this._TransportPlace1 = default(EntityRef<TransportPlace>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JobID", DbType="Int NOT NULL")]
		public int JobID
		{
			get
			{
				return this._JobID;
			}
			set
			{
				if ((this._JobID != value))
				{
					if (this._Job.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnJobIDChanging(value);
					this.SendPropertyChanging();
					this._JobID = value;
					this.SendPropertyChanged("JobID");
					this.OnJobIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RouteID", DbType="Int NOT NULL")]
		public int RouteID
		{
			get
			{
				return this._RouteID;
			}
			set
			{
				if ((this._RouteID != value))
				{
					if (this._CustomerQuotation_Route.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRouteIDChanging(value);
					this.SendPropertyChanging();
					this._RouteID = value;
					this.SendPropertyChanged("RouteID");
					this.OnRouteIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NText NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExtraFee", DbType="Float NOT NULL")]
		public double ExtraFee
		{
			get
			{
				return this._ExtraFee;
			}
			set
			{
				if ((this._ExtraFee != value))
				{
					this.OnExtraFeeChanging(value);
					this.SendPropertyChanging();
					this._ExtraFee = value;
					this.SendPropertyChanged("ExtraFee");
					this.OnExtraFeeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DriverPhoneNumber", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string DriverPhoneNumber
		{
			get
			{
				return this._DriverPhoneNumber;
			}
			set
			{
				if ((this._DriverPhoneNumber != value))
				{
					this.OnDriverPhoneNumberChanging(value);
					this.SendPropertyChanging();
					this._DriverPhoneNumber = value;
					this.SendPropertyChanged("DriverPhoneNumber");
					this.OnDriverPhoneNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VehicleNO", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string VehicleNO
		{
			get
			{
				return this._VehicleNO;
			}
			set
			{
				if ((this._VehicleNO != value))
				{
					this.OnVehicleNOChanging(value);
					this.SendPropertyChanging();
					this._VehicleNO = value;
					this.SendPropertyChanged("VehicleNO");
					this.OnVehicleNOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDeleted", DbType="Bit NOT NULL")]
		public bool IsDeleted
		{
			get
			{
				return this._IsDeleted;
			}
			set
			{
				if ((this._IsDeleted != value))
				{
					this.OnIsDeletedChanging(value);
					this.SendPropertyChanging();
					this._IsDeleted = value;
					this.SendPropertyChanged("IsDeleted");
					this.OnIsDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastestUpdate", DbType="DateTime NOT NULL")]
		public System.DateTime LastestUpdate
		{
			get
			{
				return this._LastestUpdate;
			}
			set
			{
				if ((this._LastestUpdate != value))
				{
					this.OnLastestUpdateChanging(value);
					this.SendPropertyChanging();
					this._LastestUpdate = value;
					this.SendPropertyChanged("LastestUpdate");
					this.OnLastestUpdateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedBy", DbType="Int NOT NULL")]
		public int UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					if (this._Sys_User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._UpdatedBy = value;
					this.SendPropertyChanged("UpdatedBy");
					this.OnUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_USDRate", DbType="Float NOT NULL")]
		public double USDRate
		{
			get
			{
				return this._USDRate;
			}
			set
			{
				if ((this._USDRate != value))
				{
					this.OnUSDRateChanging(value);
					this.SendPropertyChanging();
					this._USDRate = value;
					this.SendPropertyChanged("USDRate");
					this.OnUSDRateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Loads", DbType="Float NOT NULL")]
		public double Loads
		{
			get
			{
				return this._Loads;
			}
			set
			{
				if ((this._Loads != value))
				{
					this.OnLoadsChanging(value);
					this.SendPropertyChanging();
					this._Loads = value;
					this.SendPropertyChanged("Loads");
					this.OnLoadsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PromotionByTransComp", DbType="Float NOT NULL")]
		public double PromotionByTransComp
		{
			get
			{
				return this._PromotionByTransComp;
			}
			set
			{
				if ((this._PromotionByTransComp != value))
				{
					this.OnPromotionByTransCompChanging(value);
					this.SendPropertyChanging();
					this._PromotionByTransComp = value;
					this.SendPropertyChanged("PromotionByTransComp");
					this.OnPromotionByTransCompChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Total_Out", DbType="Float NOT NULL")]
		public double Total_Out
		{
			get
			{
				return this._Total_Out;
			}
			set
			{
				if ((this._Total_Out != value))
				{
					this.OnTotal_OutChanging(value);
					this.SendPropertyChanging();
					this._Total_Out = value;
					this.SendPropertyChanged("Total_Out");
					this.OnTotal_OutChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Total_In", DbType="Float NOT NULL")]
		public double Total_In
		{
			get
			{
				return this._Total_In;
			}
			set
			{
				if ((this._Total_In != value))
				{
					this.OnTotal_InChanging(value);
					this.SendPropertyChanging();
					this._Total_In = value;
					this.SendPropertyChanged("Total_In");
					this.OnTotal_InChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlaceStart", DbType="Int")]
		public System.Nullable<int> PlaceStart
		{
			get
			{
				return this._PlaceStart;
			}
			set
			{
				if ((this._PlaceStart != value))
				{
					if (this._TransportPlace.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPlaceStartChanging(value);
					this.SendPropertyChanging();
					this._PlaceStart = value;
					this.SendPropertyChanged("PlaceStart");
					this.OnPlaceStartChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlaceEnd", DbType="Int")]
		public System.Nullable<int> PlaceEnd
		{
			get
			{
				return this._PlaceEnd;
			}
			set
			{
				if ((this._PlaceEnd != value))
				{
					if (this._TransportPlace1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPlaceEndChanging(value);
					this.SendPropertyChanging();
					this._PlaceEnd = value;
					this.SendPropertyChanged("PlaceEnd");
					this.OnPlaceEndChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantity", DbType="Int NOT NULL")]
		public int Quantity
		{
			get
			{
				return this._Quantity;
			}
			set
			{
				if ((this._Quantity != value))
				{
					this.OnQuantityChanging(value);
					this.SendPropertyChanging();
					this._Quantity = value;
					this.SendPropertyChanged("Quantity");
					this.OnQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CustomerQuotation_Route_Job_QuotationRoute", Storage="_CustomerQuotation_Route", ThisKey="RouteID", OtherKey="ID", IsForeignKey=true)]
		public CustomerQuotation_Route CustomerQuotation_Route
		{
			get
			{
				return this._CustomerQuotation_Route.Entity;
			}
			set
			{
				CustomerQuotation_Route previousValue = this._CustomerQuotation_Route.Entity;
				if (((previousValue != value) 
							|| (this._CustomerQuotation_Route.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CustomerQuotation_Route.Entity = null;
						previousValue.Job_QuotationRoutes.Remove(this);
					}
					this._CustomerQuotation_Route.Entity = value;
					if ((value != null))
					{
						value.Job_QuotationRoutes.Add(this);
						this._RouteID = value.ID;
					}
					else
					{
						this._RouteID = default(int);
					}
					this.SendPropertyChanged("CustomerQuotation_Route");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Job_Job_QuotationRoute", Storage="_Job", ThisKey="JobID", OtherKey="ID", IsForeignKey=true)]
		public Job Job
		{
			get
			{
				return this._Job.Entity;
			}
			set
			{
				Job previousValue = this._Job.Entity;
				if (((previousValue != value) 
							|| (this._Job.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Job.Entity = null;
						previousValue.Job_QuotationRoutes.Remove(this);
					}
					this._Job.Entity = value;
					if ((value != null))
					{
						value.Job_QuotationRoutes.Add(this);
						this._JobID = value.ID;
					}
					else
					{
						this._JobID = default(int);
					}
					this.SendPropertyChanged("Job");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Sys_User_Job_QuotationRoute", Storage="_Sys_User", ThisKey="UpdatedBy", OtherKey="ID", IsForeignKey=true)]
		public Sys_User Sys_User
		{
			get
			{
				return this._Sys_User.Entity;
			}
			set
			{
				Sys_User previousValue = this._Sys_User.Entity;
				if (((previousValue != value) 
							|| (this._Sys_User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Sys_User.Entity = null;
						previousValue.Job_QuotationRoutes.Remove(this);
					}
					this._Sys_User.Entity = value;
					if ((value != null))
					{
						value.Job_QuotationRoutes.Add(this);
						this._UpdatedBy = value.ID;
					}
					else
					{
						this._UpdatedBy = default(int);
					}
					this.SendPropertyChanged("Sys_User");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TransportPlace_Job_QuotationRoute", Storage="_TransportPlace", ThisKey="PlaceStart", OtherKey="ID", IsForeignKey=true)]
		public TransportPlace TransportPlace
		{
			get
			{
				return this._TransportPlace.Entity;
			}
			set
			{
				TransportPlace previousValue = this._TransportPlace.Entity;
				if (((previousValue != value) 
							|| (this._TransportPlace.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TransportPlace.Entity = null;
						previousValue.Job_QuotationRoutes.Remove(this);
					}
					this._TransportPlace.Entity = value;
					if ((value != null))
					{
						value.Job_QuotationRoutes.Add(this);
						this._PlaceStart = value.ID;
					}
					else
					{
						this._PlaceStart = default(Nullable<int>);
					}
					this.SendPropertyChanged("TransportPlace");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TransportPlace_Job_QuotationRoute1", Storage="_TransportPlace1", ThisKey="PlaceEnd", OtherKey="ID", IsForeignKey=true)]
		public TransportPlace TransportPlace1
		{
			get
			{
				return this._TransportPlace1.Entity;
			}
			set
			{
				TransportPlace previousValue = this._TransportPlace1.Entity;
				if (((previousValue != value) 
							|| (this._TransportPlace1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TransportPlace1.Entity = null;
						previousValue.Job_QuotationRoutes1.Remove(this);
					}
					this._TransportPlace1.Entity = value;
					if ((value != null))
					{
						value.Job_QuotationRoutes1.Add(this);
						this._PlaceEnd = value.ID;
					}
					else
					{
						this._PlaceEnd = default(Nullable<int>);
					}
					this.SendPropertyChanged("TransportPlace1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Job_Workings")]
	public partial class Job_Working : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Name;
		
		private string _Description;
		
		private System.DateTime _LastestUpdated;
		
		private int _UpdatedBy;
		
		private bool _IsDeleted;
		
		private EntitySet<Agent_PrepaidDetail> _Agent_PrepaidDetails;
		
		private EntityRef<Sys_User> _Sys_User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnLastestUpdatedChanging(System.DateTime value);
    partial void OnLastestUpdatedChanged();
    partial void OnUpdatedByChanging(int value);
    partial void OnUpdatedByChanged();
    partial void OnIsDeletedChanging(bool value);
    partial void OnIsDeletedChanged();
    #endregion
		
		public Job_Working()
		{
			this._Agent_PrepaidDetails = new EntitySet<Agent_PrepaidDetail>(new Action<Agent_PrepaidDetail>(this.attach_Agent_PrepaidDetails), new Action<Agent_PrepaidDetail>(this.detach_Agent_PrepaidDetails));
			this._Sys_User = default(EntityRef<Sys_User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NText NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastestUpdated", DbType="DateTime NOT NULL")]
		public System.DateTime LastestUpdated
		{
			get
			{
				return this._LastestUpdated;
			}
			set
			{
				if ((this._LastestUpdated != value))
				{
					this.OnLastestUpdatedChanging(value);
					this.SendPropertyChanging();
					this._LastestUpdated = value;
					this.SendPropertyChanged("LastestUpdated");
					this.OnLastestUpdatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedBy", DbType="Int NOT NULL")]
		public int UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					if (this._Sys_User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._UpdatedBy = value;
					this.SendPropertyChanged("UpdatedBy");
					this.OnUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDeleted", DbType="Bit NOT NULL")]
		public bool IsDeleted
		{
			get
			{
				return this._IsDeleted;
			}
			set
			{
				if ((this._IsDeleted != value))
				{
					this.OnIsDeletedChanging(value);
					this.SendPropertyChanging();
					this._IsDeleted = value;
					this.SendPropertyChanged("IsDeleted");
					this.OnIsDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Job_Working_Agent_PrepaidDetail", Storage="_Agent_PrepaidDetails", ThisKey="ID", OtherKey="WorkingID")]
		public EntitySet<Agent_PrepaidDetail> Agent_PrepaidDetails
		{
			get
			{
				return this._Agent_PrepaidDetails;
			}
			set
			{
				this._Agent_PrepaidDetails.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Sys_User_Job_Working", Storage="_Sys_User", ThisKey="UpdatedBy", OtherKey="ID", IsForeignKey=true)]
		public Sys_User Sys_User
		{
			get
			{
				return this._Sys_User.Entity;
			}
			set
			{
				Sys_User previousValue = this._Sys_User.Entity;
				if (((previousValue != value) 
							|| (this._Sys_User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Sys_User.Entity = null;
						previousValue.Job_Workings.Remove(this);
					}
					this._Sys_User.Entity = value;
					if ((value != null))
					{
						value.Job_Workings.Add(this);
						this._UpdatedBy = value.ID;
					}
					else
					{
						this._UpdatedBy = default(int);
					}
					this.SendPropertyChanged("Sys_User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Agent_PrepaidDetails(Agent_PrepaidDetail entity)
		{
			this.SendPropertyChanging();
			entity.Job_Working = this;
		}
		
		private void detach_Agent_PrepaidDetails(Agent_PrepaidDetail entity)
		{
			this.SendPropertyChanging();
			entity.Job_Working = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Jobs")]
	public partial class Job : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _Type;
		
		private string _InvoiceNO;
		
		private string _BillLadingNO;
		
		private string _TKHQNO;
		
		private string _JobID;
		
		private System.Nullable<int> _CustomerID;
		
		private System.DateTime _ProcessedDate;
		
		private System.DateTime _ConsignedDate;
		
		private bool _IsConsigned;
		
		private bool _IsInformTransportComp;
		
		private bool _IsPayedForTransportComp;
		
		private int _Status;
		
		private bool _IsUrgent;
		
		private bool _IsDeleted;
		
		private System.DateTime _LastestUpdated;
		
		private int _UpdatedBy;
		
		private string _AttachedFiles;
		
		private bool _IsPaidFromCustomer;
		
		private double _CustomerPrepaids;
		
		private double _AgentPrepaids;
		
		private double _Total_Transport_In;
		
		private double _Total_Customs_In;
		
		private double _Total_In;
		
		private double _Total_Transport_Out;
		
		private double _Total_Customs_Out;
		
		private double _Total_Out;
		
		private double _USDRate;
		
		private EntitySet<Agent_Prepaid> _Agent_Prepaids;
		
		private EntitySet<CustomerQuotation_Custom> _CustomerQuotation_Customs;
		
		private EntitySet<Job_InOutFee> _Job_InOutFees;
		
		private EntitySet<Job_Prepaid> _Job_Prepaids;
		
		private EntitySet<Job_QuotationRoute> _Job_QuotationRoutes;
		
		private EntityRef<Customer> _Customer;
		
		private EntityRef<Sys_User> _Sys_User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnTypeChanging(int value);
    partial void OnTypeChanged();
    partial void OnInvoiceNOChanging(string value);
    partial void OnInvoiceNOChanged();
    partial void OnBillLadingNOChanging(string value);
    partial void OnBillLadingNOChanged();
    partial void OnTKHQNOChanging(string value);
    partial void OnTKHQNOChanged();
    partial void OnJobIDChanging(string value);
    partial void OnJobIDChanged();
    partial void OnCustomerIDChanging(System.Nullable<int> value);
    partial void OnCustomerIDChanged();
    partial void OnProcessedDateChanging(System.DateTime value);
    partial void OnProcessedDateChanged();
    partial void OnConsignedDateChanging(System.DateTime value);
    partial void OnConsignedDateChanged();
    partial void OnIsConsignedChanging(bool value);
    partial void OnIsConsignedChanged();
    partial void OnIsInformTransportCompChanging(bool value);
    partial void OnIsInformTransportCompChanged();
    partial void OnIsPayedForTransportCompChanging(bool value);
    partial void OnIsPayedForTransportCompChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    partial void OnIsUrgentChanging(bool value);
    partial void OnIsUrgentChanged();
    partial void OnIsDeletedChanging(bool value);
    partial void OnIsDeletedChanged();
    partial void OnLastestUpdatedChanging(System.DateTime value);
    partial void OnLastestUpdatedChanged();
    partial void OnUpdatedByChanging(int value);
    partial void OnUpdatedByChanged();
    partial void OnAttachedFilesChanging(string value);
    partial void OnAttachedFilesChanged();
    partial void OnIsPaidFromCustomerChanging(bool value);
    partial void OnIsPaidFromCustomerChanged();
    partial void OnCustomerPrepaidsChanging(double value);
    partial void OnCustomerPrepaidsChanged();
    partial void OnAgentPrepaidsChanging(double value);
    partial void OnAgentPrepaidsChanged();
    partial void OnTotal_Transport_InChanging(double value);
    partial void OnTotal_Transport_InChanged();
    partial void OnTotal_Customs_InChanging(double value);
    partial void OnTotal_Customs_InChanged();
    partial void OnTotal_InChanging(double value);
    partial void OnTotal_InChanged();
    partial void OnTotal_Transport_OutChanging(double value);
    partial void OnTotal_Transport_OutChanged();
    partial void OnTotal_Customs_OutChanging(double value);
    partial void OnTotal_Customs_OutChanged();
    partial void OnTotal_OutChanging(double value);
    partial void OnTotal_OutChanged();
    partial void OnUSDRateChanging(double value);
    partial void OnUSDRateChanged();
    #endregion
		
		public Job()
		{
			this._Agent_Prepaids = new EntitySet<Agent_Prepaid>(new Action<Agent_Prepaid>(this.attach_Agent_Prepaids), new Action<Agent_Prepaid>(this.detach_Agent_Prepaids));
			this._CustomerQuotation_Customs = new EntitySet<CustomerQuotation_Custom>(new Action<CustomerQuotation_Custom>(this.attach_CustomerQuotation_Customs), new Action<CustomerQuotation_Custom>(this.detach_CustomerQuotation_Customs));
			this._Job_InOutFees = new EntitySet<Job_InOutFee>(new Action<Job_InOutFee>(this.attach_Job_InOutFees), new Action<Job_InOutFee>(this.detach_Job_InOutFees));
			this._Job_Prepaids = new EntitySet<Job_Prepaid>(new Action<Job_Prepaid>(this.attach_Job_Prepaids), new Action<Job_Prepaid>(this.detach_Job_Prepaids));
			this._Job_QuotationRoutes = new EntitySet<Job_QuotationRoute>(new Action<Job_QuotationRoute>(this.attach_Job_QuotationRoutes), new Action<Job_QuotationRoute>(this.detach_Job_QuotationRoutes));
			this._Customer = default(EntityRef<Customer>);
			this._Sys_User = default(EntityRef<Sys_User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="Int NOT NULL")]
		public int Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceNO", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string InvoiceNO
		{
			get
			{
				return this._InvoiceNO;
			}
			set
			{
				if ((this._InvoiceNO != value))
				{
					this.OnInvoiceNOChanging(value);
					this.SendPropertyChanging();
					this._InvoiceNO = value;
					this.SendPropertyChanged("InvoiceNO");
					this.OnInvoiceNOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BillLadingNO", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string BillLadingNO
		{
			get
			{
				return this._BillLadingNO;
			}
			set
			{
				if ((this._BillLadingNO != value))
				{
					this.OnBillLadingNOChanging(value);
					this.SendPropertyChanging();
					this._BillLadingNO = value;
					this.SendPropertyChanged("BillLadingNO");
					this.OnBillLadingNOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TKHQNO", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string TKHQNO
		{
			get
			{
				return this._TKHQNO;
			}
			set
			{
				if ((this._TKHQNO != value))
				{
					this.OnTKHQNOChanging(value);
					this.SendPropertyChanging();
					this._TKHQNO = value;
					this.SendPropertyChanged("TKHQNO");
					this.OnTKHQNOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JobID", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string JobID
		{
			get
			{
				return this._JobID;
			}
			set
			{
				if ((this._JobID != value))
				{
					this.OnJobIDChanging(value);
					this.SendPropertyChanging();
					this._JobID = value;
					this.SendPropertyChanged("JobID");
					this.OnJobIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerID", DbType="Int")]
		public System.Nullable<int> CustomerID
		{
			get
			{
				return this._CustomerID;
			}
			set
			{
				if ((this._CustomerID != value))
				{
					if (this._Customer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCustomerIDChanging(value);
					this.SendPropertyChanging();
					this._CustomerID = value;
					this.SendPropertyChanged("CustomerID");
					this.OnCustomerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProcessedDate", DbType="DateTime NOT NULL")]
		public System.DateTime ProcessedDate
		{
			get
			{
				return this._ProcessedDate;
			}
			set
			{
				if ((this._ProcessedDate != value))
				{
					this.OnProcessedDateChanging(value);
					this.SendPropertyChanging();
					this._ProcessedDate = value;
					this.SendPropertyChanged("ProcessedDate");
					this.OnProcessedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConsignedDate", DbType="DateTime NOT NULL")]
		public System.DateTime ConsignedDate
		{
			get
			{
				return this._ConsignedDate;
			}
			set
			{
				if ((this._ConsignedDate != value))
				{
					this.OnConsignedDateChanging(value);
					this.SendPropertyChanging();
					this._ConsignedDate = value;
					this.SendPropertyChanged("ConsignedDate");
					this.OnConsignedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsConsigned", DbType="Bit NOT NULL")]
		public bool IsConsigned
		{
			get
			{
				return this._IsConsigned;
			}
			set
			{
				if ((this._IsConsigned != value))
				{
					this.OnIsConsignedChanging(value);
					this.SendPropertyChanging();
					this._IsConsigned = value;
					this.SendPropertyChanged("IsConsigned");
					this.OnIsConsignedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsInformTransportComp", DbType="Bit NOT NULL")]
		public bool IsInformTransportComp
		{
			get
			{
				return this._IsInformTransportComp;
			}
			set
			{
				if ((this._IsInformTransportComp != value))
				{
					this.OnIsInformTransportCompChanging(value);
					this.SendPropertyChanging();
					this._IsInformTransportComp = value;
					this.SendPropertyChanged("IsInformTransportComp");
					this.OnIsInformTransportCompChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsPayedForTransportComp", DbType="Bit NOT NULL")]
		public bool IsPayedForTransportComp
		{
			get
			{
				return this._IsPayedForTransportComp;
			}
			set
			{
				if ((this._IsPayedForTransportComp != value))
				{
					this.OnIsPayedForTransportCompChanging(value);
					this.SendPropertyChanging();
					this._IsPayedForTransportComp = value;
					this.SendPropertyChanged("IsPayedForTransportComp");
					this.OnIsPayedForTransportCompChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsUrgent", DbType="Bit NOT NULL")]
		public bool IsUrgent
		{
			get
			{
				return this._IsUrgent;
			}
			set
			{
				if ((this._IsUrgent != value))
				{
					this.OnIsUrgentChanging(value);
					this.SendPropertyChanging();
					this._IsUrgent = value;
					this.SendPropertyChanged("IsUrgent");
					this.OnIsUrgentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDeleted", DbType="Bit NOT NULL")]
		public bool IsDeleted
		{
			get
			{
				return this._IsDeleted;
			}
			set
			{
				if ((this._IsDeleted != value))
				{
					this.OnIsDeletedChanging(value);
					this.SendPropertyChanging();
					this._IsDeleted = value;
					this.SendPropertyChanged("IsDeleted");
					this.OnIsDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastestUpdated", DbType="DateTime NOT NULL")]
		public System.DateTime LastestUpdated
		{
			get
			{
				return this._LastestUpdated;
			}
			set
			{
				if ((this._LastestUpdated != value))
				{
					this.OnLastestUpdatedChanging(value);
					this.SendPropertyChanging();
					this._LastestUpdated = value;
					this.SendPropertyChanged("LastestUpdated");
					this.OnLastestUpdatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedBy", DbType="Int NOT NULL")]
		public int UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					if (this._Sys_User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._UpdatedBy = value;
					this.SendPropertyChanged("UpdatedBy");
					this.OnUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AttachedFiles", DbType="NText NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string AttachedFiles
		{
			get
			{
				return this._AttachedFiles;
			}
			set
			{
				if ((this._AttachedFiles != value))
				{
					this.OnAttachedFilesChanging(value);
					this.SendPropertyChanging();
					this._AttachedFiles = value;
					this.SendPropertyChanged("AttachedFiles");
					this.OnAttachedFilesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsPaidFromCustomer", DbType="Bit NOT NULL")]
		public bool IsPaidFromCustomer
		{
			get
			{
				return this._IsPaidFromCustomer;
			}
			set
			{
				if ((this._IsPaidFromCustomer != value))
				{
					this.OnIsPaidFromCustomerChanging(value);
					this.SendPropertyChanging();
					this._IsPaidFromCustomer = value;
					this.SendPropertyChanged("IsPaidFromCustomer");
					this.OnIsPaidFromCustomerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerPrepaids", DbType="Float NOT NULL")]
		public double CustomerPrepaids
		{
			get
			{
				return this._CustomerPrepaids;
			}
			set
			{
				if ((this._CustomerPrepaids != value))
				{
					this.OnCustomerPrepaidsChanging(value);
					this.SendPropertyChanging();
					this._CustomerPrepaids = value;
					this.SendPropertyChanged("CustomerPrepaids");
					this.OnCustomerPrepaidsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AgentPrepaids", DbType="Float NOT NULL")]
		public double AgentPrepaids
		{
			get
			{
				return this._AgentPrepaids;
			}
			set
			{
				if ((this._AgentPrepaids != value))
				{
					this.OnAgentPrepaidsChanging(value);
					this.SendPropertyChanging();
					this._AgentPrepaids = value;
					this.SendPropertyChanged("AgentPrepaids");
					this.OnAgentPrepaidsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Total_Transport_In", DbType="Float NOT NULL")]
		public double Total_Transport_In
		{
			get
			{
				return this._Total_Transport_In;
			}
			set
			{
				if ((this._Total_Transport_In != value))
				{
					this.OnTotal_Transport_InChanging(value);
					this.SendPropertyChanging();
					this._Total_Transport_In = value;
					this.SendPropertyChanged("Total_Transport_In");
					this.OnTotal_Transport_InChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Total_Customs_In", DbType="Float NOT NULL")]
		public double Total_Customs_In
		{
			get
			{
				return this._Total_Customs_In;
			}
			set
			{
				if ((this._Total_Customs_In != value))
				{
					this.OnTotal_Customs_InChanging(value);
					this.SendPropertyChanging();
					this._Total_Customs_In = value;
					this.SendPropertyChanged("Total_Customs_In");
					this.OnTotal_Customs_InChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Total_In", DbType="Float NOT NULL")]
		public double Total_In
		{
			get
			{
				return this._Total_In;
			}
			set
			{
				if ((this._Total_In != value))
				{
					this.OnTotal_InChanging(value);
					this.SendPropertyChanging();
					this._Total_In = value;
					this.SendPropertyChanged("Total_In");
					this.OnTotal_InChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Total_Transport_Out", DbType="Float NOT NULL")]
		public double Total_Transport_Out
		{
			get
			{
				return this._Total_Transport_Out;
			}
			set
			{
				if ((this._Total_Transport_Out != value))
				{
					this.OnTotal_Transport_OutChanging(value);
					this.SendPropertyChanging();
					this._Total_Transport_Out = value;
					this.SendPropertyChanged("Total_Transport_Out");
					this.OnTotal_Transport_OutChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Total_Customs_Out", DbType="Float NOT NULL")]
		public double Total_Customs_Out
		{
			get
			{
				return this._Total_Customs_Out;
			}
			set
			{
				if ((this._Total_Customs_Out != value))
				{
					this.OnTotal_Customs_OutChanging(value);
					this.SendPropertyChanging();
					this._Total_Customs_Out = value;
					this.SendPropertyChanged("Total_Customs_Out");
					this.OnTotal_Customs_OutChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Total_Out", DbType="Float NOT NULL")]
		public double Total_Out
		{
			get
			{
				return this._Total_Out;
			}
			set
			{
				if ((this._Total_Out != value))
				{
					this.OnTotal_OutChanging(value);
					this.SendPropertyChanging();
					this._Total_Out = value;
					this.SendPropertyChanged("Total_Out");
					this.OnTotal_OutChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_USDRate", DbType="Float NOT NULL")]
		public double USDRate
		{
			get
			{
				return this._USDRate;
			}
			set
			{
				if ((this._USDRate != value))
				{
					this.OnUSDRateChanging(value);
					this.SendPropertyChanging();
					this._USDRate = value;
					this.SendPropertyChanged("USDRate");
					this.OnUSDRateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Job_Agent_Prepaid", Storage="_Agent_Prepaids", ThisKey="ID", OtherKey="JobID")]
		public EntitySet<Agent_Prepaid> Agent_Prepaids
		{
			get
			{
				return this._Agent_Prepaids;
			}
			set
			{
				this._Agent_Prepaids.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Job_CustomerQuotation_Custom", Storage="_CustomerQuotation_Customs", ThisKey="ID", OtherKey="JobID")]
		public EntitySet<CustomerQuotation_Custom> CustomerQuotation_Customs
		{
			get
			{
				return this._CustomerQuotation_Customs;
			}
			set
			{
				this._CustomerQuotation_Customs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Job_Job_InOutFee", Storage="_Job_InOutFees", ThisKey="ID", OtherKey="JobID")]
		public EntitySet<Job_InOutFee> Job_InOutFees
		{
			get
			{
				return this._Job_InOutFees;
			}
			set
			{
				this._Job_InOutFees.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Job_Job_Prepaid", Storage="_Job_Prepaids", ThisKey="ID", OtherKey="JobID")]
		public EntitySet<Job_Prepaid> Job_Prepaids
		{
			get
			{
				return this._Job_Prepaids;
			}
			set
			{
				this._Job_Prepaids.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Job_Job_QuotationRoute", Storage="_Job_QuotationRoutes", ThisKey="ID", OtherKey="JobID")]
		public EntitySet<Job_QuotationRoute> Job_QuotationRoutes
		{
			get
			{
				return this._Job_QuotationRoutes;
			}
			set
			{
				this._Job_QuotationRoutes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_Job", Storage="_Customer", ThisKey="CustomerID", OtherKey="ID", IsForeignKey=true)]
		public Customer Customer
		{
			get
			{
				return this._Customer.Entity;
			}
			set
			{
				Customer previousValue = this._Customer.Entity;
				if (((previousValue != value) 
							|| (this._Customer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Customer.Entity = null;
						previousValue.Jobs.Remove(this);
					}
					this._Customer.Entity = value;
					if ((value != null))
					{
						value.Jobs.Add(this);
						this._CustomerID = value.ID;
					}
					else
					{
						this._CustomerID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Customer");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Sys_User_Job", Storage="_Sys_User", ThisKey="UpdatedBy", OtherKey="ID", IsForeignKey=true)]
		public Sys_User Sys_User
		{
			get
			{
				return this._Sys_User.Entity;
			}
			set
			{
				Sys_User previousValue = this._Sys_User.Entity;
				if (((previousValue != value) 
							|| (this._Sys_User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Sys_User.Entity = null;
						previousValue.Jobs.Remove(this);
					}
					this._Sys_User.Entity = value;
					if ((value != null))
					{
						value.Jobs.Add(this);
						this._UpdatedBy = value.ID;
					}
					else
					{
						this._UpdatedBy = default(int);
					}
					this.SendPropertyChanged("Sys_User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Agent_Prepaids(Agent_Prepaid entity)
		{
			this.SendPropertyChanging();
			entity.Job = this;
		}
		
		private void detach_Agent_Prepaids(Agent_Prepaid entity)
		{
			this.SendPropertyChanging();
			entity.Job = null;
		}
		
		private void attach_CustomerQuotation_Customs(CustomerQuotation_Custom entity)
		{
			this.SendPropertyChanging();
			entity.Job = this;
		}
		
		private void detach_CustomerQuotation_Customs(CustomerQuotation_Custom entity)
		{
			this.SendPropertyChanging();
			entity.Job = null;
		}
		
		private void attach_Job_InOutFees(Job_InOutFee entity)
		{
			this.SendPropertyChanging();
			entity.Job = this;
		}
		
		private void detach_Job_InOutFees(Job_InOutFee entity)
		{
			this.SendPropertyChanging();
			entity.Job = null;
		}
		
		private void attach_Job_Prepaids(Job_Prepaid entity)
		{
			this.SendPropertyChanging();
			entity.Job = this;
		}
		
		private void detach_Job_Prepaids(Job_Prepaid entity)
		{
			this.SendPropertyChanging();
			entity.Job = null;
		}
		
		private void attach_Job_QuotationRoutes(Job_QuotationRoute entity)
		{
			this.SendPropertyChanging();
			entity.Job = this;
		}
		
		private void detach_Job_QuotationRoutes(Job_QuotationRoute entity)
		{
			this.SendPropertyChanging();
			entity.Job = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Quotation_Routes")]
	public partial class Quotation_Route : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _RouteID;
		
		private int _VehicleLoadID;
		
		private double _Price;
		
		private bool _IsSamePrice;
		
		private double _Price_RoundedTrip;
		
		private System.DateTime _Expire_Start;
		
		private System.DateTime _Expire_End;
		
		private bool _IsDeleted;
		
		private int _UpdatedBy;
		
		private System.DateTime _LastestUpdated;
		
		private bool _IsUSD;
		
		private EntitySet<CustomerQuotation_Route> _CustomerQuotation_Routes;
		
		private EntityRef<Sys_User> _Sys_User;
		
		private EntityRef<TransportCompany_Route> _TransportCompany_Route;
		
		private EntityRef<TransportCompany_VehicleType_Load> _TransportCompany_VehicleType_Load;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnRouteIDChanging(int value);
    partial void OnRouteIDChanged();
    partial void OnVehicleLoadIDChanging(int value);
    partial void OnVehicleLoadIDChanged();
    partial void OnPriceChanging(double value);
    partial void OnPriceChanged();
    partial void OnIsSamePriceChanging(bool value);
    partial void OnIsSamePriceChanged();
    partial void OnPrice_RoundedTripChanging(double value);
    partial void OnPrice_RoundedTripChanged();
    partial void OnExpire_StartChanging(System.DateTime value);
    partial void OnExpire_StartChanged();
    partial void OnExpire_EndChanging(System.DateTime value);
    partial void OnExpire_EndChanged();
    partial void OnIsDeletedChanging(bool value);
    partial void OnIsDeletedChanged();
    partial void OnUpdatedByChanging(int value);
    partial void OnUpdatedByChanged();
    partial void OnLastestUpdatedChanging(System.DateTime value);
    partial void OnLastestUpdatedChanged();
    partial void OnIsUSDChanging(bool value);
    partial void OnIsUSDChanged();
    #endregion
		
		public Quotation_Route()
		{
			this._CustomerQuotation_Routes = new EntitySet<CustomerQuotation_Route>(new Action<CustomerQuotation_Route>(this.attach_CustomerQuotation_Routes), new Action<CustomerQuotation_Route>(this.detach_CustomerQuotation_Routes));
			this._Sys_User = default(EntityRef<Sys_User>);
			this._TransportCompany_Route = default(EntityRef<TransportCompany_Route>);
			this._TransportCompany_VehicleType_Load = default(EntityRef<TransportCompany_VehicleType_Load>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RouteID", DbType="Int NOT NULL")]
		public int RouteID
		{
			get
			{
				return this._RouteID;
			}
			set
			{
				if ((this._RouteID != value))
				{
					if (this._TransportCompany_Route.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRouteIDChanging(value);
					this.SendPropertyChanging();
					this._RouteID = value;
					this.SendPropertyChanged("RouteID");
					this.OnRouteIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VehicleLoadID", DbType="Int NOT NULL")]
		public int VehicleLoadID
		{
			get
			{
				return this._VehicleLoadID;
			}
			set
			{
				if ((this._VehicleLoadID != value))
				{
					if (this._TransportCompany_VehicleType_Load.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnVehicleLoadIDChanging(value);
					this.SendPropertyChanging();
					this._VehicleLoadID = value;
					this.SendPropertyChanged("VehicleLoadID");
					this.OnVehicleLoadIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Float NOT NULL")]
		public double Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this.OnPriceChanging(value);
					this.SendPropertyChanging();
					this._Price = value;
					this.SendPropertyChanged("Price");
					this.OnPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsSamePrice", DbType="Bit NOT NULL")]
		public bool IsSamePrice
		{
			get
			{
				return this._IsSamePrice;
			}
			set
			{
				if ((this._IsSamePrice != value))
				{
					this.OnIsSamePriceChanging(value);
					this.SendPropertyChanging();
					this._IsSamePrice = value;
					this.SendPropertyChanged("IsSamePrice");
					this.OnIsSamePriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price_RoundedTrip", DbType="Float NOT NULL")]
		public double Price_RoundedTrip
		{
			get
			{
				return this._Price_RoundedTrip;
			}
			set
			{
				if ((this._Price_RoundedTrip != value))
				{
					this.OnPrice_RoundedTripChanging(value);
					this.SendPropertyChanging();
					this._Price_RoundedTrip = value;
					this.SendPropertyChanged("Price_RoundedTrip");
					this.OnPrice_RoundedTripChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Expire_Start", DbType="DateTime NOT NULL")]
		public System.DateTime Expire_Start
		{
			get
			{
				return this._Expire_Start;
			}
			set
			{
				if ((this._Expire_Start != value))
				{
					this.OnExpire_StartChanging(value);
					this.SendPropertyChanging();
					this._Expire_Start = value;
					this.SendPropertyChanged("Expire_Start");
					this.OnExpire_StartChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Expire_End", DbType="DateTime NOT NULL")]
		public System.DateTime Expire_End
		{
			get
			{
				return this._Expire_End;
			}
			set
			{
				if ((this._Expire_End != value))
				{
					this.OnExpire_EndChanging(value);
					this.SendPropertyChanging();
					this._Expire_End = value;
					this.SendPropertyChanged("Expire_End");
					this.OnExpire_EndChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDeleted", DbType="Bit NOT NULL")]
		public bool IsDeleted
		{
			get
			{
				return this._IsDeleted;
			}
			set
			{
				if ((this._IsDeleted != value))
				{
					this.OnIsDeletedChanging(value);
					this.SendPropertyChanging();
					this._IsDeleted = value;
					this.SendPropertyChanged("IsDeleted");
					this.OnIsDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedBy", DbType="Int NOT NULL")]
		public int UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					if (this._Sys_User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._UpdatedBy = value;
					this.SendPropertyChanged("UpdatedBy");
					this.OnUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastestUpdated", DbType="DateTime NOT NULL")]
		public System.DateTime LastestUpdated
		{
			get
			{
				return this._LastestUpdated;
			}
			set
			{
				if ((this._LastestUpdated != value))
				{
					this.OnLastestUpdatedChanging(value);
					this.SendPropertyChanging();
					this._LastestUpdated = value;
					this.SendPropertyChanged("LastestUpdated");
					this.OnLastestUpdatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsUSD", DbType="Bit NOT NULL")]
		public bool IsUSD
		{
			get
			{
				return this._IsUSD;
			}
			set
			{
				if ((this._IsUSD != value))
				{
					this.OnIsUSDChanging(value);
					this.SendPropertyChanging();
					this._IsUSD = value;
					this.SendPropertyChanged("IsUSD");
					this.OnIsUSDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Quotation_Route_CustomerQuotation_Route", Storage="_CustomerQuotation_Routes", ThisKey="ID", OtherKey="QuotationID")]
		public EntitySet<CustomerQuotation_Route> CustomerQuotation_Routes
		{
			get
			{
				return this._CustomerQuotation_Routes;
			}
			set
			{
				this._CustomerQuotation_Routes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Sys_User_Quotation_Route", Storage="_Sys_User", ThisKey="UpdatedBy", OtherKey="ID", IsForeignKey=true)]
		public Sys_User Sys_User
		{
			get
			{
				return this._Sys_User.Entity;
			}
			set
			{
				Sys_User previousValue = this._Sys_User.Entity;
				if (((previousValue != value) 
							|| (this._Sys_User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Sys_User.Entity = null;
						previousValue.Quotation_Routes.Remove(this);
					}
					this._Sys_User.Entity = value;
					if ((value != null))
					{
						value.Quotation_Routes.Add(this);
						this._UpdatedBy = value.ID;
					}
					else
					{
						this._UpdatedBy = default(int);
					}
					this.SendPropertyChanged("Sys_User");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TransportCompany_Route_Quotation_Route", Storage="_TransportCompany_Route", ThisKey="RouteID", OtherKey="ID", IsForeignKey=true)]
		public TransportCompany_Route TransportCompany_Route
		{
			get
			{
				return this._TransportCompany_Route.Entity;
			}
			set
			{
				TransportCompany_Route previousValue = this._TransportCompany_Route.Entity;
				if (((previousValue != value) 
							|| (this._TransportCompany_Route.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TransportCompany_Route.Entity = null;
						previousValue.Quotation_Routes.Remove(this);
					}
					this._TransportCompany_Route.Entity = value;
					if ((value != null))
					{
						value.Quotation_Routes.Add(this);
						this._RouteID = value.ID;
					}
					else
					{
						this._RouteID = default(int);
					}
					this.SendPropertyChanged("TransportCompany_Route");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TransportCompany_VehicleType_Load_Quotation_Route", Storage="_TransportCompany_VehicleType_Load", ThisKey="VehicleLoadID", OtherKey="ID", IsForeignKey=true)]
		public TransportCompany_VehicleType_Load TransportCompany_VehicleType_Load
		{
			get
			{
				return this._TransportCompany_VehicleType_Load.Entity;
			}
			set
			{
				TransportCompany_VehicleType_Load previousValue = this._TransportCompany_VehicleType_Load.Entity;
				if (((previousValue != value) 
							|| (this._TransportCompany_VehicleType_Load.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TransportCompany_VehicleType_Load.Entity = null;
						previousValue.Quotation_Routes.Remove(this);
					}
					this._TransportCompany_VehicleType_Load.Entity = value;
					if ((value != null))
					{
						value.Quotation_Routes.Add(this);
						this._VehicleLoadID = value.ID;
					}
					else
					{
						this._VehicleLoadID = default(int);
					}
					this.SendPropertyChanged("TransportCompany_VehicleType_Load");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CustomerQuotation_Routes(CustomerQuotation_Route entity)
		{
			this.SendPropertyChanging();
			entity.Quotation_Route = this;
		}
		
		private void detach_CustomerQuotation_Routes(CustomerQuotation_Route entity)
		{
			this.SendPropertyChanging();
			entity.Quotation_Route = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Sys_Modules")]
	public partial class Sys_Module : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Name;
		
		private string _Alias;
		
		private string _Path;
		
		private string _IconClass;
		
		private int _ParentID;
		
		private int _Level;
		
		private string _Description;
		
		private string _Actions;
		
		private bool _IsDeleted;
		
		private bool _ShowInMenu;
		
		private EntitySet<Sys_Permission> _Sys_Permissions;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnAliasChanging(string value);
    partial void OnAliasChanged();
    partial void OnPathChanging(string value);
    partial void OnPathChanged();
    partial void OnIconClassChanging(string value);
    partial void OnIconClassChanged();
    partial void OnParentIDChanging(int value);
    partial void OnParentIDChanged();
    partial void OnLevelChanging(int value);
    partial void OnLevelChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnActionsChanging(string value);
    partial void OnActionsChanged();
    partial void OnIsDeletedChanging(bool value);
    partial void OnIsDeletedChanged();
    partial void OnShowInMenuChanging(bool value);
    partial void OnShowInMenuChanged();
    #endregion
		
		public Sys_Module()
		{
			this._Sys_Permissions = new EntitySet<Sys_Permission>(new Action<Sys_Permission>(this.attach_Sys_Permissions), new Action<Sys_Permission>(this.detach_Sys_Permissions));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Alias", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Alias
		{
			get
			{
				return this._Alias;
			}
			set
			{
				if ((this._Alias != value))
				{
					this.OnAliasChanging(value);
					this.SendPropertyChanging();
					this._Alias = value;
					this.SendPropertyChanged("Alias");
					this.OnAliasChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Path", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string Path
		{
			get
			{
				return this._Path;
			}
			set
			{
				if ((this._Path != value))
				{
					this.OnPathChanging(value);
					this.SendPropertyChanging();
					this._Path = value;
					this.SendPropertyChanged("Path");
					this.OnPathChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IconClass", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string IconClass
		{
			get
			{
				return this._IconClass;
			}
			set
			{
				if ((this._IconClass != value))
				{
					this.OnIconClassChanging(value);
					this.SendPropertyChanging();
					this._IconClass = value;
					this.SendPropertyChanged("IconClass");
					this.OnIconClassChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentID", DbType="Int NOT NULL")]
		public int ParentID
		{
			get
			{
				return this._ParentID;
			}
			set
			{
				if ((this._ParentID != value))
				{
					this.OnParentIDChanging(value);
					this.SendPropertyChanging();
					this._ParentID = value;
					this.SendPropertyChanged("ParentID");
					this.OnParentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Level]", Storage="_Level", DbType="Int NOT NULL")]
		public int Level
		{
			get
			{
				return this._Level;
			}
			set
			{
				if ((this._Level != value))
				{
					this.OnLevelChanging(value);
					this.SendPropertyChanging();
					this._Level = value;
					this.SendPropertyChanged("Level");
					this.OnLevelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NText NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Actions", DbType="NText NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Actions
		{
			get
			{
				return this._Actions;
			}
			set
			{
				if ((this._Actions != value))
				{
					this.OnActionsChanging(value);
					this.SendPropertyChanging();
					this._Actions = value;
					this.SendPropertyChanged("Actions");
					this.OnActionsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDeleted", DbType="Bit NOT NULL")]
		public bool IsDeleted
		{
			get
			{
				return this._IsDeleted;
			}
			set
			{
				if ((this._IsDeleted != value))
				{
					this.OnIsDeletedChanging(value);
					this.SendPropertyChanging();
					this._IsDeleted = value;
					this.SendPropertyChanged("IsDeleted");
					this.OnIsDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShowInMenu", DbType="Bit NOT NULL")]
		public bool ShowInMenu
		{
			get
			{
				return this._ShowInMenu;
			}
			set
			{
				if ((this._ShowInMenu != value))
				{
					this.OnShowInMenuChanging(value);
					this.SendPropertyChanging();
					this._ShowInMenu = value;
					this.SendPropertyChanged("ShowInMenu");
					this.OnShowInMenuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Sys_Module_Sys_Permission", Storage="_Sys_Permissions", ThisKey="ID", OtherKey="ModuleID")]
		public EntitySet<Sys_Permission> Sys_Permissions
		{
			get
			{
				return this._Sys_Permissions;
			}
			set
			{
				this._Sys_Permissions.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Sys_Permissions(Sys_Permission entity)
		{
			this.SendPropertyChanging();
			entity.Sys_Module = this;
		}
		
		private void detach_Sys_Permissions(Sys_Permission entity)
		{
			this.SendPropertyChanging();
			entity.Sys_Module = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Sys_Permissions")]
	public partial class Sys_Permission : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _RoleID;
		
		private int _ModuleID;
		
		private string _Permissions;
		
		private EntityRef<Sys_Module> _Sys_Module;
		
		private EntityRef<Sys_Role> _Sys_Role;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnRoleIDChanging(int value);
    partial void OnRoleIDChanged();
    partial void OnModuleIDChanging(int value);
    partial void OnModuleIDChanged();
    partial void OnPermissionsChanging(string value);
    partial void OnPermissionsChanged();
    #endregion
		
		public Sys_Permission()
		{
			this._Sys_Module = default(EntityRef<Sys_Module>);
			this._Sys_Role = default(EntityRef<Sys_Role>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleID", DbType="Int NOT NULL")]
		public int RoleID
		{
			get
			{
				return this._RoleID;
			}
			set
			{
				if ((this._RoleID != value))
				{
					if (this._Sys_Role.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRoleIDChanging(value);
					this.SendPropertyChanging();
					this._RoleID = value;
					this.SendPropertyChanged("RoleID");
					this.OnRoleIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModuleID", DbType="Int NOT NULL")]
		public int ModuleID
		{
			get
			{
				return this._ModuleID;
			}
			set
			{
				if ((this._ModuleID != value))
				{
					if (this._Sys_Module.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnModuleIDChanging(value);
					this.SendPropertyChanging();
					this._ModuleID = value;
					this.SendPropertyChanged("ModuleID");
					this.OnModuleIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Permissions", DbType="NText NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Permissions
		{
			get
			{
				return this._Permissions;
			}
			set
			{
				if ((this._Permissions != value))
				{
					this.OnPermissionsChanging(value);
					this.SendPropertyChanging();
					this._Permissions = value;
					this.SendPropertyChanged("Permissions");
					this.OnPermissionsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Sys_Module_Sys_Permission", Storage="_Sys_Module", ThisKey="ModuleID", OtherKey="ID", IsForeignKey=true)]
		public Sys_Module Sys_Module
		{
			get
			{
				return this._Sys_Module.Entity;
			}
			set
			{
				Sys_Module previousValue = this._Sys_Module.Entity;
				if (((previousValue != value) 
							|| (this._Sys_Module.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Sys_Module.Entity = null;
						previousValue.Sys_Permissions.Remove(this);
					}
					this._Sys_Module.Entity = value;
					if ((value != null))
					{
						value.Sys_Permissions.Add(this);
						this._ModuleID = value.ID;
					}
					else
					{
						this._ModuleID = default(int);
					}
					this.SendPropertyChanged("Sys_Module");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Sys_Role_Sys_Permission", Storage="_Sys_Role", ThisKey="RoleID", OtherKey="ID", IsForeignKey=true)]
		public Sys_Role Sys_Role
		{
			get
			{
				return this._Sys_Role.Entity;
			}
			set
			{
				Sys_Role previousValue = this._Sys_Role.Entity;
				if (((previousValue != value) 
							|| (this._Sys_Role.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Sys_Role.Entity = null;
						previousValue.Sys_Permissions.Remove(this);
					}
					this._Sys_Role.Entity = value;
					if ((value != null))
					{
						value.Sys_Permissions.Add(this);
						this._RoleID = value.ID;
					}
					else
					{
						this._RoleID = default(int);
					}
					this.SendPropertyChanged("Sys_Role");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Sys_Roles")]
	public partial class Sys_Role : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Name;
		
		private string _Description;
		
		private bool _CanAccessSystemMenu;
		
		private bool _IsDeleted;
		
		private EntitySet<Sys_Permission> _Sys_Permissions;
		
		private EntitySet<Sys_User> _Sys_Users;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnCanAccessSystemMenuChanging(bool value);
    partial void OnCanAccessSystemMenuChanged();
    partial void OnIsDeletedChanging(bool value);
    partial void OnIsDeletedChanged();
    #endregion
		
		public Sys_Role()
		{
			this._Sys_Permissions = new EntitySet<Sys_Permission>(new Action<Sys_Permission>(this.attach_Sys_Permissions), new Action<Sys_Permission>(this.detach_Sys_Permissions));
			this._Sys_Users = new EntitySet<Sys_User>(new Action<Sys_User>(this.attach_Sys_Users), new Action<Sys_User>(this.detach_Sys_Users));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NText NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CanAccessSystemMenu", DbType="Bit NOT NULL")]
		public bool CanAccessSystemMenu
		{
			get
			{
				return this._CanAccessSystemMenu;
			}
			set
			{
				if ((this._CanAccessSystemMenu != value))
				{
					this.OnCanAccessSystemMenuChanging(value);
					this.SendPropertyChanging();
					this._CanAccessSystemMenu = value;
					this.SendPropertyChanged("CanAccessSystemMenu");
					this.OnCanAccessSystemMenuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDeleted", DbType="Bit NOT NULL")]
		public bool IsDeleted
		{
			get
			{
				return this._IsDeleted;
			}
			set
			{
				if ((this._IsDeleted != value))
				{
					this.OnIsDeletedChanging(value);
					this.SendPropertyChanging();
					this._IsDeleted = value;
					this.SendPropertyChanged("IsDeleted");
					this.OnIsDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Sys_Role_Sys_Permission", Storage="_Sys_Permissions", ThisKey="ID", OtherKey="RoleID")]
		public EntitySet<Sys_Permission> Sys_Permissions
		{
			get
			{
				return this._Sys_Permissions;
			}
			set
			{
				this._Sys_Permissions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Sys_Role_Sys_User", Storage="_Sys_Users", ThisKey="ID", OtherKey="RoleID")]
		public EntitySet<Sys_User> Sys_Users
		{
			get
			{
				return this._Sys_Users;
			}
			set
			{
				this._Sys_Users.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Sys_Permissions(Sys_Permission entity)
		{
			this.SendPropertyChanging();
			entity.Sys_Role = this;
		}
		
		private void detach_Sys_Permissions(Sys_Permission entity)
		{
			this.SendPropertyChanging();
			entity.Sys_Role = null;
		}
		
		private void attach_Sys_Users(Sys_User entity)
		{
			this.SendPropertyChanging();
			entity.Sys_Role = this;
		}
		
		private void detach_Sys_Users(Sys_User entity)
		{
			this.SendPropertyChanging();
			entity.Sys_Role = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Sys_Users")]
	public partial class Sys_User : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Firstname;
		
		private string _Lastname;
		
		private string _Email;
		
		private string _Username;
		
		private string _Password;
		
		private System.DateTime _DateOfBirth;
		
		private string _Avatar;
		
		private string _Address;
		
		private string _PhoneNumber;
		
		private int _Status;
		
		private int _RoleID;
		
		private bool _IsDeleted;
		
		private EntitySet<Agent_PrepaidDetail> _Agent_PrepaidDetails;
		
		private EntitySet<VehicleType> _VehicleTypes;
		
		private EntitySet<Agent_Prepaid> _Agent_Prepaids;
		
		private EntitySet<Agent_Prepaid> _Agent_Prepaids1;
		
		private EntitySet<Customer_Prepaid> _Customer_Prepaids;
		
		private EntitySet<CustomerQuotation_Custom> _CustomerQuotation_Customs;
		
		private EntitySet<CustomerQuotation_CustomsDetail> _CustomerQuotation_CustomsDetails;
		
		private EntitySet<CustomerQuotation_Route> _CustomerQuotation_Routes;
		
		private EntitySet<Customer> _Customers;
		
		private EntitySet<CustomsProcess_FeeType> _CustomsProcess_FeeTypes;
		
		private EntitySet<CustomsProcess_QuotationDetail> _CustomsProcess_QuotationDetails;
		
		private EntitySet<CustomsProcess_Quotation> _CustomsProcess_Quotations;
		
		private EntitySet<GoodsType> _GoodsTypes;
		
		private EntitySet<Job_InOutFee> _Job_InOutFees;
		
		private EntitySet<Job_Prepaid> _Job_Prepaids;
		
		private EntitySet<Job_QuotationRoute> _Job_QuotationRoutes;
		
		private EntitySet<Job_Working> _Job_Workings;
		
		private EntitySet<Job> _Jobs;
		
		private EntitySet<Quotation_Route> _Quotation_Routes;
		
		private EntitySet<TransportCompany> _TransportCompanies;
		
		private EntitySet<TransportCompany_Route> _TransportCompany_Routes;
		
		private EntitySet<TransportCompany_VehicleType_Load> _TransportCompany_VehicleType_Loads;
		
		private EntitySet<TransportCompany_VehicleType> _TransportCompany_VehicleTypes;
		
		private EntitySet<TransportPlace> _TransportPlaces;
		
		private EntitySet<VehicleLoad> _VehicleLoads;
		
		private EntityRef<Sys_Role> _Sys_Role;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnFirstnameChanging(string value);
    partial void OnFirstnameChanged();
    partial void OnLastnameChanging(string value);
    partial void OnLastnameChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnUsernameChanging(string value);
    partial void OnUsernameChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnDateOfBirthChanging(System.DateTime value);
    partial void OnDateOfBirthChanged();
    partial void OnAvatarChanging(string value);
    partial void OnAvatarChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnPhoneNumberChanging(string value);
    partial void OnPhoneNumberChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    partial void OnRoleIDChanging(int value);
    partial void OnRoleIDChanged();
    partial void OnIsDeletedChanging(bool value);
    partial void OnIsDeletedChanged();
    #endregion
		
		public Sys_User()
		{
			this._Agent_PrepaidDetails = new EntitySet<Agent_PrepaidDetail>(new Action<Agent_PrepaidDetail>(this.attach_Agent_PrepaidDetails), new Action<Agent_PrepaidDetail>(this.detach_Agent_PrepaidDetails));
			this._VehicleTypes = new EntitySet<VehicleType>(new Action<VehicleType>(this.attach_VehicleTypes), new Action<VehicleType>(this.detach_VehicleTypes));
			this._Agent_Prepaids = new EntitySet<Agent_Prepaid>(new Action<Agent_Prepaid>(this.attach_Agent_Prepaids), new Action<Agent_Prepaid>(this.detach_Agent_Prepaids));
			this._Agent_Prepaids1 = new EntitySet<Agent_Prepaid>(new Action<Agent_Prepaid>(this.attach_Agent_Prepaids1), new Action<Agent_Prepaid>(this.detach_Agent_Prepaids1));
			this._Customer_Prepaids = new EntitySet<Customer_Prepaid>(new Action<Customer_Prepaid>(this.attach_Customer_Prepaids), new Action<Customer_Prepaid>(this.detach_Customer_Prepaids));
			this._CustomerQuotation_Customs = new EntitySet<CustomerQuotation_Custom>(new Action<CustomerQuotation_Custom>(this.attach_CustomerQuotation_Customs), new Action<CustomerQuotation_Custom>(this.detach_CustomerQuotation_Customs));
			this._CustomerQuotation_CustomsDetails = new EntitySet<CustomerQuotation_CustomsDetail>(new Action<CustomerQuotation_CustomsDetail>(this.attach_CustomerQuotation_CustomsDetails), new Action<CustomerQuotation_CustomsDetail>(this.detach_CustomerQuotation_CustomsDetails));
			this._CustomerQuotation_Routes = new EntitySet<CustomerQuotation_Route>(new Action<CustomerQuotation_Route>(this.attach_CustomerQuotation_Routes), new Action<CustomerQuotation_Route>(this.detach_CustomerQuotation_Routes));
			this._Customers = new EntitySet<Customer>(new Action<Customer>(this.attach_Customers), new Action<Customer>(this.detach_Customers));
			this._CustomsProcess_FeeTypes = new EntitySet<CustomsProcess_FeeType>(new Action<CustomsProcess_FeeType>(this.attach_CustomsProcess_FeeTypes), new Action<CustomsProcess_FeeType>(this.detach_CustomsProcess_FeeTypes));
			this._CustomsProcess_QuotationDetails = new EntitySet<CustomsProcess_QuotationDetail>(new Action<CustomsProcess_QuotationDetail>(this.attach_CustomsProcess_QuotationDetails), new Action<CustomsProcess_QuotationDetail>(this.detach_CustomsProcess_QuotationDetails));
			this._CustomsProcess_Quotations = new EntitySet<CustomsProcess_Quotation>(new Action<CustomsProcess_Quotation>(this.attach_CustomsProcess_Quotations), new Action<CustomsProcess_Quotation>(this.detach_CustomsProcess_Quotations));
			this._GoodsTypes = new EntitySet<GoodsType>(new Action<GoodsType>(this.attach_GoodsTypes), new Action<GoodsType>(this.detach_GoodsTypes));
			this._Job_InOutFees = new EntitySet<Job_InOutFee>(new Action<Job_InOutFee>(this.attach_Job_InOutFees), new Action<Job_InOutFee>(this.detach_Job_InOutFees));
			this._Job_Prepaids = new EntitySet<Job_Prepaid>(new Action<Job_Prepaid>(this.attach_Job_Prepaids), new Action<Job_Prepaid>(this.detach_Job_Prepaids));
			this._Job_QuotationRoutes = new EntitySet<Job_QuotationRoute>(new Action<Job_QuotationRoute>(this.attach_Job_QuotationRoutes), new Action<Job_QuotationRoute>(this.detach_Job_QuotationRoutes));
			this._Job_Workings = new EntitySet<Job_Working>(new Action<Job_Working>(this.attach_Job_Workings), new Action<Job_Working>(this.detach_Job_Workings));
			this._Jobs = new EntitySet<Job>(new Action<Job>(this.attach_Jobs), new Action<Job>(this.detach_Jobs));
			this._Quotation_Routes = new EntitySet<Quotation_Route>(new Action<Quotation_Route>(this.attach_Quotation_Routes), new Action<Quotation_Route>(this.detach_Quotation_Routes));
			this._TransportCompanies = new EntitySet<TransportCompany>(new Action<TransportCompany>(this.attach_TransportCompanies), new Action<TransportCompany>(this.detach_TransportCompanies));
			this._TransportCompany_Routes = new EntitySet<TransportCompany_Route>(new Action<TransportCompany_Route>(this.attach_TransportCompany_Routes), new Action<TransportCompany_Route>(this.detach_TransportCompany_Routes));
			this._TransportCompany_VehicleType_Loads = new EntitySet<TransportCompany_VehicleType_Load>(new Action<TransportCompany_VehicleType_Load>(this.attach_TransportCompany_VehicleType_Loads), new Action<TransportCompany_VehicleType_Load>(this.detach_TransportCompany_VehicleType_Loads));
			this._TransportCompany_VehicleTypes = new EntitySet<TransportCompany_VehicleType>(new Action<TransportCompany_VehicleType>(this.attach_TransportCompany_VehicleTypes), new Action<TransportCompany_VehicleType>(this.detach_TransportCompany_VehicleTypes));
			this._TransportPlaces = new EntitySet<TransportPlace>(new Action<TransportPlace>(this.attach_TransportPlaces), new Action<TransportPlace>(this.detach_TransportPlaces));
			this._VehicleLoads = new EntitySet<VehicleLoad>(new Action<VehicleLoad>(this.attach_VehicleLoads), new Action<VehicleLoad>(this.detach_VehicleLoads));
			this._Sys_Role = default(EntityRef<Sys_Role>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Firstname", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Firstname
		{
			get
			{
				return this._Firstname;
			}
			set
			{
				if ((this._Firstname != value))
				{
					this.OnFirstnameChanging(value);
					this.SendPropertyChanging();
					this._Firstname = value;
					this.SendPropertyChanged("Firstname");
					this.OnFirstnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Lastname", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Lastname
		{
			get
			{
				return this._Lastname;
			}
			set
			{
				if ((this._Lastname != value))
				{
					this.OnLastnameChanging(value);
					this.SendPropertyChanging();
					this._Lastname = value;
					this.SendPropertyChanged("Lastname");
					this.OnLastnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Username", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Username
		{
			get
			{
				return this._Username;
			}
			set
			{
				if ((this._Username != value))
				{
					this.OnUsernameChanging(value);
					this.SendPropertyChanging();
					this._Username = value;
					this.SendPropertyChanged("Username");
					this.OnUsernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateOfBirth", DbType="DateTime NOT NULL")]
		public System.DateTime DateOfBirth
		{
			get
			{
				return this._DateOfBirth;
			}
			set
			{
				if ((this._DateOfBirth != value))
				{
					this.OnDateOfBirthChanging(value);
					this.SendPropertyChanging();
					this._DateOfBirth = value;
					this.SendPropertyChanged("DateOfBirth");
					this.OnDateOfBirthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Avatar", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string Avatar
		{
			get
			{
				return this._Avatar;
			}
			set
			{
				if ((this._Avatar != value))
				{
					this.OnAvatarChanging(value);
					this.SendPropertyChanging();
					this._Avatar = value;
					this.SendPropertyChanged("Avatar");
					this.OnAvatarChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhoneNumber", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string PhoneNumber
		{
			get
			{
				return this._PhoneNumber;
			}
			set
			{
				if ((this._PhoneNumber != value))
				{
					this.OnPhoneNumberChanging(value);
					this.SendPropertyChanging();
					this._PhoneNumber = value;
					this.SendPropertyChanged("PhoneNumber");
					this.OnPhoneNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleID", DbType="Int NOT NULL")]
		public int RoleID
		{
			get
			{
				return this._RoleID;
			}
			set
			{
				if ((this._RoleID != value))
				{
					if (this._Sys_Role.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRoleIDChanging(value);
					this.SendPropertyChanging();
					this._RoleID = value;
					this.SendPropertyChanged("RoleID");
					this.OnRoleIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDeleted", DbType="Bit NOT NULL")]
		public bool IsDeleted
		{
			get
			{
				return this._IsDeleted;
			}
			set
			{
				if ((this._IsDeleted != value))
				{
					this.OnIsDeletedChanging(value);
					this.SendPropertyChanging();
					this._IsDeleted = value;
					this.SendPropertyChanged("IsDeleted");
					this.OnIsDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Sys_User_Agent_PrepaidDetail", Storage="_Agent_PrepaidDetails", ThisKey="ID", OtherKey="UpdatedBy")]
		public EntitySet<Agent_PrepaidDetail> Agent_PrepaidDetails
		{
			get
			{
				return this._Agent_PrepaidDetails;
			}
			set
			{
				this._Agent_PrepaidDetails.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Sys_User_VehicleType", Storage="_VehicleTypes", ThisKey="ID", OtherKey="UpdatedBy")]
		public EntitySet<VehicleType> VehicleTypes
		{
			get
			{
				return this._VehicleTypes;
			}
			set
			{
				this._VehicleTypes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Sys_User_Agent_Prepaid", Storage="_Agent_Prepaids", ThisKey="ID", OtherKey="AgentID")]
		public EntitySet<Agent_Prepaid> Agent_Prepaids
		{
			get
			{
				return this._Agent_Prepaids;
			}
			set
			{
				this._Agent_Prepaids.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Sys_User_Agent_Prepaid1", Storage="_Agent_Prepaids1", ThisKey="ID", OtherKey="UpdatedBy")]
		public EntitySet<Agent_Prepaid> Agent_Prepaids1
		{
			get
			{
				return this._Agent_Prepaids1;
			}
			set
			{
				this._Agent_Prepaids1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Sys_User_Customer_Prepaid", Storage="_Customer_Prepaids", ThisKey="ID", OtherKey="UpdatedBy")]
		public EntitySet<Customer_Prepaid> Customer_Prepaids
		{
			get
			{
				return this._Customer_Prepaids;
			}
			set
			{
				this._Customer_Prepaids.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Sys_User_CustomerQuotation_Custom", Storage="_CustomerQuotation_Customs", ThisKey="ID", OtherKey="UpdatedBy")]
		public EntitySet<CustomerQuotation_Custom> CustomerQuotation_Customs
		{
			get
			{
				return this._CustomerQuotation_Customs;
			}
			set
			{
				this._CustomerQuotation_Customs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Sys_User_CustomerQuotation_CustomsDetail", Storage="_CustomerQuotation_CustomsDetails", ThisKey="ID", OtherKey="UpdatedBy")]
		public EntitySet<CustomerQuotation_CustomsDetail> CustomerQuotation_CustomsDetails
		{
			get
			{
				return this._CustomerQuotation_CustomsDetails;
			}
			set
			{
				this._CustomerQuotation_CustomsDetails.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Sys_User_CustomerQuotation_Route", Storage="_CustomerQuotation_Routes", ThisKey="ID", OtherKey="UpdatedBy")]
		public EntitySet<CustomerQuotation_Route> CustomerQuotation_Routes
		{
			get
			{
				return this._CustomerQuotation_Routes;
			}
			set
			{
				this._CustomerQuotation_Routes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Sys_User_Customer", Storage="_Customers", ThisKey="ID", OtherKey="UpdatedBy")]
		public EntitySet<Customer> Customers
		{
			get
			{
				return this._Customers;
			}
			set
			{
				this._Customers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Sys_User_CustomsProcess_FeeType", Storage="_CustomsProcess_FeeTypes", ThisKey="ID", OtherKey="UpdatedBy")]
		public EntitySet<CustomsProcess_FeeType> CustomsProcess_FeeTypes
		{
			get
			{
				return this._CustomsProcess_FeeTypes;
			}
			set
			{
				this._CustomsProcess_FeeTypes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Sys_User_CustomsProcess_QuotationDetail", Storage="_CustomsProcess_QuotationDetails", ThisKey="ID", OtherKey="UpdatedBy")]
		public EntitySet<CustomsProcess_QuotationDetail> CustomsProcess_QuotationDetails
		{
			get
			{
				return this._CustomsProcess_QuotationDetails;
			}
			set
			{
				this._CustomsProcess_QuotationDetails.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Sys_User_CustomsProcess_Quotation", Storage="_CustomsProcess_Quotations", ThisKey="ID", OtherKey="UpdatedBy")]
		public EntitySet<CustomsProcess_Quotation> CustomsProcess_Quotations
		{
			get
			{
				return this._CustomsProcess_Quotations;
			}
			set
			{
				this._CustomsProcess_Quotations.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Sys_User_GoodsType", Storage="_GoodsTypes", ThisKey="ID", OtherKey="UpdatedBy")]
		public EntitySet<GoodsType> GoodsTypes
		{
			get
			{
				return this._GoodsTypes;
			}
			set
			{
				this._GoodsTypes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Sys_User_Job_InOutFee", Storage="_Job_InOutFees", ThisKey="ID", OtherKey="UpdatedBy")]
		public EntitySet<Job_InOutFee> Job_InOutFees
		{
			get
			{
				return this._Job_InOutFees;
			}
			set
			{
				this._Job_InOutFees.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Sys_User_Job_Prepaid", Storage="_Job_Prepaids", ThisKey="ID", OtherKey="UpdatedBy")]
		public EntitySet<Job_Prepaid> Job_Prepaids
		{
			get
			{
				return this._Job_Prepaids;
			}
			set
			{
				this._Job_Prepaids.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Sys_User_Job_QuotationRoute", Storage="_Job_QuotationRoutes", ThisKey="ID", OtherKey="UpdatedBy")]
		public EntitySet<Job_QuotationRoute> Job_QuotationRoutes
		{
			get
			{
				return this._Job_QuotationRoutes;
			}
			set
			{
				this._Job_QuotationRoutes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Sys_User_Job_Working", Storage="_Job_Workings", ThisKey="ID", OtherKey="UpdatedBy")]
		public EntitySet<Job_Working> Job_Workings
		{
			get
			{
				return this._Job_Workings;
			}
			set
			{
				this._Job_Workings.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Sys_User_Job", Storage="_Jobs", ThisKey="ID", OtherKey="UpdatedBy")]
		public EntitySet<Job> Jobs
		{
			get
			{
				return this._Jobs;
			}
			set
			{
				this._Jobs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Sys_User_Quotation_Route", Storage="_Quotation_Routes", ThisKey="ID", OtherKey="UpdatedBy")]
		public EntitySet<Quotation_Route> Quotation_Routes
		{
			get
			{
				return this._Quotation_Routes;
			}
			set
			{
				this._Quotation_Routes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Sys_User_TransportCompany", Storage="_TransportCompanies", ThisKey="ID", OtherKey="UpdatedBy")]
		public EntitySet<TransportCompany> TransportCompanies
		{
			get
			{
				return this._TransportCompanies;
			}
			set
			{
				this._TransportCompanies.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Sys_User_TransportCompany_Route", Storage="_TransportCompany_Routes", ThisKey="ID", OtherKey="UpdatedBy")]
		public EntitySet<TransportCompany_Route> TransportCompany_Routes
		{
			get
			{
				return this._TransportCompany_Routes;
			}
			set
			{
				this._TransportCompany_Routes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Sys_User_TransportCompany_VehicleType_Load", Storage="_TransportCompany_VehicleType_Loads", ThisKey="ID", OtherKey="UpdatedBy")]
		public EntitySet<TransportCompany_VehicleType_Load> TransportCompany_VehicleType_Loads
		{
			get
			{
				return this._TransportCompany_VehicleType_Loads;
			}
			set
			{
				this._TransportCompany_VehicleType_Loads.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Sys_User_TransportCompany_VehicleType", Storage="_TransportCompany_VehicleTypes", ThisKey="ID", OtherKey="UpdatedBy")]
		public EntitySet<TransportCompany_VehicleType> TransportCompany_VehicleTypes
		{
			get
			{
				return this._TransportCompany_VehicleTypes;
			}
			set
			{
				this._TransportCompany_VehicleTypes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Sys_User_TransportPlace", Storage="_TransportPlaces", ThisKey="ID", OtherKey="UpdatedBy")]
		public EntitySet<TransportPlace> TransportPlaces
		{
			get
			{
				return this._TransportPlaces;
			}
			set
			{
				this._TransportPlaces.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Sys_User_VehicleLoad", Storage="_VehicleLoads", ThisKey="ID", OtherKey="UpdatedBy")]
		public EntitySet<VehicleLoad> VehicleLoads
		{
			get
			{
				return this._VehicleLoads;
			}
			set
			{
				this._VehicleLoads.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Sys_Role_Sys_User", Storage="_Sys_Role", ThisKey="RoleID", OtherKey="ID", IsForeignKey=true)]
		public Sys_Role Sys_Role
		{
			get
			{
				return this._Sys_Role.Entity;
			}
			set
			{
				Sys_Role previousValue = this._Sys_Role.Entity;
				if (((previousValue != value) 
							|| (this._Sys_Role.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Sys_Role.Entity = null;
						previousValue.Sys_Users.Remove(this);
					}
					this._Sys_Role.Entity = value;
					if ((value != null))
					{
						value.Sys_Users.Add(this);
						this._RoleID = value.ID;
					}
					else
					{
						this._RoleID = default(int);
					}
					this.SendPropertyChanged("Sys_Role");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Agent_PrepaidDetails(Agent_PrepaidDetail entity)
		{
			this.SendPropertyChanging();
			entity.Sys_User = this;
		}
		
		private void detach_Agent_PrepaidDetails(Agent_PrepaidDetail entity)
		{
			this.SendPropertyChanging();
			entity.Sys_User = null;
		}
		
		private void attach_VehicleTypes(VehicleType entity)
		{
			this.SendPropertyChanging();
			entity.Sys_User = this;
		}
		
		private void detach_VehicleTypes(VehicleType entity)
		{
			this.SendPropertyChanging();
			entity.Sys_User = null;
		}
		
		private void attach_Agent_Prepaids(Agent_Prepaid entity)
		{
			this.SendPropertyChanging();
			entity.Sys_User = this;
		}
		
		private void detach_Agent_Prepaids(Agent_Prepaid entity)
		{
			this.SendPropertyChanging();
			entity.Sys_User = null;
		}
		
		private void attach_Agent_Prepaids1(Agent_Prepaid entity)
		{
			this.SendPropertyChanging();
			entity.Sys_User1 = this;
		}
		
		private void detach_Agent_Prepaids1(Agent_Prepaid entity)
		{
			this.SendPropertyChanging();
			entity.Sys_User1 = null;
		}
		
		private void attach_Customer_Prepaids(Customer_Prepaid entity)
		{
			this.SendPropertyChanging();
			entity.Sys_User = this;
		}
		
		private void detach_Customer_Prepaids(Customer_Prepaid entity)
		{
			this.SendPropertyChanging();
			entity.Sys_User = null;
		}
		
		private void attach_CustomerQuotation_Customs(CustomerQuotation_Custom entity)
		{
			this.SendPropertyChanging();
			entity.Sys_User = this;
		}
		
		private void detach_CustomerQuotation_Customs(CustomerQuotation_Custom entity)
		{
			this.SendPropertyChanging();
			entity.Sys_User = null;
		}
		
		private void attach_CustomerQuotation_CustomsDetails(CustomerQuotation_CustomsDetail entity)
		{
			this.SendPropertyChanging();
			entity.Sys_User = this;
		}
		
		private void detach_CustomerQuotation_CustomsDetails(CustomerQuotation_CustomsDetail entity)
		{
			this.SendPropertyChanging();
			entity.Sys_User = null;
		}
		
		private void attach_CustomerQuotation_Routes(CustomerQuotation_Route entity)
		{
			this.SendPropertyChanging();
			entity.Sys_User = this;
		}
		
		private void detach_CustomerQuotation_Routes(CustomerQuotation_Route entity)
		{
			this.SendPropertyChanging();
			entity.Sys_User = null;
		}
		
		private void attach_Customers(Customer entity)
		{
			this.SendPropertyChanging();
			entity.Sys_User = this;
		}
		
		private void detach_Customers(Customer entity)
		{
			this.SendPropertyChanging();
			entity.Sys_User = null;
		}
		
		private void attach_CustomsProcess_FeeTypes(CustomsProcess_FeeType entity)
		{
			this.SendPropertyChanging();
			entity.Sys_User = this;
		}
		
		private void detach_CustomsProcess_FeeTypes(CustomsProcess_FeeType entity)
		{
			this.SendPropertyChanging();
			entity.Sys_User = null;
		}
		
		private void attach_CustomsProcess_QuotationDetails(CustomsProcess_QuotationDetail entity)
		{
			this.SendPropertyChanging();
			entity.Sys_User = this;
		}
		
		private void detach_CustomsProcess_QuotationDetails(CustomsProcess_QuotationDetail entity)
		{
			this.SendPropertyChanging();
			entity.Sys_User = null;
		}
		
		private void attach_CustomsProcess_Quotations(CustomsProcess_Quotation entity)
		{
			this.SendPropertyChanging();
			entity.Sys_User = this;
		}
		
		private void detach_CustomsProcess_Quotations(CustomsProcess_Quotation entity)
		{
			this.SendPropertyChanging();
			entity.Sys_User = null;
		}
		
		private void attach_GoodsTypes(GoodsType entity)
		{
			this.SendPropertyChanging();
			entity.Sys_User = this;
		}
		
		private void detach_GoodsTypes(GoodsType entity)
		{
			this.SendPropertyChanging();
			entity.Sys_User = null;
		}
		
		private void attach_Job_InOutFees(Job_InOutFee entity)
		{
			this.SendPropertyChanging();
			entity.Sys_User = this;
		}
		
		private void detach_Job_InOutFees(Job_InOutFee entity)
		{
			this.SendPropertyChanging();
			entity.Sys_User = null;
		}
		
		private void attach_Job_Prepaids(Job_Prepaid entity)
		{
			this.SendPropertyChanging();
			entity.Sys_User = this;
		}
		
		private void detach_Job_Prepaids(Job_Prepaid entity)
		{
			this.SendPropertyChanging();
			entity.Sys_User = null;
		}
		
		private void attach_Job_QuotationRoutes(Job_QuotationRoute entity)
		{
			this.SendPropertyChanging();
			entity.Sys_User = this;
		}
		
		private void detach_Job_QuotationRoutes(Job_QuotationRoute entity)
		{
			this.SendPropertyChanging();
			entity.Sys_User = null;
		}
		
		private void attach_Job_Workings(Job_Working entity)
		{
			this.SendPropertyChanging();
			entity.Sys_User = this;
		}
		
		private void detach_Job_Workings(Job_Working entity)
		{
			this.SendPropertyChanging();
			entity.Sys_User = null;
		}
		
		private void attach_Jobs(Job entity)
		{
			this.SendPropertyChanging();
			entity.Sys_User = this;
		}
		
		private void detach_Jobs(Job entity)
		{
			this.SendPropertyChanging();
			entity.Sys_User = null;
		}
		
		private void attach_Quotation_Routes(Quotation_Route entity)
		{
			this.SendPropertyChanging();
			entity.Sys_User = this;
		}
		
		private void detach_Quotation_Routes(Quotation_Route entity)
		{
			this.SendPropertyChanging();
			entity.Sys_User = null;
		}
		
		private void attach_TransportCompanies(TransportCompany entity)
		{
			this.SendPropertyChanging();
			entity.Sys_User = this;
		}
		
		private void detach_TransportCompanies(TransportCompany entity)
		{
			this.SendPropertyChanging();
			entity.Sys_User = null;
		}
		
		private void attach_TransportCompany_Routes(TransportCompany_Route entity)
		{
			this.SendPropertyChanging();
			entity.Sys_User = this;
		}
		
		private void detach_TransportCompany_Routes(TransportCompany_Route entity)
		{
			this.SendPropertyChanging();
			entity.Sys_User = null;
		}
		
		private void attach_TransportCompany_VehicleType_Loads(TransportCompany_VehicleType_Load entity)
		{
			this.SendPropertyChanging();
			entity.Sys_User = this;
		}
		
		private void detach_TransportCompany_VehicleType_Loads(TransportCompany_VehicleType_Load entity)
		{
			this.SendPropertyChanging();
			entity.Sys_User = null;
		}
		
		private void attach_TransportCompany_VehicleTypes(TransportCompany_VehicleType entity)
		{
			this.SendPropertyChanging();
			entity.Sys_User = this;
		}
		
		private void detach_TransportCompany_VehicleTypes(TransportCompany_VehicleType entity)
		{
			this.SendPropertyChanging();
			entity.Sys_User = null;
		}
		
		private void attach_TransportPlaces(TransportPlace entity)
		{
			this.SendPropertyChanging();
			entity.Sys_User = this;
		}
		
		private void detach_TransportPlaces(TransportPlace entity)
		{
			this.SendPropertyChanging();
			entity.Sys_User = null;
		}
		
		private void attach_VehicleLoads(VehicleLoad entity)
		{
			this.SendPropertyChanging();
			entity.Sys_User = this;
		}
		
		private void detach_VehicleLoads(VehicleLoad entity)
		{
			this.SendPropertyChanging();
			entity.Sys_User = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TransportCompanies")]
	public partial class TransportCompany : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Name;
		
		private string _Address;
		
		private string _PhoneNumber;
		
		private string _Email;
		
		private int _Status;
		
		private bool _IsDeleted;
		
		private System.DateTime _LastestUpdated;
		
		private int _UpdatedBy;
		
		private EntitySet<TransportCompany_Route> _TransportCompany_Routes;
		
		private EntitySet<TransportCompany_VehicleType> _TransportCompany_VehicleTypes;
		
		private EntityRef<Sys_User> _Sys_User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnPhoneNumberChanging(string value);
    partial void OnPhoneNumberChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    partial void OnIsDeletedChanging(bool value);
    partial void OnIsDeletedChanged();
    partial void OnLastestUpdatedChanging(System.DateTime value);
    partial void OnLastestUpdatedChanged();
    partial void OnUpdatedByChanging(int value);
    partial void OnUpdatedByChanged();
    #endregion
		
		public TransportCompany()
		{
			this._TransportCompany_Routes = new EntitySet<TransportCompany_Route>(new Action<TransportCompany_Route>(this.attach_TransportCompany_Routes), new Action<TransportCompany_Route>(this.detach_TransportCompany_Routes));
			this._TransportCompany_VehicleTypes = new EntitySet<TransportCompany_VehicleType>(new Action<TransportCompany_VehicleType>(this.attach_TransportCompany_VehicleTypes), new Action<TransportCompany_VehicleType>(this.detach_TransportCompany_VehicleTypes));
			this._Sys_User = default(EntityRef<Sys_User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhoneNumber", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string PhoneNumber
		{
			get
			{
				return this._PhoneNumber;
			}
			set
			{
				if ((this._PhoneNumber != value))
				{
					this.OnPhoneNumberChanging(value);
					this.SendPropertyChanging();
					this._PhoneNumber = value;
					this.SendPropertyChanged("PhoneNumber");
					this.OnPhoneNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDeleted", DbType="Bit NOT NULL")]
		public bool IsDeleted
		{
			get
			{
				return this._IsDeleted;
			}
			set
			{
				if ((this._IsDeleted != value))
				{
					this.OnIsDeletedChanging(value);
					this.SendPropertyChanging();
					this._IsDeleted = value;
					this.SendPropertyChanged("IsDeleted");
					this.OnIsDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastestUpdated", DbType="DateTime NOT NULL")]
		public System.DateTime LastestUpdated
		{
			get
			{
				return this._LastestUpdated;
			}
			set
			{
				if ((this._LastestUpdated != value))
				{
					this.OnLastestUpdatedChanging(value);
					this.SendPropertyChanging();
					this._LastestUpdated = value;
					this.SendPropertyChanged("LastestUpdated");
					this.OnLastestUpdatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedBy", DbType="Int NOT NULL")]
		public int UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					if (this._Sys_User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._UpdatedBy = value;
					this.SendPropertyChanged("UpdatedBy");
					this.OnUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TransportCompany_TransportCompany_Route", Storage="_TransportCompany_Routes", ThisKey="ID", OtherKey="TransCompID")]
		public EntitySet<TransportCompany_Route> TransportCompany_Routes
		{
			get
			{
				return this._TransportCompany_Routes;
			}
			set
			{
				this._TransportCompany_Routes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TransportCompany_TransportCompany_VehicleType", Storage="_TransportCompany_VehicleTypes", ThisKey="ID", OtherKey="TransCompID")]
		public EntitySet<TransportCompany_VehicleType> TransportCompany_VehicleTypes
		{
			get
			{
				return this._TransportCompany_VehicleTypes;
			}
			set
			{
				this._TransportCompany_VehicleTypes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Sys_User_TransportCompany", Storage="_Sys_User", ThisKey="UpdatedBy", OtherKey="ID", IsForeignKey=true)]
		public Sys_User Sys_User
		{
			get
			{
				return this._Sys_User.Entity;
			}
			set
			{
				Sys_User previousValue = this._Sys_User.Entity;
				if (((previousValue != value) 
							|| (this._Sys_User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Sys_User.Entity = null;
						previousValue.TransportCompanies.Remove(this);
					}
					this._Sys_User.Entity = value;
					if ((value != null))
					{
						value.TransportCompanies.Add(this);
						this._UpdatedBy = value.ID;
					}
					else
					{
						this._UpdatedBy = default(int);
					}
					this.SendPropertyChanged("Sys_User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TransportCompany_Routes(TransportCompany_Route entity)
		{
			this.SendPropertyChanging();
			entity.TransportCompany = this;
		}
		
		private void detach_TransportCompany_Routes(TransportCompany_Route entity)
		{
			this.SendPropertyChanging();
			entity.TransportCompany = null;
		}
		
		private void attach_TransportCompany_VehicleTypes(TransportCompany_VehicleType entity)
		{
			this.SendPropertyChanging();
			entity.TransportCompany = this;
		}
		
		private void detach_TransportCompany_VehicleTypes(TransportCompany_VehicleType entity)
		{
			this.SendPropertyChanging();
			entity.TransportCompany = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TransportCompany_Routes")]
	public partial class TransportCompany_Route : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _TransCompID;
		
		private int _StartPoint;
		
		private int _EndPoint;
		
		private bool _IsDeleted;
		
		private System.DateTime _LastestUpdated;
		
		private int _UpdatedBy;
		
		private EntitySet<Quotation_Route> _Quotation_Routes;
		
		private EntityRef<Sys_User> _Sys_User;
		
		private EntityRef<TransportCompany> _TransportCompany;
		
		private EntityRef<TransportPlace> _TransportPlace;
		
		private EntityRef<TransportPlace> _TransportPlace1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnTransCompIDChanging(int value);
    partial void OnTransCompIDChanged();
    partial void OnStartPointChanging(int value);
    partial void OnStartPointChanged();
    partial void OnEndPointChanging(int value);
    partial void OnEndPointChanged();
    partial void OnIsDeletedChanging(bool value);
    partial void OnIsDeletedChanged();
    partial void OnLastestUpdatedChanging(System.DateTime value);
    partial void OnLastestUpdatedChanged();
    partial void OnUpdatedByChanging(int value);
    partial void OnUpdatedByChanged();
    #endregion
		
		public TransportCompany_Route()
		{
			this._Quotation_Routes = new EntitySet<Quotation_Route>(new Action<Quotation_Route>(this.attach_Quotation_Routes), new Action<Quotation_Route>(this.detach_Quotation_Routes));
			this._Sys_User = default(EntityRef<Sys_User>);
			this._TransportCompany = default(EntityRef<TransportCompany>);
			this._TransportPlace = default(EntityRef<TransportPlace>);
			this._TransportPlace1 = default(EntityRef<TransportPlace>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TransCompID", DbType="Int NOT NULL")]
		public int TransCompID
		{
			get
			{
				return this._TransCompID;
			}
			set
			{
				if ((this._TransCompID != value))
				{
					if (this._TransportCompany.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTransCompIDChanging(value);
					this.SendPropertyChanging();
					this._TransCompID = value;
					this.SendPropertyChanged("TransCompID");
					this.OnTransCompIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartPoint", DbType="Int NOT NULL")]
		public int StartPoint
		{
			get
			{
				return this._StartPoint;
			}
			set
			{
				if ((this._StartPoint != value))
				{
					if (this._TransportPlace.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStartPointChanging(value);
					this.SendPropertyChanging();
					this._StartPoint = value;
					this.SendPropertyChanged("StartPoint");
					this.OnStartPointChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndPoint", DbType="Int NOT NULL")]
		public int EndPoint
		{
			get
			{
				return this._EndPoint;
			}
			set
			{
				if ((this._EndPoint != value))
				{
					if (this._TransportPlace1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEndPointChanging(value);
					this.SendPropertyChanging();
					this._EndPoint = value;
					this.SendPropertyChanged("EndPoint");
					this.OnEndPointChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDeleted", DbType="Bit NOT NULL")]
		public bool IsDeleted
		{
			get
			{
				return this._IsDeleted;
			}
			set
			{
				if ((this._IsDeleted != value))
				{
					this.OnIsDeletedChanging(value);
					this.SendPropertyChanging();
					this._IsDeleted = value;
					this.SendPropertyChanged("IsDeleted");
					this.OnIsDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastestUpdated", DbType="DateTime NOT NULL")]
		public System.DateTime LastestUpdated
		{
			get
			{
				return this._LastestUpdated;
			}
			set
			{
				if ((this._LastestUpdated != value))
				{
					this.OnLastestUpdatedChanging(value);
					this.SendPropertyChanging();
					this._LastestUpdated = value;
					this.SendPropertyChanged("LastestUpdated");
					this.OnLastestUpdatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedBy", DbType="Int NOT NULL")]
		public int UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					if (this._Sys_User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._UpdatedBy = value;
					this.SendPropertyChanged("UpdatedBy");
					this.OnUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TransportCompany_Route_Quotation_Route", Storage="_Quotation_Routes", ThisKey="ID", OtherKey="RouteID")]
		public EntitySet<Quotation_Route> Quotation_Routes
		{
			get
			{
				return this._Quotation_Routes;
			}
			set
			{
				this._Quotation_Routes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Sys_User_TransportCompany_Route", Storage="_Sys_User", ThisKey="UpdatedBy", OtherKey="ID", IsForeignKey=true)]
		public Sys_User Sys_User
		{
			get
			{
				return this._Sys_User.Entity;
			}
			set
			{
				Sys_User previousValue = this._Sys_User.Entity;
				if (((previousValue != value) 
							|| (this._Sys_User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Sys_User.Entity = null;
						previousValue.TransportCompany_Routes.Remove(this);
					}
					this._Sys_User.Entity = value;
					if ((value != null))
					{
						value.TransportCompany_Routes.Add(this);
						this._UpdatedBy = value.ID;
					}
					else
					{
						this._UpdatedBy = default(int);
					}
					this.SendPropertyChanged("Sys_User");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TransportCompany_TransportCompany_Route", Storage="_TransportCompany", ThisKey="TransCompID", OtherKey="ID", IsForeignKey=true)]
		public TransportCompany TransportCompany
		{
			get
			{
				return this._TransportCompany.Entity;
			}
			set
			{
				TransportCompany previousValue = this._TransportCompany.Entity;
				if (((previousValue != value) 
							|| (this._TransportCompany.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TransportCompany.Entity = null;
						previousValue.TransportCompany_Routes.Remove(this);
					}
					this._TransportCompany.Entity = value;
					if ((value != null))
					{
						value.TransportCompany_Routes.Add(this);
						this._TransCompID = value.ID;
					}
					else
					{
						this._TransCompID = default(int);
					}
					this.SendPropertyChanged("TransportCompany");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TransportPlace_TransportCompany_Route", Storage="_TransportPlace", ThisKey="StartPoint", OtherKey="ID", IsForeignKey=true)]
		public TransportPlace TransportPlace
		{
			get
			{
				return this._TransportPlace.Entity;
			}
			set
			{
				TransportPlace previousValue = this._TransportPlace.Entity;
				if (((previousValue != value) 
							|| (this._TransportPlace.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TransportPlace.Entity = null;
						previousValue.TransportCompany_Routes.Remove(this);
					}
					this._TransportPlace.Entity = value;
					if ((value != null))
					{
						value.TransportCompany_Routes.Add(this);
						this._StartPoint = value.ID;
					}
					else
					{
						this._StartPoint = default(int);
					}
					this.SendPropertyChanged("TransportPlace");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TransportPlace_TransportCompany_Route1", Storage="_TransportPlace1", ThisKey="EndPoint", OtherKey="ID", IsForeignKey=true)]
		public TransportPlace TransportPlace1
		{
			get
			{
				return this._TransportPlace1.Entity;
			}
			set
			{
				TransportPlace previousValue = this._TransportPlace1.Entity;
				if (((previousValue != value) 
							|| (this._TransportPlace1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TransportPlace1.Entity = null;
						previousValue.TransportCompany_Routes1.Remove(this);
					}
					this._TransportPlace1.Entity = value;
					if ((value != null))
					{
						value.TransportCompany_Routes1.Add(this);
						this._EndPoint = value.ID;
					}
					else
					{
						this._EndPoint = default(int);
					}
					this.SendPropertyChanged("TransportPlace1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Quotation_Routes(Quotation_Route entity)
		{
			this.SendPropertyChanging();
			entity.TransportCompany_Route = this;
		}
		
		private void detach_Quotation_Routes(Quotation_Route entity)
		{
			this.SendPropertyChanging();
			entity.TransportCompany_Route = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TransportCompany_VehicleType_Loads")]
	public partial class TransportCompany_VehicleType_Load : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _TransComp_VehicleTypeID;
		
		private int _VehicleLoadID;
		
		private bool _IsDeleted;
		
		private int _UpdatedBy;
		
		private System.DateTime _LastestUpdated;
		
		private EntitySet<Quotation_Route> _Quotation_Routes;
		
		private EntityRef<Sys_User> _Sys_User;
		
		private EntityRef<TransportCompany_VehicleType> _TransportCompany_VehicleType;
		
		private EntityRef<VehicleLoad> _VehicleLoad;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnTransComp_VehicleTypeIDChanging(int value);
    partial void OnTransComp_VehicleTypeIDChanged();
    partial void OnVehicleLoadIDChanging(int value);
    partial void OnVehicleLoadIDChanged();
    partial void OnIsDeletedChanging(bool value);
    partial void OnIsDeletedChanged();
    partial void OnUpdatedByChanging(int value);
    partial void OnUpdatedByChanged();
    partial void OnLastestUpdatedChanging(System.DateTime value);
    partial void OnLastestUpdatedChanged();
    #endregion
		
		public TransportCompany_VehicleType_Load()
		{
			this._Quotation_Routes = new EntitySet<Quotation_Route>(new Action<Quotation_Route>(this.attach_Quotation_Routes), new Action<Quotation_Route>(this.detach_Quotation_Routes));
			this._Sys_User = default(EntityRef<Sys_User>);
			this._TransportCompany_VehicleType = default(EntityRef<TransportCompany_VehicleType>);
			this._VehicleLoad = default(EntityRef<VehicleLoad>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TransComp_VehicleTypeID", DbType="Int NOT NULL")]
		public int TransComp_VehicleTypeID
		{
			get
			{
				return this._TransComp_VehicleTypeID;
			}
			set
			{
				if ((this._TransComp_VehicleTypeID != value))
				{
					if (this._TransportCompany_VehicleType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTransComp_VehicleTypeIDChanging(value);
					this.SendPropertyChanging();
					this._TransComp_VehicleTypeID = value;
					this.SendPropertyChanged("TransComp_VehicleTypeID");
					this.OnTransComp_VehicleTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VehicleLoadID", DbType="Int NOT NULL")]
		public int VehicleLoadID
		{
			get
			{
				return this._VehicleLoadID;
			}
			set
			{
				if ((this._VehicleLoadID != value))
				{
					if (this._VehicleLoad.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnVehicleLoadIDChanging(value);
					this.SendPropertyChanging();
					this._VehicleLoadID = value;
					this.SendPropertyChanged("VehicleLoadID");
					this.OnVehicleLoadIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDeleted", DbType="Bit NOT NULL")]
		public bool IsDeleted
		{
			get
			{
				return this._IsDeleted;
			}
			set
			{
				if ((this._IsDeleted != value))
				{
					this.OnIsDeletedChanging(value);
					this.SendPropertyChanging();
					this._IsDeleted = value;
					this.SendPropertyChanged("IsDeleted");
					this.OnIsDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedBy", DbType="Int NOT NULL")]
		public int UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					if (this._Sys_User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._UpdatedBy = value;
					this.SendPropertyChanged("UpdatedBy");
					this.OnUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastestUpdated", DbType="DateTime NOT NULL")]
		public System.DateTime LastestUpdated
		{
			get
			{
				return this._LastestUpdated;
			}
			set
			{
				if ((this._LastestUpdated != value))
				{
					this.OnLastestUpdatedChanging(value);
					this.SendPropertyChanging();
					this._LastestUpdated = value;
					this.SendPropertyChanged("LastestUpdated");
					this.OnLastestUpdatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TransportCompany_VehicleType_Load_Quotation_Route", Storage="_Quotation_Routes", ThisKey="ID", OtherKey="VehicleLoadID")]
		public EntitySet<Quotation_Route> Quotation_Routes
		{
			get
			{
				return this._Quotation_Routes;
			}
			set
			{
				this._Quotation_Routes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Sys_User_TransportCompany_VehicleType_Load", Storage="_Sys_User", ThisKey="UpdatedBy", OtherKey="ID", IsForeignKey=true)]
		public Sys_User Sys_User
		{
			get
			{
				return this._Sys_User.Entity;
			}
			set
			{
				Sys_User previousValue = this._Sys_User.Entity;
				if (((previousValue != value) 
							|| (this._Sys_User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Sys_User.Entity = null;
						previousValue.TransportCompany_VehicleType_Loads.Remove(this);
					}
					this._Sys_User.Entity = value;
					if ((value != null))
					{
						value.TransportCompany_VehicleType_Loads.Add(this);
						this._UpdatedBy = value.ID;
					}
					else
					{
						this._UpdatedBy = default(int);
					}
					this.SendPropertyChanged("Sys_User");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TransportCompany_VehicleType_TransportCompany_VehicleType_Load", Storage="_TransportCompany_VehicleType", ThisKey="TransComp_VehicleTypeID", OtherKey="ID", IsForeignKey=true)]
		public TransportCompany_VehicleType TransportCompany_VehicleType
		{
			get
			{
				return this._TransportCompany_VehicleType.Entity;
			}
			set
			{
				TransportCompany_VehicleType previousValue = this._TransportCompany_VehicleType.Entity;
				if (((previousValue != value) 
							|| (this._TransportCompany_VehicleType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TransportCompany_VehicleType.Entity = null;
						previousValue.TransportCompany_VehicleType_Loads.Remove(this);
					}
					this._TransportCompany_VehicleType.Entity = value;
					if ((value != null))
					{
						value.TransportCompany_VehicleType_Loads.Add(this);
						this._TransComp_VehicleTypeID = value.ID;
					}
					else
					{
						this._TransComp_VehicleTypeID = default(int);
					}
					this.SendPropertyChanged("TransportCompany_VehicleType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="VehicleLoad_TransportCompany_VehicleType_Load", Storage="_VehicleLoad", ThisKey="VehicleLoadID", OtherKey="ID", IsForeignKey=true)]
		public VehicleLoad VehicleLoad
		{
			get
			{
				return this._VehicleLoad.Entity;
			}
			set
			{
				VehicleLoad previousValue = this._VehicleLoad.Entity;
				if (((previousValue != value) 
							|| (this._VehicleLoad.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._VehicleLoad.Entity = null;
						previousValue.TransportCompany_VehicleType_Loads.Remove(this);
					}
					this._VehicleLoad.Entity = value;
					if ((value != null))
					{
						value.TransportCompany_VehicleType_Loads.Add(this);
						this._VehicleLoadID = value.ID;
					}
					else
					{
						this._VehicleLoadID = default(int);
					}
					this.SendPropertyChanged("VehicleLoad");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Quotation_Routes(Quotation_Route entity)
		{
			this.SendPropertyChanging();
			entity.TransportCompany_VehicleType_Load = this;
		}
		
		private void detach_Quotation_Routes(Quotation_Route entity)
		{
			this.SendPropertyChanging();
			entity.TransportCompany_VehicleType_Load = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TransportCompany_VehicleTypes")]
	public partial class TransportCompany_VehicleType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _TransCompID;
		
		private int _VehicleTypeID;
		
		private bool _IsDeleted;
		
		private int _UpdatedBy;
		
		private System.DateTime _LastestUpdated;
		
		private EntitySet<TransportCompany_VehicleType_Load> _TransportCompany_VehicleType_Loads;
		
		private EntityRef<Sys_User> _Sys_User;
		
		private EntityRef<TransportCompany> _TransportCompany;
		
		private EntityRef<VehicleType> _VehicleType;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnTransCompIDChanging(int value);
    partial void OnTransCompIDChanged();
    partial void OnVehicleTypeIDChanging(int value);
    partial void OnVehicleTypeIDChanged();
    partial void OnIsDeletedChanging(bool value);
    partial void OnIsDeletedChanged();
    partial void OnUpdatedByChanging(int value);
    partial void OnUpdatedByChanged();
    partial void OnLastestUpdatedChanging(System.DateTime value);
    partial void OnLastestUpdatedChanged();
    #endregion
		
		public TransportCompany_VehicleType()
		{
			this._TransportCompany_VehicleType_Loads = new EntitySet<TransportCompany_VehicleType_Load>(new Action<TransportCompany_VehicleType_Load>(this.attach_TransportCompany_VehicleType_Loads), new Action<TransportCompany_VehicleType_Load>(this.detach_TransportCompany_VehicleType_Loads));
			this._Sys_User = default(EntityRef<Sys_User>);
			this._TransportCompany = default(EntityRef<TransportCompany>);
			this._VehicleType = default(EntityRef<VehicleType>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TransCompID", DbType="Int NOT NULL")]
		public int TransCompID
		{
			get
			{
				return this._TransCompID;
			}
			set
			{
				if ((this._TransCompID != value))
				{
					if (this._TransportCompany.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTransCompIDChanging(value);
					this.SendPropertyChanging();
					this._TransCompID = value;
					this.SendPropertyChanged("TransCompID");
					this.OnTransCompIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VehicleTypeID", DbType="Int NOT NULL")]
		public int VehicleTypeID
		{
			get
			{
				return this._VehicleTypeID;
			}
			set
			{
				if ((this._VehicleTypeID != value))
				{
					if (this._VehicleType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnVehicleTypeIDChanging(value);
					this.SendPropertyChanging();
					this._VehicleTypeID = value;
					this.SendPropertyChanged("VehicleTypeID");
					this.OnVehicleTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDeleted", DbType="Bit NOT NULL")]
		public bool IsDeleted
		{
			get
			{
				return this._IsDeleted;
			}
			set
			{
				if ((this._IsDeleted != value))
				{
					this.OnIsDeletedChanging(value);
					this.SendPropertyChanging();
					this._IsDeleted = value;
					this.SendPropertyChanged("IsDeleted");
					this.OnIsDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedBy", DbType="Int NOT NULL")]
		public int UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					if (this._Sys_User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._UpdatedBy = value;
					this.SendPropertyChanged("UpdatedBy");
					this.OnUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastestUpdated", DbType="DateTime NOT NULL")]
		public System.DateTime LastestUpdated
		{
			get
			{
				return this._LastestUpdated;
			}
			set
			{
				if ((this._LastestUpdated != value))
				{
					this.OnLastestUpdatedChanging(value);
					this.SendPropertyChanging();
					this._LastestUpdated = value;
					this.SendPropertyChanged("LastestUpdated");
					this.OnLastestUpdatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TransportCompany_VehicleType_TransportCompany_VehicleType_Load", Storage="_TransportCompany_VehicleType_Loads", ThisKey="ID", OtherKey="TransComp_VehicleTypeID")]
		public EntitySet<TransportCompany_VehicleType_Load> TransportCompany_VehicleType_Loads
		{
			get
			{
				return this._TransportCompany_VehicleType_Loads;
			}
			set
			{
				this._TransportCompany_VehicleType_Loads.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Sys_User_TransportCompany_VehicleType", Storage="_Sys_User", ThisKey="UpdatedBy", OtherKey="ID", IsForeignKey=true)]
		public Sys_User Sys_User
		{
			get
			{
				return this._Sys_User.Entity;
			}
			set
			{
				Sys_User previousValue = this._Sys_User.Entity;
				if (((previousValue != value) 
							|| (this._Sys_User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Sys_User.Entity = null;
						previousValue.TransportCompany_VehicleTypes.Remove(this);
					}
					this._Sys_User.Entity = value;
					if ((value != null))
					{
						value.TransportCompany_VehicleTypes.Add(this);
						this._UpdatedBy = value.ID;
					}
					else
					{
						this._UpdatedBy = default(int);
					}
					this.SendPropertyChanged("Sys_User");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TransportCompany_TransportCompany_VehicleType", Storage="_TransportCompany", ThisKey="TransCompID", OtherKey="ID", IsForeignKey=true)]
		public TransportCompany TransportCompany
		{
			get
			{
				return this._TransportCompany.Entity;
			}
			set
			{
				TransportCompany previousValue = this._TransportCompany.Entity;
				if (((previousValue != value) 
							|| (this._TransportCompany.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TransportCompany.Entity = null;
						previousValue.TransportCompany_VehicleTypes.Remove(this);
					}
					this._TransportCompany.Entity = value;
					if ((value != null))
					{
						value.TransportCompany_VehicleTypes.Add(this);
						this._TransCompID = value.ID;
					}
					else
					{
						this._TransCompID = default(int);
					}
					this.SendPropertyChanged("TransportCompany");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="VehicleType_TransportCompany_VehicleType", Storage="_VehicleType", ThisKey="VehicleTypeID", OtherKey="ID", IsForeignKey=true)]
		public VehicleType VehicleType
		{
			get
			{
				return this._VehicleType.Entity;
			}
			set
			{
				VehicleType previousValue = this._VehicleType.Entity;
				if (((previousValue != value) 
							|| (this._VehicleType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._VehicleType.Entity = null;
						previousValue.TransportCompany_VehicleTypes.Remove(this);
					}
					this._VehicleType.Entity = value;
					if ((value != null))
					{
						value.TransportCompany_VehicleTypes.Add(this);
						this._VehicleTypeID = value.ID;
					}
					else
					{
						this._VehicleTypeID = default(int);
					}
					this.SendPropertyChanged("VehicleType");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TransportCompany_VehicleType_Loads(TransportCompany_VehicleType_Load entity)
		{
			this.SendPropertyChanging();
			entity.TransportCompany_VehicleType = this;
		}
		
		private void detach_TransportCompany_VehicleType_Loads(TransportCompany_VehicleType_Load entity)
		{
			this.SendPropertyChanging();
			entity.TransportCompany_VehicleType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TransportPlaces")]
	public partial class TransportPlace : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Name;
		
		private string _Email;
		
		private string _PhoneNumber;
		
		private bool _IsDeleted;
		
		private System.DateTime _LastestUpdated;
		
		private int _UpdatedBy;
		
		private string _Address;
		
		private EntitySet<Job_QuotationRoute> _Job_QuotationRoutes;
		
		private EntitySet<Job_QuotationRoute> _Job_QuotationRoutes1;
		
		private EntitySet<TransportCompany_Route> _TransportCompany_Routes;
		
		private EntitySet<TransportCompany_Route> _TransportCompany_Routes1;
		
		private EntityRef<Sys_User> _Sys_User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnPhoneNumberChanging(string value);
    partial void OnPhoneNumberChanged();
    partial void OnIsDeletedChanging(bool value);
    partial void OnIsDeletedChanged();
    partial void OnLastestUpdatedChanging(System.DateTime value);
    partial void OnLastestUpdatedChanged();
    partial void OnUpdatedByChanging(int value);
    partial void OnUpdatedByChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    #endregion
		
		public TransportPlace()
		{
			this._Job_QuotationRoutes = new EntitySet<Job_QuotationRoute>(new Action<Job_QuotationRoute>(this.attach_Job_QuotationRoutes), new Action<Job_QuotationRoute>(this.detach_Job_QuotationRoutes));
			this._Job_QuotationRoutes1 = new EntitySet<Job_QuotationRoute>(new Action<Job_QuotationRoute>(this.attach_Job_QuotationRoutes1), new Action<Job_QuotationRoute>(this.detach_Job_QuotationRoutes1));
			this._TransportCompany_Routes = new EntitySet<TransportCompany_Route>(new Action<TransportCompany_Route>(this.attach_TransportCompany_Routes), new Action<TransportCompany_Route>(this.detach_TransportCompany_Routes));
			this._TransportCompany_Routes1 = new EntitySet<TransportCompany_Route>(new Action<TransportCompany_Route>(this.attach_TransportCompany_Routes1), new Action<TransportCompany_Route>(this.detach_TransportCompany_Routes1));
			this._Sys_User = default(EntityRef<Sys_User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhoneNumber", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string PhoneNumber
		{
			get
			{
				return this._PhoneNumber;
			}
			set
			{
				if ((this._PhoneNumber != value))
				{
					this.OnPhoneNumberChanging(value);
					this.SendPropertyChanging();
					this._PhoneNumber = value;
					this.SendPropertyChanged("PhoneNumber");
					this.OnPhoneNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDeleted", DbType="Bit NOT NULL")]
		public bool IsDeleted
		{
			get
			{
				return this._IsDeleted;
			}
			set
			{
				if ((this._IsDeleted != value))
				{
					this.OnIsDeletedChanging(value);
					this.SendPropertyChanging();
					this._IsDeleted = value;
					this.SendPropertyChanged("IsDeleted");
					this.OnIsDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastestUpdated", DbType="DateTime NOT NULL")]
		public System.DateTime LastestUpdated
		{
			get
			{
				return this._LastestUpdated;
			}
			set
			{
				if ((this._LastestUpdated != value))
				{
					this.OnLastestUpdatedChanging(value);
					this.SendPropertyChanging();
					this._LastestUpdated = value;
					this.SendPropertyChanged("LastestUpdated");
					this.OnLastestUpdatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedBy", DbType="Int NOT NULL")]
		public int UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					if (this._Sys_User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._UpdatedBy = value;
					this.SendPropertyChanged("UpdatedBy");
					this.OnUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TransportPlace_Job_QuotationRoute", Storage="_Job_QuotationRoutes", ThisKey="ID", OtherKey="PlaceStart")]
		public EntitySet<Job_QuotationRoute> Job_QuotationRoutes
		{
			get
			{
				return this._Job_QuotationRoutes;
			}
			set
			{
				this._Job_QuotationRoutes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TransportPlace_Job_QuotationRoute1", Storage="_Job_QuotationRoutes1", ThisKey="ID", OtherKey="PlaceEnd")]
		public EntitySet<Job_QuotationRoute> Job_QuotationRoutes1
		{
			get
			{
				return this._Job_QuotationRoutes1;
			}
			set
			{
				this._Job_QuotationRoutes1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TransportPlace_TransportCompany_Route", Storage="_TransportCompany_Routes", ThisKey="ID", OtherKey="StartPoint")]
		public EntitySet<TransportCompany_Route> TransportCompany_Routes
		{
			get
			{
				return this._TransportCompany_Routes;
			}
			set
			{
				this._TransportCompany_Routes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TransportPlace_TransportCompany_Route1", Storage="_TransportCompany_Routes1", ThisKey="ID", OtherKey="EndPoint")]
		public EntitySet<TransportCompany_Route> TransportCompany_Routes1
		{
			get
			{
				return this._TransportCompany_Routes1;
			}
			set
			{
				this._TransportCompany_Routes1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Sys_User_TransportPlace", Storage="_Sys_User", ThisKey="UpdatedBy", OtherKey="ID", IsForeignKey=true)]
		public Sys_User Sys_User
		{
			get
			{
				return this._Sys_User.Entity;
			}
			set
			{
				Sys_User previousValue = this._Sys_User.Entity;
				if (((previousValue != value) 
							|| (this._Sys_User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Sys_User.Entity = null;
						previousValue.TransportPlaces.Remove(this);
					}
					this._Sys_User.Entity = value;
					if ((value != null))
					{
						value.TransportPlaces.Add(this);
						this._UpdatedBy = value.ID;
					}
					else
					{
						this._UpdatedBy = default(int);
					}
					this.SendPropertyChanged("Sys_User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Job_QuotationRoutes(Job_QuotationRoute entity)
		{
			this.SendPropertyChanging();
			entity.TransportPlace = this;
		}
		
		private void detach_Job_QuotationRoutes(Job_QuotationRoute entity)
		{
			this.SendPropertyChanging();
			entity.TransportPlace = null;
		}
		
		private void attach_Job_QuotationRoutes1(Job_QuotationRoute entity)
		{
			this.SendPropertyChanging();
			entity.TransportPlace1 = this;
		}
		
		private void detach_Job_QuotationRoutes1(Job_QuotationRoute entity)
		{
			this.SendPropertyChanging();
			entity.TransportPlace1 = null;
		}
		
		private void attach_TransportCompany_Routes(TransportCompany_Route entity)
		{
			this.SendPropertyChanging();
			entity.TransportPlace = this;
		}
		
		private void detach_TransportCompany_Routes(TransportCompany_Route entity)
		{
			this.SendPropertyChanging();
			entity.TransportPlace = null;
		}
		
		private void attach_TransportCompany_Routes1(TransportCompany_Route entity)
		{
			this.SendPropertyChanging();
			entity.TransportPlace1 = this;
		}
		
		private void detach_TransportCompany_Routes1(TransportCompany_Route entity)
		{
			this.SendPropertyChanging();
			entity.TransportPlace1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.VehicleLoads")]
	public partial class VehicleLoad : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Name;
		
		private string _Code;
		
		private string _Description;
		
		private double _FullLoad;
		
		private int _VehicleTypeID;
		
		private bool _IsDeleted;
		
		private int _UpdatedBy;
		
		private System.DateTime _LastestUpdated;
		
		private EntitySet<TransportCompany_VehicleType_Load> _TransportCompany_VehicleType_Loads;
		
		private EntityRef<Sys_User> _Sys_User;
		
		private EntityRef<VehicleType> _VehicleType;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnFullLoadChanging(double value);
    partial void OnFullLoadChanged();
    partial void OnVehicleTypeIDChanging(int value);
    partial void OnVehicleTypeIDChanged();
    partial void OnIsDeletedChanging(bool value);
    partial void OnIsDeletedChanged();
    partial void OnUpdatedByChanging(int value);
    partial void OnUpdatedByChanged();
    partial void OnLastestUpdatedChanging(System.DateTime value);
    partial void OnLastestUpdatedChanged();
    #endregion
		
		public VehicleLoad()
		{
			this._TransportCompany_VehicleType_Loads = new EntitySet<TransportCompany_VehicleType_Load>(new Action<TransportCompany_VehicleType_Load>(this.attach_TransportCompany_VehicleType_Loads), new Action<TransportCompany_VehicleType_Load>(this.detach_TransportCompany_VehicleType_Loads));
			this._Sys_User = default(EntityRef<Sys_User>);
			this._VehicleType = default(EntityRef<VehicleType>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NText NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FullLoad", DbType="Float NOT NULL")]
		public double FullLoad
		{
			get
			{
				return this._FullLoad;
			}
			set
			{
				if ((this._FullLoad != value))
				{
					this.OnFullLoadChanging(value);
					this.SendPropertyChanging();
					this._FullLoad = value;
					this.SendPropertyChanged("FullLoad");
					this.OnFullLoadChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VehicleTypeID", DbType="Int NOT NULL")]
		public int VehicleTypeID
		{
			get
			{
				return this._VehicleTypeID;
			}
			set
			{
				if ((this._VehicleTypeID != value))
				{
					if (this._VehicleType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnVehicleTypeIDChanging(value);
					this.SendPropertyChanging();
					this._VehicleTypeID = value;
					this.SendPropertyChanged("VehicleTypeID");
					this.OnVehicleTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDeleted", DbType="Bit NOT NULL")]
		public bool IsDeleted
		{
			get
			{
				return this._IsDeleted;
			}
			set
			{
				if ((this._IsDeleted != value))
				{
					this.OnIsDeletedChanging(value);
					this.SendPropertyChanging();
					this._IsDeleted = value;
					this.SendPropertyChanged("IsDeleted");
					this.OnIsDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedBy", DbType="Int NOT NULL")]
		public int UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					if (this._Sys_User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._UpdatedBy = value;
					this.SendPropertyChanged("UpdatedBy");
					this.OnUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastestUpdated", DbType="DateTime NOT NULL")]
		public System.DateTime LastestUpdated
		{
			get
			{
				return this._LastestUpdated;
			}
			set
			{
				if ((this._LastestUpdated != value))
				{
					this.OnLastestUpdatedChanging(value);
					this.SendPropertyChanging();
					this._LastestUpdated = value;
					this.SendPropertyChanged("LastestUpdated");
					this.OnLastestUpdatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="VehicleLoad_TransportCompany_VehicleType_Load", Storage="_TransportCompany_VehicleType_Loads", ThisKey="ID", OtherKey="VehicleLoadID")]
		public EntitySet<TransportCompany_VehicleType_Load> TransportCompany_VehicleType_Loads
		{
			get
			{
				return this._TransportCompany_VehicleType_Loads;
			}
			set
			{
				this._TransportCompany_VehicleType_Loads.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Sys_User_VehicleLoad", Storage="_Sys_User", ThisKey="UpdatedBy", OtherKey="ID", IsForeignKey=true)]
		public Sys_User Sys_User
		{
			get
			{
				return this._Sys_User.Entity;
			}
			set
			{
				Sys_User previousValue = this._Sys_User.Entity;
				if (((previousValue != value) 
							|| (this._Sys_User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Sys_User.Entity = null;
						previousValue.VehicleLoads.Remove(this);
					}
					this._Sys_User.Entity = value;
					if ((value != null))
					{
						value.VehicleLoads.Add(this);
						this._UpdatedBy = value.ID;
					}
					else
					{
						this._UpdatedBy = default(int);
					}
					this.SendPropertyChanged("Sys_User");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="VehicleType_VehicleLoad", Storage="_VehicleType", ThisKey="VehicleTypeID", OtherKey="ID", IsForeignKey=true)]
		public VehicleType VehicleType
		{
			get
			{
				return this._VehicleType.Entity;
			}
			set
			{
				VehicleType previousValue = this._VehicleType.Entity;
				if (((previousValue != value) 
							|| (this._VehicleType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._VehicleType.Entity = null;
						previousValue.VehicleLoads.Remove(this);
					}
					this._VehicleType.Entity = value;
					if ((value != null))
					{
						value.VehicleLoads.Add(this);
						this._VehicleTypeID = value.ID;
					}
					else
					{
						this._VehicleTypeID = default(int);
					}
					this.SendPropertyChanged("VehicleType");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TransportCompany_VehicleType_Loads(TransportCompany_VehicleType_Load entity)
		{
			this.SendPropertyChanging();
			entity.VehicleLoad = this;
		}
		
		private void detach_TransportCompany_VehicleType_Loads(TransportCompany_VehicleType_Load entity)
		{
			this.SendPropertyChanging();
			entity.VehicleLoad = null;
		}
	}
}
#pragma warning restore 1591
